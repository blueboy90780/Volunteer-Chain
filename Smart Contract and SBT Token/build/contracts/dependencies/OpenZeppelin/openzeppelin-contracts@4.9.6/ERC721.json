{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol_",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "1": "/Users/tuannguyen/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.9.6/contracts/token/ERC721/ERC721.sol",
    "10": "/Users/tuannguyen/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.9.6/contracts/utils/math/Math.sol",
    "11": "/Users/tuannguyen/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.9.6/contracts/utils/math/SignedMath.sol",
    "2": "/Users/tuannguyen/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.9.6/contracts/token/ERC721/IERC721.sol",
    "3": "/Users/tuannguyen/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.9.6/contracts/token/ERC721/IERC721Receiver.sol",
    "4": "/Users/tuannguyen/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.9.6/contracts/token/ERC721/extensions/IERC721Metadata.sol",
    "5": "/Users/tuannguyen/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.9.6/contracts/utils/Address.sol",
    "6": "/Users/tuannguyen/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.9.6/contracts/utils/Context.sol",
    "7": "/Users/tuannguyen/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.9.6/contracts/utils/Strings.sol",
    "8": "/Users/tuannguyen/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.9.6/contracts/utils/introspection/ERC165.sol",
    "9": "/Users/tuannguyen/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.9.6/contracts/utils/introspection/IERC165.sol"
  },
  "ast": {
    "absolutePath": "/Users/tuannguyen/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.9.6/contracts/token/ERC721/ERC721.sol",
    "exportedSymbols": {
      "Address": [
        1893
      ],
      "Context": [
        1402
      ],
      "ERC165": [
        2146
      ],
      "ERC721": [
        1372
      ],
      "IERC165": [
        2158
      ],
      "IERC721": [
        1518
      ],
      "IERC721Metadata": [
        1563
      ],
      "IERC721Receiver": [
        1536
      ],
      "Math": [
        3024
      ],
      "SignedMath": [
        3129
      ],
      "Strings": [
        2122
      ]
    },
    "id": 1373,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 447,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "107:23:1"
      },
      {
        "absolutePath": "/Users/tuannguyen/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.9.6/contracts/token/ERC721/IERC721.sol",
        "file": "./IERC721.sol",
        "id": 448,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1373,
        "sourceUnit": 1519,
        "src": "132:23:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/tuannguyen/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.9.6/contracts/token/ERC721/IERC721Receiver.sol",
        "file": "./IERC721Receiver.sol",
        "id": 449,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1373,
        "sourceUnit": 1537,
        "src": "156:31:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/tuannguyen/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.9.6/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "file": "./extensions/IERC721Metadata.sol",
        "id": 450,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1373,
        "sourceUnit": 1564,
        "src": "188:42:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/tuannguyen/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.9.6/contracts/utils/Address.sol",
        "file": "../../utils/Address.sol",
        "id": 451,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1373,
        "sourceUnit": 1894,
        "src": "231:33:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/tuannguyen/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.9.6/contracts/utils/Context.sol",
        "file": "../../utils/Context.sol",
        "id": 452,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1373,
        "sourceUnit": 1403,
        "src": "265:33:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/tuannguyen/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.9.6/contracts/utils/Strings.sol",
        "file": "../../utils/Strings.sol",
        "id": 453,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1373,
        "sourceUnit": 2123,
        "src": "299:33:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/tuannguyen/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.9.6/contracts/utils/introspection/ERC165.sol",
        "file": "../../utils/introspection/ERC165.sol",
        "id": 454,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1373,
        "sourceUnit": 2147,
        "src": "333:46:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 456,
              "name": "Context",
              "nameLocations": [
                "647:7:1"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1402,
              "src": "647:7:1"
            },
            "id": 457,
            "nodeType": "InheritanceSpecifier",
            "src": "647:7:1"
          },
          {
            "baseName": {
              "id": 458,
              "name": "ERC165",
              "nameLocations": [
                "656:6:1"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2146,
              "src": "656:6:1"
            },
            "id": 459,
            "nodeType": "InheritanceSpecifier",
            "src": "656:6:1"
          },
          {
            "baseName": {
              "id": 460,
              "name": "IERC721",
              "nameLocations": [
                "664:7:1"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1518,
              "src": "664:7:1"
            },
            "id": 461,
            "nodeType": "InheritanceSpecifier",
            "src": "664:7:1"
          },
          {
            "baseName": {
              "id": 462,
              "name": "IERC721Metadata",
              "nameLocations": [
                "673:15:1"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1563,
              "src": "673:15:1"
            },
            "id": 463,
            "nodeType": "InheritanceSpecifier",
            "src": "673:15:1"
          }
        ],
        "canonicalName": "ERC721",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 455,
          "nodeType": "StructuredDocumentation",
          "src": "381:246:1",
          "text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
        },
        "fullyImplemented": true,
        "id": 1372,
        "linearizedBaseContracts": [
          1372,
          1563,
          1518,
          2146,
          2158,
          1402
        ],
        "name": "ERC721",
        "nameLocation": "637:6:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "global": false,
            "id": 466,
            "libraryName": {
              "id": 464,
              "name": "Address",
              "nameLocations": [
                "701:7:1"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1893,
              "src": "701:7:1"
            },
            "nodeType": "UsingForDirective",
            "src": "695:26:1",
            "typeName": {
              "id": 465,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "713:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "global": false,
            "id": 469,
            "libraryName": {
              "id": 467,
              "name": "Strings",
              "nameLocations": [
                "732:7:1"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2122,
              "src": "732:7:1"
            },
            "nodeType": "UsingForDirective",
            "src": "726:26:1",
            "typeName": {
              "id": 468,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "744:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 471,
            "mutability": "mutable",
            "name": "_name",
            "nameLocation": "791:5:1",
            "nodeType": "VariableDeclaration",
            "scope": 1372,
            "src": "776:20:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 470,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "776:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 473,
            "mutability": "mutable",
            "name": "_symbol",
            "nameLocation": "838:7:1",
            "nodeType": "VariableDeclaration",
            "scope": 1372,
            "src": "823:22:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 472,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "823:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 477,
            "mutability": "mutable",
            "name": "_owners",
            "nameLocation": "934:7:1",
            "nodeType": "VariableDeclaration",
            "scope": 1372,
            "src": "898:43:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 476,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 474,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "906:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "898:27:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 475,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "917:7:1",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 481,
            "mutability": "mutable",
            "name": "_balances",
            "nameLocation": "1028:9:1",
            "nodeType": "VariableDeclaration",
            "scope": 1372,
            "src": "992:45:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 480,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 478,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1000:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "992:27:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 479,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1011:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 485,
            "mutability": "mutable",
            "name": "_tokenApprovals",
            "nameLocation": "1129:15:1",
            "nodeType": "VariableDeclaration",
            "scope": 1372,
            "src": "1093:51:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 484,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 482,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1101:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1093:27:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 483,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1112:7:1",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 491,
            "mutability": "mutable",
            "name": "_operatorApprovals",
            "nameLocation": "1252:18:1",
            "nodeType": "VariableDeclaration",
            "scope": 1372,
            "src": "1199:71:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(address => mapping(address => bool))"
            },
            "typeName": {
              "id": 490,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 486,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1207:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1199:44:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(address => mapping(address => bool))"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 489,
                "keyName": "",
                "keyNameLocation": "-1:-1:-1",
                "keyType": {
                  "id": 487,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1226:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "1218:24:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueName": "",
                "valueNameLocation": "-1:-1:-1",
                "valueType": {
                  "id": 488,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1237:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 507,
              "nodeType": "Block",
              "src": "1446:57:1",
              "statements": [
                {
                  "expression": {
                    "id": 501,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 499,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 471,
                      "src": "1456:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 500,
                      "name": "name_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 494,
                      "src": "1464:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1456:13:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 502,
                  "nodeType": "ExpressionStatement",
                  "src": "1456:13:1"
                },
                {
                  "expression": {
                    "id": 505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 503,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 473,
                      "src": "1479:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 504,
                      "name": "symbol_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 496,
                      "src": "1489:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1479:17:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 506,
                  "nodeType": "ExpressionStatement",
                  "src": "1479:17:1"
                }
              ]
            },
            "documentation": {
              "id": 492,
              "nodeType": "StructuredDocumentation",
              "src": "1277:108:1",
              "text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
            },
            "id": 508,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 497,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 494,
                  "mutability": "mutable",
                  "name": "name_",
                  "nameLocation": "1416:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 508,
                  "src": "1402:19:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 493,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1402:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 496,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nameLocation": "1437:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 508,
                  "src": "1423:21:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 495,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1423:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1401:44:1"
            },
            "returnParameters": {
              "id": 498,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1446:0:1"
            },
            "scope": 1372,
            "src": "1390:113:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2145,
              2157
            ],
            "body": {
              "id": 538,
              "nodeType": "Block",
              "src": "1678:192:1",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 536,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 531,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 524,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 519,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 511,
                          "src": "1707:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 521,
                                "name": "IERC721",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1518,
                                "src": "1727:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721_$1518_$",
                                  "typeString": "type(contract IERC721)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721_$1518_$",
                                  "typeString": "type(contract IERC721)"
                                }
                              ],
                              "id": 520,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "1722:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 522,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1722:13:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$1518",
                              "typeString": "type(contract IERC721)"
                            }
                          },
                          "id": 523,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "1736:11:1",
                          "memberName": "interfaceId",
                          "nodeType": "MemberAccess",
                          "src": "1722:25:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "src": "1707:40:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "||",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 530,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 525,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 511,
                          "src": "1763:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 527,
                                "name": "IERC721Metadata",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1563,
                                "src": "1783:15:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1563_$",
                                  "typeString": "type(contract IERC721Metadata)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1563_$",
                                  "typeString": "type(contract IERC721Metadata)"
                                }
                              ],
                              "id": 526,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "1778:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 528,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1778:21:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$1563",
                              "typeString": "type(contract IERC721Metadata)"
                            }
                          },
                          "id": 529,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "1800:11:1",
                          "memberName": "interfaceId",
                          "nodeType": "MemberAccess",
                          "src": "1778:33:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "src": "1763:48:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "1707:104:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 534,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 511,
                          "src": "1851:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "id": 532,
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -25,
                          "src": "1827:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_super$_ERC721_$1372_$",
                            "typeString": "type(contract super ERC721)"
                          }
                        },
                        "id": 533,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1833:17:1",
                        "memberName": "supportsInterface",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2145,
                        "src": "1827:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                          "typeString": "function (bytes4) view returns (bool)"
                        }
                      },
                      "id": 535,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1827:36:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1707:156:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 518,
                  "id": 537,
                  "nodeType": "Return",
                  "src": "1688:175:1"
                }
              ]
            },
            "documentation": {
              "id": 509,
              "nodeType": "StructuredDocumentation",
              "src": "1509:56:1",
              "text": " @dev See {IERC165-supportsInterface}."
            },
            "functionSelector": "01ffc9a7",
            "id": 539,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "1579:17:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 515,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 513,
                  "name": "ERC165",
                  "nameLocations": [
                    "1646:6:1"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2146,
                  "src": "1646:6:1"
                },
                {
                  "id": 514,
                  "name": "IERC165",
                  "nameLocations": [
                    "1654:7:1"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2158,
                  "src": "1654:7:1"
                }
              ],
              "src": "1637:25:1"
            },
            "parameters": {
              "id": 512,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 511,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "1604:11:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 539,
                  "src": "1597:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 510,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "1597:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1596:20:1"
            },
            "returnParameters": {
              "id": 518,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 517,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 539,
                  "src": "1672:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 516,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1672:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1671:6:1"
            },
            "scope": 1372,
            "src": "1570:300:1",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1443
            ],
            "body": {
              "id": 562,
              "nodeType": "Block",
              "src": "2010:123:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 554,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 549,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 542,
                          "src": "2028:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 552,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2045:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 551,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2037:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 550,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2037:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 553,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2037:10:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2028:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a2061646472657373207a65726f206973206e6f7420612076616c6964206f776e6572",
                        "id": 555,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2049:43:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159",
                          "typeString": "literal_string \"ERC721: address zero is not a valid owner\""
                        },
                        "value": "ERC721: address zero is not a valid owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159",
                          "typeString": "literal_string \"ERC721: address zero is not a valid owner\""
                        }
                      ],
                      "id": 548,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2020:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 556,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2020:73:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 557,
                  "nodeType": "ExpressionStatement",
                  "src": "2020:73:1"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 558,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 481,
                      "src": "2110:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 560,
                    "indexExpression": {
                      "id": 559,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 542,
                      "src": "2120:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2110:16:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 547,
                  "id": 561,
                  "nodeType": "Return",
                  "src": "2103:23:1"
                }
              ]
            },
            "documentation": {
              "id": 540,
              "nodeType": "StructuredDocumentation",
              "src": "1876:48:1",
              "text": " @dev See {IERC721-balanceOf}."
            },
            "functionSelector": "70a08231",
            "id": 563,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "1938:9:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 544,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1983:8:1"
            },
            "parameters": {
              "id": 543,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 542,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "1956:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 563,
                  "src": "1948:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 541,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1948:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1947:15:1"
            },
            "returnParameters": {
              "id": 547,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 546,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 563,
                  "src": "2001:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 545,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2001:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2000:9:1"
            },
            "scope": 1372,
            "src": "1929:204:1",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1451
            ],
            "body": {
              "id": 590,
              "nodeType": "Block",
              "src": "2271:138:1",
              "statements": [
                {
                  "assignments": [
                    573
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 573,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "2289:5:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 590,
                      "src": "2281:13:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 572,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2281:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 577,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 575,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 566,
                        "src": "2306:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 574,
                      "name": "_ownerOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 873,
                      "src": "2297:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 576,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2297:17:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2281:33:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 584,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 579,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 573,
                          "src": "2332:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 582,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2349:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 581,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2341:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 580,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2341:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 583,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2341:10:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2332:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20696e76616c696420746f6b656e204944",
                        "id": 585,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2353:26:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f",
                          "typeString": "literal_string \"ERC721: invalid token ID\""
                        },
                        "value": "ERC721: invalid token ID"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f",
                          "typeString": "literal_string \"ERC721: invalid token ID\""
                        }
                      ],
                      "id": 578,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2324:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 586,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2324:56:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 587,
                  "nodeType": "ExpressionStatement",
                  "src": "2324:56:1"
                },
                {
                  "expression": {
                    "id": 588,
                    "name": "owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 573,
                    "src": "2397:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 571,
                  "id": 589,
                  "nodeType": "Return",
                  "src": "2390:12:1"
                }
              ]
            },
            "documentation": {
              "id": 564,
              "nodeType": "StructuredDocumentation",
              "src": "2139:46:1",
              "text": " @dev See {IERC721-ownerOf}."
            },
            "functionSelector": "6352211e",
            "id": 591,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ownerOf",
            "nameLocation": "2199:7:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 568,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2244:8:1"
            },
            "parameters": {
              "id": 567,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 566,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2215:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 591,
                  "src": "2207:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 565,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2207:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2206:17:1"
            },
            "returnParameters": {
              "id": 571,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 570,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 591,
                  "src": "2262:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 569,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2262:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2261:9:1"
            },
            "scope": 1372,
            "src": "2190:219:1",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1548
            ],
            "body": {
              "id": 600,
              "nodeType": "Block",
              "src": "2540:29:1",
              "statements": [
                {
                  "expression": {
                    "id": 598,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 471,
                    "src": "2557:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 597,
                  "id": 599,
                  "nodeType": "Return",
                  "src": "2550:12:1"
                }
              ]
            },
            "documentation": {
              "id": 592,
              "nodeType": "StructuredDocumentation",
              "src": "2415:51:1",
              "text": " @dev See {IERC721Metadata-name}."
            },
            "functionSelector": "06fdde03",
            "id": 601,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nameLocation": "2480:4:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 594,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2507:8:1"
            },
            "parameters": {
              "id": 593,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2484:2:1"
            },
            "returnParameters": {
              "id": 597,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 596,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 601,
                  "src": "2525:13:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 595,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2525:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2524:15:1"
            },
            "scope": 1372,
            "src": "2471:98:1",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1554
            ],
            "body": {
              "id": 610,
              "nodeType": "Block",
              "src": "2704:31:1",
              "statements": [
                {
                  "expression": {
                    "id": 608,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 473,
                    "src": "2721:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 607,
                  "id": 609,
                  "nodeType": "Return",
                  "src": "2714:14:1"
                }
              ]
            },
            "documentation": {
              "id": 602,
              "nodeType": "StructuredDocumentation",
              "src": "2575:53:1",
              "text": " @dev See {IERC721Metadata-symbol}."
            },
            "functionSelector": "95d89b41",
            "id": 611,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nameLocation": "2642:6:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 604,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2671:8:1"
            },
            "parameters": {
              "id": 603,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2648:2:1"
            },
            "returnParameters": {
              "id": 607,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 606,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 611,
                  "src": "2689:13:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 605,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2689:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2688:15:1"
            },
            "scope": 1372,
            "src": "2633:102:1",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1562
            ],
            "body": {
              "id": 649,
              "nodeType": "Block",
              "src": "2889:188:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 621,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 614,
                        "src": "2914:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 620,
                      "name": "_requireMinted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1268,
                      "src": "2899:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) view"
                      }
                    },
                    "id": 622,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2899:23:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 623,
                  "nodeType": "ExpressionStatement",
                  "src": "2899:23:1"
                },
                {
                  "assignments": [
                    625
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 625,
                      "mutability": "mutable",
                      "name": "baseURI",
                      "nameLocation": "2947:7:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 649,
                      "src": "2933:21:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 624,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "2933:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 628,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 626,
                      "name": "_baseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 659,
                      "src": "2957:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
                        "typeString": "function () view returns (string memory)"
                      }
                    },
                    "id": 627,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2957:10:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2933:34:1"
                },
                {
                  "expression": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 635,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 631,
                              "name": "baseURI",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 625,
                              "src": "2990:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 630,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2984:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                              "typeString": "type(bytes storage pointer)"
                            },
                            "typeName": {
                              "id": 629,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "2984:5:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 632,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2984:14:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 633,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2999:6:1",
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "2984:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 634,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3008:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "2984:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "hexValue": "",
                      "id": 646,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3068:2:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                        "typeString": "literal_string \"\""
                      },
                      "value": ""
                    },
                    "id": 647,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "2984:86:1",
                    "trueExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 640,
                              "name": "baseURI",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 625,
                              "src": "3036:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 641,
                                  "name": "tokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 614,
                                  "src": "3045:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 642,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3053:8:1",
                                "memberName": "toString",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1952,
                                "src": "3045:16:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
                                  "typeString": "function (uint256) pure returns (string memory)"
                                }
                              },
                              "id": 643,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3045:18:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "expression": {
                              "id": 638,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "3019:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 639,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "3023:12:1",
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "3019:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 644,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3019:45:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 637,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3012:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                          "typeString": "type(string storage pointer)"
                        },
                        "typeName": {
                          "id": 636,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "3012:6:1",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 645,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3012:53:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 619,
                  "id": 648,
                  "nodeType": "Return",
                  "src": "2977:93:1"
                }
              ]
            },
            "documentation": {
              "id": 612,
              "nodeType": "StructuredDocumentation",
              "src": "2741:55:1",
              "text": " @dev See {IERC721Metadata-tokenURI}."
            },
            "functionSelector": "c87b56dd",
            "id": 650,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "2810:8:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 616,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2856:8:1"
            },
            "parameters": {
              "id": 615,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 614,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2827:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 650,
                  "src": "2819:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 613,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2819:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2818:17:1"
            },
            "returnParameters": {
              "id": 619,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 618,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 650,
                  "src": "2874:13:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 617,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2874:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2873:15:1"
            },
            "scope": 1372,
            "src": "2801:276:1",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 658,
              "nodeType": "Block",
              "src": "3385:26:1",
              "statements": [
                {
                  "expression": {
                    "hexValue": "",
                    "id": 656,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3402:2:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                      "typeString": "literal_string \"\""
                    },
                    "value": ""
                  },
                  "functionReturnParameters": 655,
                  "id": 657,
                  "nodeType": "Return",
                  "src": "3395:9:1"
                }
              ]
            },
            "documentation": {
              "id": 651,
              "nodeType": "StructuredDocumentation",
              "src": "3083:231:1",
              "text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."
            },
            "id": 659,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_baseURI",
            "nameLocation": "3328:8:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 652,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3336:2:1"
            },
            "returnParameters": {
              "id": 655,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 654,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 659,
                  "src": "3370:13:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 653,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3370:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3369:15:1"
            },
            "scope": 1372,
            "src": "3319:92:1",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              1491
            ],
            "body": {
              "id": 701,
              "nodeType": "Block",
              "src": "3538:336:1",
              "statements": [
                {
                  "assignments": [
                    669
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 669,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "3556:5:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 701,
                      "src": "3548:13:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 668,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3548:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 674,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 672,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 664,
                        "src": "3579:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 670,
                        "name": "ERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1372,
                        "src": "3564:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721_$1372_$",
                          "typeString": "type(contract ERC721)"
                        }
                      },
                      "id": 671,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3571:7:1",
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 591,
                      "src": "3564:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 673,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3564:23:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3548:39:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 678,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 676,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 662,
                          "src": "3605:2:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 677,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 669,
                          "src": "3611:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3605:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20617070726f76616c20746f2063757272656e74206f776e6572",
                        "id": 679,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3618:35:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
                          "typeString": "literal_string \"ERC721: approval to current owner\""
                        },
                        "value": "ERC721: approval to current owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
                          "typeString": "literal_string \"ERC721: approval to current owner\""
                        }
                      ],
                      "id": 675,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3597:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 680,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3597:57:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 681,
                  "nodeType": "ExpressionStatement",
                  "src": "3597:57:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 692,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 686,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 683,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1384,
                              "src": "3686:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 684,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3686:12:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 685,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 669,
                            "src": "3702:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3686:21:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 688,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 669,
                              "src": "3728:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 689,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1384,
                                "src": "3735:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 690,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3735:12:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 687,
                            "name": "isApprovedForAll",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 755,
                            "src": "3711:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address,address) view returns (bool)"
                            }
                          },
                          "id": 691,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3711:37:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3686:62:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c",
                        "id": 693,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3762:63:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83",
                          "typeString": "literal_string \"ERC721: approve caller is not token owner or approved for all\""
                        },
                        "value": "ERC721: approve caller is not token owner or approved for all"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83",
                          "typeString": "literal_string \"ERC721: approve caller is not token owner or approved for all\""
                        }
                      ],
                      "id": 682,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3665:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 694,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3665:170:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 695,
                  "nodeType": "ExpressionStatement",
                  "src": "3665:170:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 697,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 662,
                        "src": "3855:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 698,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 664,
                        "src": "3859:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 696,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1222,
                      "src": "3846:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 699,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3846:21:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 700,
                  "nodeType": "ExpressionStatement",
                  "src": "3846:21:1"
                }
              ]
            },
            "documentation": {
              "id": 660,
              "nodeType": "StructuredDocumentation",
              "src": "3417:46:1",
              "text": " @dev See {IERC721-approve}."
            },
            "functionSelector": "095ea7b3",
            "id": 702,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "3477:7:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 666,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3529:8:1"
            },
            "parameters": {
              "id": 665,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 662,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "3493:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 702,
                  "src": "3485:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 661,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3485:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 664,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3505:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 702,
                  "src": "3497:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 663,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3497:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3484:29:1"
            },
            "returnParameters": {
              "id": 667,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3538:0:1"
            },
            "scope": 1372,
            "src": "3468:406:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1507
            ],
            "body": {
              "id": 719,
              "nodeType": "Block",
              "src": "4020:82:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 712,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 705,
                        "src": "4045:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 711,
                      "name": "_requireMinted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1268,
                      "src": "4030:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) view"
                      }
                    },
                    "id": 713,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4030:23:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 714,
                  "nodeType": "ExpressionStatement",
                  "src": "4030:23:1"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 715,
                      "name": "_tokenApprovals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 485,
                      "src": "4071:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                        "typeString": "mapping(uint256 => address)"
                      }
                    },
                    "id": 717,
                    "indexExpression": {
                      "id": 716,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 705,
                      "src": "4087:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4071:24:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 710,
                  "id": 718,
                  "nodeType": "Return",
                  "src": "4064:31:1"
                }
              ]
            },
            "documentation": {
              "id": 703,
              "nodeType": "StructuredDocumentation",
              "src": "3880:50:1",
              "text": " @dev See {IERC721-getApproved}."
            },
            "functionSelector": "081812fc",
            "id": 720,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getApproved",
            "nameLocation": "3944:11:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 707,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3993:8:1"
            },
            "parameters": {
              "id": 706,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 705,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3964:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 720,
                  "src": "3956:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 704,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3956:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3955:17:1"
            },
            "returnParameters": {
              "id": 710,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 709,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 720,
                  "src": "4011:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 708,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4011:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4010:9:1"
            },
            "scope": 1372,
            "src": "3935:167:1",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1499
            ],
            "body": {
              "id": 736,
              "nodeType": "Block",
              "src": "4253:69:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 730,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1384,
                          "src": "4282:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 731,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4282:12:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 732,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 723,
                        "src": "4296:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 733,
                        "name": "approved",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 725,
                        "src": "4306:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 729,
                      "name": "_setApprovalForAll",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1254,
                      "src": "4263:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,bool)"
                      }
                    },
                    "id": 734,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4263:52:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 735,
                  "nodeType": "ExpressionStatement",
                  "src": "4263:52:1"
                }
              ]
            },
            "documentation": {
              "id": 721,
              "nodeType": "StructuredDocumentation",
              "src": "4108:56:1",
              "text": " @dev See {IERC721-setApprovalForAll}."
            },
            "functionSelector": "a22cb465",
            "id": 737,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setApprovalForAll",
            "nameLocation": "4178:17:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 727,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4244:8:1"
            },
            "parameters": {
              "id": 726,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 723,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "4204:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 737,
                  "src": "4196:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 722,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4196:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 725,
                  "mutability": "mutable",
                  "name": "approved",
                  "nameLocation": "4219:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 737,
                  "src": "4214:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 724,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4214:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4195:33:1"
            },
            "returnParameters": {
              "id": 728,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4253:0:1"
            },
            "scope": 1372,
            "src": "4169:153:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1517
            ],
            "body": {
              "id": 754,
              "nodeType": "Block",
              "src": "4491:59:1",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 748,
                        "name": "_operatorApprovals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 491,
                        "src": "4508:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                          "typeString": "mapping(address => mapping(address => bool))"
                        }
                      },
                      "id": 750,
                      "indexExpression": {
                        "id": 749,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 740,
                        "src": "4527:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4508:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 752,
                    "indexExpression": {
                      "id": 751,
                      "name": "operator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 742,
                      "src": "4534:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4508:35:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 747,
                  "id": 753,
                  "nodeType": "Return",
                  "src": "4501:42:1"
                }
              ]
            },
            "documentation": {
              "id": 738,
              "nodeType": "StructuredDocumentation",
              "src": "4328:55:1",
              "text": " @dev See {IERC721-isApprovedForAll}."
            },
            "functionSelector": "e985e9c5",
            "id": 755,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isApprovedForAll",
            "nameLocation": "4397:16:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 744,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4467:8:1"
            },
            "parameters": {
              "id": 743,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 740,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "4422:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 755,
                  "src": "4414:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 739,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4414:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 742,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "4437:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 755,
                  "src": "4429:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 741,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4429:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4413:33:1"
            },
            "returnParameters": {
              "id": 747,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 746,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 755,
                  "src": "4485:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 745,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4485:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4484:6:1"
            },
            "scope": 1372,
            "src": "4388:162:1",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1483
            ],
            "body": {
              "id": 781,
              "nodeType": "Block",
              "src": "4701:207:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 768,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1384,
                              "src": "4790:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 769,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4790:12:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 770,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 762,
                            "src": "4804:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 767,
                          "name": "_isApprovedOrOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 925,
                          "src": "4771:18:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) view returns (bool)"
                          }
                        },
                        "id": 771,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4771:41:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564",
                        "id": 772,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4814:47:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
                          "typeString": "literal_string \"ERC721: caller is not token owner or approved\""
                        },
                        "value": "ERC721: caller is not token owner or approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
                          "typeString": "literal_string \"ERC721: caller is not token owner or approved\""
                        }
                      ],
                      "id": 766,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4763:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 773,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4763:99:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 774,
                  "nodeType": "ExpressionStatement",
                  "src": "4763:99:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 776,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 758,
                        "src": "4883:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 777,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 760,
                        "src": "4889:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 778,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 762,
                        "src": "4893:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 775,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1198,
                      "src": "4873:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 779,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4873:28:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 780,
                  "nodeType": "ExpressionStatement",
                  "src": "4873:28:1"
                }
              ]
            },
            "documentation": {
              "id": 756,
              "nodeType": "StructuredDocumentation",
              "src": "4556:51:1",
              "text": " @dev See {IERC721-transferFrom}."
            },
            "functionSelector": "23b872dd",
            "id": 782,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "4621:12:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 764,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4692:8:1"
            },
            "parameters": {
              "id": 763,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 758,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "4642:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 782,
                  "src": "4634:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 757,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4634:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 760,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "4656:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 782,
                  "src": "4648:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 759,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4648:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 762,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "4668:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 782,
                  "src": "4660:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 761,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4660:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4633:43:1"
            },
            "returnParameters": {
              "id": 765,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4701:0:1"
            },
            "scope": 1372,
            "src": "4612:296:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1473
            ],
            "body": {
              "id": 800,
              "nodeType": "Block",
              "src": "5067:56:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 794,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 785,
                        "src": "5094:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 795,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 787,
                        "src": "5100:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 796,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 789,
                        "src": "5104:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 797,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5113:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 793,
                      "name": "safeTransferFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        801,
                        831
                      ],
                      "referencedDeclaration": 831,
                      "src": "5077:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 798,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5077:39:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 799,
                  "nodeType": "ExpressionStatement",
                  "src": "5077:39:1"
                }
              ]
            },
            "documentation": {
              "id": 783,
              "nodeType": "StructuredDocumentation",
              "src": "4914:55:1",
              "text": " @dev See {IERC721-safeTransferFrom}."
            },
            "functionSelector": "42842e0e",
            "id": 801,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nameLocation": "4983:16:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 791,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5058:8:1"
            },
            "parameters": {
              "id": 790,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 785,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "5008:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 801,
                  "src": "5000:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 784,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5000:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 787,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "5022:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 801,
                  "src": "5014:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 786,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5014:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 789,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "5034:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 801,
                  "src": "5026:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 788,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5026:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4999:43:1"
            },
            "returnParameters": {
              "id": 792,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5067:0:1"
            },
            "scope": 1372,
            "src": "4974:149:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1463
            ],
            "body": {
              "id": 830,
              "nodeType": "Block",
              "src": "5301:164:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 816,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1384,
                              "src": "5338:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 817,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5338:12:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 818,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 808,
                            "src": "5352:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 815,
                          "name": "_isApprovedOrOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 925,
                          "src": "5319:18:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) view returns (bool)"
                          }
                        },
                        "id": 819,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5319:41:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564",
                        "id": 820,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5362:47:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
                          "typeString": "literal_string \"ERC721: caller is not token owner or approved\""
                        },
                        "value": "ERC721: caller is not token owner or approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
                          "typeString": "literal_string \"ERC721: caller is not token owner or approved\""
                        }
                      ],
                      "id": 814,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5311:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 821,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5311:99:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 822,
                  "nodeType": "ExpressionStatement",
                  "src": "5311:99:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 824,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 804,
                        "src": "5434:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 825,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 806,
                        "src": "5440:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 826,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 808,
                        "src": "5444:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 827,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 810,
                        "src": "5453:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 823,
                      "name": "_safeTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 860,
                      "src": "5420:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 828,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5420:38:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 829,
                  "nodeType": "ExpressionStatement",
                  "src": "5420:38:1"
                }
              ]
            },
            "documentation": {
              "id": 802,
              "nodeType": "StructuredDocumentation",
              "src": "5129:55:1",
              "text": " @dev See {IERC721-safeTransferFrom}."
            },
            "functionSelector": "b88d4fde",
            "id": 831,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nameLocation": "5198:16:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 812,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5292:8:1"
            },
            "parameters": {
              "id": 811,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 804,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "5223:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 831,
                  "src": "5215:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 803,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5215:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 806,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "5237:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 831,
                  "src": "5229:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 805,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5229:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 808,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "5249:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 831,
                  "src": "5241:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 807,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5241:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 810,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "5271:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 831,
                  "src": "5258:17:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 809,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5258:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5214:62:1"
            },
            "returnParameters": {
              "id": 813,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5301:0:1"
            },
            "scope": 1372,
            "src": "5189:276:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 859,
              "nodeType": "Block",
              "src": "6428:165:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 844,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 834,
                        "src": "6448:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 845,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 836,
                        "src": "6454:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 846,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 838,
                        "src": "6458:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 843,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1198,
                      "src": "6438:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 847,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6438:28:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 848,
                  "nodeType": "ExpressionStatement",
                  "src": "6438:28:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 851,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 834,
                            "src": "6507:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 852,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 836,
                            "src": "6513:2:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 853,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 838,
                            "src": "6517:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 854,
                            "name": "data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 840,
                            "src": "6526:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 850,
                          "name": "_checkOnERC721Received",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1330,
                          "src": "6484:22:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256,bytes memory) returns (bool)"
                          }
                        },
                        "id": 855,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6484:47:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
                        "id": 856,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6533:52:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        },
                        "value": "ERC721: transfer to non ERC721Receiver implementer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        }
                      ],
                      "id": 849,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6476:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 857,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6476:110:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 858,
                  "nodeType": "ExpressionStatement",
                  "src": "6476:110:1"
                }
              ]
            },
            "documentation": {
              "id": 832,
              "nodeType": "StructuredDocumentation",
              "src": "5471:850:1",
              "text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
            },
            "id": 860,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeTransfer",
            "nameLocation": "6335:13:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 841,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 834,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "6357:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 860,
                  "src": "6349:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 833,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6349:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 836,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "6371:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 860,
                  "src": "6363:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 835,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6363:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 838,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "6383:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 860,
                  "src": "6375:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 837,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6375:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 840,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "6405:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 860,
                  "src": "6392:17:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 839,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6392:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6348:62:1"
            },
            "returnParameters": {
              "id": 842,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6428:0:1"
            },
            "scope": 1372,
            "src": "6326:267:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 872,
              "nodeType": "Block",
              "src": "6777:40:1",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 868,
                      "name": "_owners",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 477,
                      "src": "6794:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                        "typeString": "mapping(uint256 => address)"
                      }
                    },
                    "id": 870,
                    "indexExpression": {
                      "id": 869,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 863,
                      "src": "6802:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6794:16:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 867,
                  "id": 871,
                  "nodeType": "Return",
                  "src": "6787:23:1"
                }
              ]
            },
            "documentation": {
              "id": 861,
              "nodeType": "StructuredDocumentation",
              "src": "6599:98:1",
              "text": " @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist"
            },
            "id": 873,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_ownerOf",
            "nameLocation": "6711:8:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 864,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 863,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "6728:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 873,
                  "src": "6720:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 862,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6720:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6719:17:1"
            },
            "returnParameters": {
              "id": 867,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 866,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 873,
                  "src": "6768:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 865,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6768:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6767:9:1"
            },
            "scope": 1372,
            "src": "6702:115:1",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 890,
              "nodeType": "Block",
              "src": "7191:55:1",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 888,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 882,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 876,
                          "src": "7217:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 881,
                        "name": "_ownerOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 873,
                        "src": "7208:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                          "typeString": "function (uint256) view returns (address)"
                        }
                      },
                      "id": 883,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7208:17:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 886,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7237:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 885,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "7229:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 884,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7229:7:1",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 887,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7229:10:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7208:31:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 880,
                  "id": 889,
                  "nodeType": "Return",
                  "src": "7201:38:1"
                }
              ]
            },
            "documentation": {
              "id": 874,
              "nodeType": "StructuredDocumentation",
              "src": "6823:292:1",
              "text": " @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted (`_mint`),\n and stop existing when they are burned (`_burn`)."
            },
            "id": 891,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_exists",
            "nameLocation": "7129:7:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 877,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 876,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "7145:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 891,
                  "src": "7137:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 875,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7137:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7136:17:1"
            },
            "returnParameters": {
              "id": 880,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 879,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 891,
                  "src": "7185:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 878,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7185:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7184:6:1"
            },
            "scope": 1372,
            "src": "7120:126:1",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 924,
              "nodeType": "Block",
              "src": "7503:162:1",
              "statements": [
                {
                  "assignments": [
                    902
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 902,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "7521:5:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 924,
                      "src": "7513:13:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 901,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7513:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 907,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 905,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 896,
                        "src": "7544:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 903,
                        "name": "ERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1372,
                        "src": "7529:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721_$1372_$",
                          "typeString": "type(contract ERC721)"
                        }
                      },
                      "id": 904,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7536:7:1",
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 591,
                      "src": "7529:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 906,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7529:23:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7513:39:1"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 921,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 915,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 910,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 908,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 894,
                              "src": "7570:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 909,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 902,
                              "src": "7581:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "7570:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 912,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 902,
                                "src": "7607:5:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 913,
                                "name": "spender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 894,
                                "src": "7614:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 911,
                              "name": "isApprovedForAll",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 755,
                              "src": "7590:16:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                                "typeString": "function (address,address) view returns (bool)"
                              }
                            },
                            "id": 914,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7590:32:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "7570:52:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 920,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 917,
                                "name": "tokenId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 896,
                                "src": "7638:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 916,
                              "name": "getApproved",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 720,
                              "src": "7626:11:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                                "typeString": "function (uint256) view returns (address)"
                              }
                            },
                            "id": 918,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7626:20:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 919,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 894,
                            "src": "7650:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7626:31:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "7570:87:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 922,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "7569:89:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 900,
                  "id": 923,
                  "nodeType": "Return",
                  "src": "7562:96:1"
                }
              ]
            },
            "documentation": {
              "id": 892,
              "nodeType": "StructuredDocumentation",
              "src": "7252:147:1",
              "text": " @dev Returns whether `spender` is allowed to manage `tokenId`.\n Requirements:\n - `tokenId` must exist."
            },
            "id": 925,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isApprovedOrOwner",
            "nameLocation": "7413:18:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 897,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 894,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "7440:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 925,
                  "src": "7432:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 893,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7432:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 896,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "7457:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 925,
                  "src": "7449:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 895,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7449:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7431:34:1"
            },
            "returnParameters": {
              "id": 900,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 899,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 925,
                  "src": "7497:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 898,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7497:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7496:6:1"
            },
            "scope": 1372,
            "src": "7404:261:1",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 939,
              "nodeType": "Block",
              "src": "8060:43:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 934,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 928,
                        "src": "8080:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 935,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 930,
                        "src": "8084:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 936,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8093:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 933,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        940,
                        969
                      ],
                      "referencedDeclaration": 969,
                      "src": "8070:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory)"
                      }
                    },
                    "id": 937,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8070:26:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 938,
                  "nodeType": "ExpressionStatement",
                  "src": "8070:26:1"
                }
              ]
            },
            "documentation": {
              "id": 926,
              "nodeType": "StructuredDocumentation",
              "src": "7671:319:1",
              "text": " @dev Safely mints `tokenId` and transfers it to `to`.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
            },
            "id": 940,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeMint",
            "nameLocation": "8004:9:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 931,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 928,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "8022:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 940,
                  "src": "8014:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 927,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8014:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 930,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "8034:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 940,
                  "src": "8026:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 929,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8026:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8013:29:1"
            },
            "returnParameters": {
              "id": 932,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8060:0:1"
            },
            "scope": 1372,
            "src": "7995:108:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 968,
              "nodeType": "Block",
              "src": "8408:195:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 951,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 943,
                        "src": "8424:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 952,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 945,
                        "src": "8428:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 950,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1046,
                      "src": "8418:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 953,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8418:18:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 954,
                  "nodeType": "ExpressionStatement",
                  "src": "8418:18:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 959,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8498:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 958,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8490:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 957,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "8490:7:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 960,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8490:10:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 961,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 943,
                            "src": "8502:2:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 962,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 945,
                            "src": "8506:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 963,
                            "name": "data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 947,
                            "src": "8515:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 956,
                          "name": "_checkOnERC721Received",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1330,
                          "src": "8467:22:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256,bytes memory) returns (bool)"
                          }
                        },
                        "id": 964,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8467:53:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
                        "id": 965,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8534:52:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        },
                        "value": "ERC721: transfer to non ERC721Receiver implementer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        }
                      ],
                      "id": 955,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8446:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 966,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8446:150:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 967,
                  "nodeType": "ExpressionStatement",
                  "src": "8446:150:1"
                }
              ]
            },
            "documentation": {
              "id": 941,
              "nodeType": "StructuredDocumentation",
              "src": "8109:210:1",
              "text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
            },
            "id": 969,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeMint",
            "nameLocation": "8333:9:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 948,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 943,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "8351:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 969,
                  "src": "8343:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 942,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8343:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 945,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "8363:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 969,
                  "src": "8355:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 944,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8355:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 947,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "8385:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 969,
                  "src": "8372:17:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 946,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "8372:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8342:48:1"
            },
            "returnParameters": {
              "id": 949,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8408:0:1"
            },
            "scope": 1372,
            "src": "8324:279:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1045,
              "nodeType": "Block",
              "src": "8986:859:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 983,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 978,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 972,
                          "src": "9004:2:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 981,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9018:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 980,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9010:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 979,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9010:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 982,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9010:10:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9004:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a206d696e7420746f20746865207a65726f2061646472657373",
                        "id": 984,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9022:34:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
                          "typeString": "literal_string \"ERC721: mint to the zero address\""
                        },
                        "value": "ERC721: mint to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
                          "typeString": "literal_string \"ERC721: mint to the zero address\""
                        }
                      ],
                      "id": 977,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8996:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 985,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8996:61:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 986,
                  "nodeType": "ExpressionStatement",
                  "src": "8996:61:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 991,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "9075:17:1",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 989,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 974,
                              "src": "9084:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 988,
                            "name": "_exists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 891,
                            "src": "9076:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (uint256) view returns (bool)"
                            }
                          },
                          "id": 990,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9076:16:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20746f6b656e20616c7265616479206d696e746564",
                        "id": 992,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9094:30:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
                          "typeString": "literal_string \"ERC721: token already minted\""
                        },
                        "value": "ERC721: token already minted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
                          "typeString": "literal_string \"ERC721: token already minted\""
                        }
                      ],
                      "id": 987,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9067:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 993,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9067:58:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 994,
                  "nodeType": "ExpressionStatement",
                  "src": "9067:58:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 998,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9165:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 997,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9157:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 996,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9157:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 999,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9157:10:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1000,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 972,
                        "src": "9169:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1001,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 974,
                        "src": "9173:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 1002,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9182:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 995,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1343,
                      "src": "9136:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256)"
                      }
                    },
                    "id": 1003,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9136:48:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1004,
                  "nodeType": "ExpressionStatement",
                  "src": "9136:48:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1009,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "9279:17:1",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 1007,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 974,
                              "src": "9288:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1006,
                            "name": "_exists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 891,
                            "src": "9280:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (uint256) view returns (bool)"
                            }
                          },
                          "id": 1008,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9280:16:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20746f6b656e20616c7265616479206d696e746564",
                        "id": 1010,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9298:30:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
                          "typeString": "literal_string \"ERC721: token already minted\""
                        },
                        "value": "ERC721: token already minted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
                          "typeString": "literal_string \"ERC721: token already minted\""
                        }
                      ],
                      "id": 1005,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9271:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1011,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9271:58:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1012,
                  "nodeType": "ExpressionStatement",
                  "src": "9271:58:1"
                },
                {
                  "id": 1019,
                  "nodeType": "UncheckedBlock",
                  "src": "9340:360:1",
                  "statements": [
                    {
                      "expression": {
                        "id": 1017,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "id": 1013,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 481,
                            "src": "9671:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1015,
                          "indexExpression": {
                            "id": 1014,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 972,
                            "src": "9681:2:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "9671:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "+=",
                        "rightHandSide": {
                          "hexValue": "31",
                          "id": 1016,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9688:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "9671:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1018,
                      "nodeType": "ExpressionStatement",
                      "src": "9671:18:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "id": 1024,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1020,
                        "name": "_owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 477,
                        "src": "9710:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 1022,
                      "indexExpression": {
                        "id": 1021,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 974,
                        "src": "9718:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9710:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1023,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 972,
                      "src": "9729:2:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9710:21:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1025,
                  "nodeType": "ExpressionStatement",
                  "src": "9710:21:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1029,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9764:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1028,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9756:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1027,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9756:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1030,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9756:10:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1031,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 972,
                        "src": "9768:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1032,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 974,
                        "src": "9772:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1026,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1417,
                      "src": "9747:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1033,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9747:33:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1034,
                  "nodeType": "EmitStatement",
                  "src": "9742:38:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1038,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9819:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1037,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9811:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1036,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9811:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1039,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9811:10:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1040,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 972,
                        "src": "9823:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1041,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 974,
                        "src": "9827:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 1042,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9836:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 1035,
                      "name": "_afterTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1356,
                      "src": "9791:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256)"
                      }
                    },
                    "id": 1043,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9791:47:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1044,
                  "nodeType": "ExpressionStatement",
                  "src": "9791:47:1"
                }
              ]
            },
            "documentation": {
              "id": 970,
              "nodeType": "StructuredDocumentation",
              "src": "8609:311:1",
              "text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
            },
            "id": 1046,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nameLocation": "8934:5:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 975,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 972,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "8948:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1046,
                  "src": "8940:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 971,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8940:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 974,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "8960:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1046,
                  "src": "8952:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 973,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8952:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8939:29:1"
            },
            "returnParameters": {
              "id": 976,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8986:0:1"
            },
            "scope": 1372,
            "src": "8925:920:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1112,
              "nodeType": "Block",
              "src": "10220:713:1",
              "statements": [
                {
                  "assignments": [
                    1053
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1053,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "10238:5:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1112,
                      "src": "10230:13:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1052,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "10230:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1058,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1056,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1049,
                        "src": "10261:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1054,
                        "name": "ERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1372,
                        "src": "10246:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721_$1372_$",
                          "typeString": "type(contract ERC721)"
                        }
                      },
                      "id": 1055,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10253:7:1",
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 591,
                      "src": "10246:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 1057,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10246:23:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10230:39:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1060,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1053,
                        "src": "10301:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1063,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10316:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1062,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10308:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1061,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10308:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1064,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10308:10:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1065,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1049,
                        "src": "10320:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 1066,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10329:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 1059,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1343,
                      "src": "10280:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256)"
                      }
                    },
                    "id": 1067,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10280:51:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1068,
                  "nodeType": "ExpressionStatement",
                  "src": "10280:51:1"
                },
                {
                  "expression": {
                    "id": 1074,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1069,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1053,
                      "src": "10433:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1072,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1049,
                          "src": "10456:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 1070,
                          "name": "ERC721",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1372,
                          "src": "10441:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC721_$1372_$",
                            "typeString": "type(contract ERC721)"
                          }
                        },
                        "id": 1071,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10448:7:1",
                        "memberName": "ownerOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 591,
                        "src": "10441:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                          "typeString": "function (uint256) view returns (address)"
                        }
                      },
                      "id": 1073,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10441:23:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "10433:31:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1075,
                  "nodeType": "ExpressionStatement",
                  "src": "10433:31:1"
                },
                {
                  "expression": {
                    "id": 1079,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "10502:31:1",
                    "subExpression": {
                      "baseExpression": {
                        "id": 1076,
                        "name": "_tokenApprovals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 485,
                        "src": "10509:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 1078,
                      "indexExpression": {
                        "id": 1077,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1049,
                        "src": "10525:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10509:24:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1080,
                  "nodeType": "ExpressionStatement",
                  "src": "10502:31:1"
                },
                {
                  "id": 1087,
                  "nodeType": "UncheckedBlock",
                  "src": "10544:237:1",
                  "statements": [
                    {
                      "expression": {
                        "id": 1085,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "id": 1081,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 481,
                            "src": "10749:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1083,
                          "indexExpression": {
                            "id": 1082,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1053,
                            "src": "10759:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "10749:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "-=",
                        "rightHandSide": {
                          "hexValue": "31",
                          "id": 1084,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10769:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "10749:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1086,
                      "nodeType": "ExpressionStatement",
                      "src": "10749:21:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "id": 1091,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "10790:23:1",
                    "subExpression": {
                      "baseExpression": {
                        "id": 1088,
                        "name": "_owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 477,
                        "src": "10797:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 1090,
                      "indexExpression": {
                        "id": 1089,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1049,
                        "src": "10805:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10797:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1092,
                  "nodeType": "ExpressionStatement",
                  "src": "10790:23:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1094,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1053,
                        "src": "10838:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1097,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10853:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1096,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10845:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1095,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10845:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1098,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10845:10:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1099,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1049,
                        "src": "10857:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1093,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1417,
                      "src": "10829:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10829:36:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1101,
                  "nodeType": "EmitStatement",
                  "src": "10824:41:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1103,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1053,
                        "src": "10896:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1106,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10911:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1105,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10903:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1104,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10903:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1107,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10903:10:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1108,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1049,
                        "src": "10915:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 1109,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10924:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 1102,
                      "name": "_afterTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1356,
                      "src": "10876:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256)"
                      }
                    },
                    "id": 1110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10876:50:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1111,
                  "nodeType": "ExpressionStatement",
                  "src": "10876:50:1"
                }
              ]
            },
            "documentation": {
              "id": 1047,
              "nodeType": "StructuredDocumentation",
              "src": "9851:315:1",
              "text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
            },
            "id": 1113,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nameLocation": "10180:5:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1050,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1049,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "10194:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1113,
                  "src": "10186:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1048,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10186:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10185:17:1"
            },
            "returnParameters": {
              "id": 1051,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10220:0:1"
            },
            "scope": 1372,
            "src": "10171:762:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1197,
              "nodeType": "Block",
              "src": "11336:1124:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1129,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 1126,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1120,
                              "src": "11369:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1124,
                              "name": "ERC721",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1372,
                              "src": "11354:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ERC721_$1372_$",
                                "typeString": "type(contract ERC721)"
                              }
                            },
                            "id": 1125,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "11361:7:1",
                            "memberName": "ownerOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 591,
                            "src": "11354:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view returns (address)"
                            }
                          },
                          "id": 1127,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11354:23:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1128,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1116,
                          "src": "11381:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "11354:31:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e736665722066726f6d20696e636f7272656374206f776e6572",
                        "id": 1130,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11387:39:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
                          "typeString": "literal_string \"ERC721: transfer from incorrect owner\""
                        },
                        "value": "ERC721: transfer from incorrect owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
                          "typeString": "literal_string \"ERC721: transfer from incorrect owner\""
                        }
                      ],
                      "id": 1123,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11346:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11346:81:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1132,
                  "nodeType": "ExpressionStatement",
                  "src": "11346:81:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1139,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1134,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1118,
                          "src": "11445:2:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1137,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11459:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1136,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "11451:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1135,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "11451:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1138,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11451:10:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "11445:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e7366657220746f20746865207a65726f2061646472657373",
                        "id": 1140,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11463:38:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
                          "typeString": "literal_string \"ERC721: transfer to the zero address\""
                        },
                        "value": "ERC721: transfer to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
                          "typeString": "literal_string \"ERC721: transfer to the zero address\""
                        }
                      ],
                      "id": 1133,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11437:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11437:65:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1142,
                  "nodeType": "ExpressionStatement",
                  "src": "11437:65:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1144,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1116,
                        "src": "11534:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1145,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1118,
                        "src": "11540:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1146,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1120,
                        "src": "11544:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 1147,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11553:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 1143,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1343,
                      "src": "11513:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256)"
                      }
                    },
                    "id": 1148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11513:42:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1149,
                  "nodeType": "ExpressionStatement",
                  "src": "11513:42:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1156,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 1153,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1120,
                              "src": "11670:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1151,
                              "name": "ERC721",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1372,
                              "src": "11655:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ERC721_$1372_$",
                                "typeString": "type(contract ERC721)"
                              }
                            },
                            "id": 1152,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "11662:7:1",
                            "memberName": "ownerOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 591,
                            "src": "11655:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view returns (address)"
                            }
                          },
                          "id": 1154,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11655:23:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1155,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1116,
                          "src": "11682:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "11655:31:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e736665722066726f6d20696e636f7272656374206f776e6572",
                        "id": 1157,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11688:39:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
                          "typeString": "literal_string \"ERC721: transfer from incorrect owner\""
                        },
                        "value": "ERC721: transfer from incorrect owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
                          "typeString": "literal_string \"ERC721: transfer from incorrect owner\""
                        }
                      ],
                      "id": 1150,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11647:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11647:81:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1159,
                  "nodeType": "ExpressionStatement",
                  "src": "11647:81:1"
                },
                {
                  "expression": {
                    "id": 1163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "11790:31:1",
                    "subExpression": {
                      "baseExpression": {
                        "id": 1160,
                        "name": "_tokenApprovals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 485,
                        "src": "11797:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 1162,
                      "indexExpression": {
                        "id": 1161,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1120,
                        "src": "11813:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "11797:24:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1164,
                  "nodeType": "ExpressionStatement",
                  "src": "11790:31:1"
                },
                {
                  "id": 1177,
                  "nodeType": "UncheckedBlock",
                  "src": "11832:496:1",
                  "statements": [
                    {
                      "expression": {
                        "id": 1169,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "id": 1165,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 481,
                            "src": "12265:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1167,
                          "indexExpression": {
                            "id": 1166,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1116,
                            "src": "12275:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "12265:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "-=",
                        "rightHandSide": {
                          "hexValue": "31",
                          "id": 1168,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12284:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "12265:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1170,
                      "nodeType": "ExpressionStatement",
                      "src": "12265:20:1"
                    },
                    {
                      "expression": {
                        "id": 1175,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "id": 1171,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 481,
                            "src": "12299:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1173,
                          "indexExpression": {
                            "id": 1172,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1118,
                            "src": "12309:2:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "12299:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "+=",
                        "rightHandSide": {
                          "hexValue": "31",
                          "id": 1174,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12316:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "12299:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1176,
                      "nodeType": "ExpressionStatement",
                      "src": "12299:18:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "id": 1182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1178,
                        "name": "_owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 477,
                        "src": "12337:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 1180,
                      "indexExpression": {
                        "id": 1179,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1120,
                        "src": "12345:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "12337:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1181,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1118,
                      "src": "12356:2:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "12337:21:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1183,
                  "nodeType": "ExpressionStatement",
                  "src": "12337:21:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1185,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1116,
                        "src": "12383:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1186,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1118,
                        "src": "12389:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1187,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1120,
                        "src": "12393:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1184,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1417,
                      "src": "12374:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1188,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12374:27:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1189,
                  "nodeType": "EmitStatement",
                  "src": "12369:32:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1191,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1116,
                        "src": "12432:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1192,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1118,
                        "src": "12438:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1193,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1120,
                        "src": "12442:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 1194,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12451:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 1190,
                      "name": "_afterTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1356,
                      "src": "12412:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256)"
                      }
                    },
                    "id": 1195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12412:41:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1196,
                  "nodeType": "ExpressionStatement",
                  "src": "12412:41:1"
                }
              ]
            },
            "documentation": {
              "id": 1114,
              "nodeType": "StructuredDocumentation",
              "src": "10939:313:1",
              "text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
            },
            "id": 1198,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transfer",
            "nameLocation": "11266:9:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1121,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1116,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "11284:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1198,
                  "src": "11276:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1115,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11276:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1118,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "11298:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1198,
                  "src": "11290:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1117,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11290:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1120,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "11310:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1198,
                  "src": "11302:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1119,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11302:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11275:43:1"
            },
            "returnParameters": {
              "id": 1122,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11336:0:1"
            },
            "scope": 1372,
            "src": "11257:1203:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1221,
              "nodeType": "Block",
              "src": "12636:107:1",
              "statements": [
                {
                  "expression": {
                    "id": 1210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1206,
                        "name": "_tokenApprovals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 485,
                        "src": "12646:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 1208,
                      "indexExpression": {
                        "id": 1207,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1203,
                        "src": "12662:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "12646:24:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1209,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1201,
                      "src": "12673:2:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "12646:29:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1211,
                  "nodeType": "ExpressionStatement",
                  "src": "12646:29:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1215,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1203,
                            "src": "12714:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 1213,
                            "name": "ERC721",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1372,
                            "src": "12699:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ERC721_$1372_$",
                              "typeString": "type(contract ERC721)"
                            }
                          },
                          "id": 1214,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "12706:7:1",
                          "memberName": "ownerOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 591,
                          "src": "12699:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view returns (address)"
                          }
                        },
                        "id": 1216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12699:23:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1217,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1201,
                        "src": "12724:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1218,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1203,
                        "src": "12728:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1212,
                      "name": "Approval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1426,
                      "src": "12690:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1219,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12690:46:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1220,
                  "nodeType": "EmitStatement",
                  "src": "12685:51:1"
                }
              ]
            },
            "documentation": {
              "id": 1199,
              "nodeType": "StructuredDocumentation",
              "src": "12466:101:1",
              "text": " @dev Approve `to` to operate on `tokenId`\n Emits an {Approval} event."
            },
            "id": 1222,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_approve",
            "nameLocation": "12581:8:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1204,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1201,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "12598:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1222,
                  "src": "12590:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1200,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12590:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1203,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "12610:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1222,
                  "src": "12602:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1202,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12602:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12589:29:1"
            },
            "returnParameters": {
              "id": 1205,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12636:0:1"
            },
            "scope": 1372,
            "src": "12572:171:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1253,
              "nodeType": "Block",
              "src": "12972:184:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1235,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1233,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1225,
                          "src": "12990:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 1234,
                          "name": "operator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1227,
                          "src": "12999:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "12990:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20617070726f766520746f2063616c6c6572",
                        "id": 1236,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13009:27:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
                          "typeString": "literal_string \"ERC721: approve to caller\""
                        },
                        "value": "ERC721: approve to caller"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
                          "typeString": "literal_string \"ERC721: approve to caller\""
                        }
                      ],
                      "id": 1232,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12982:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1237,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12982:55:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1238,
                  "nodeType": "ExpressionStatement",
                  "src": "12982:55:1"
                },
                {
                  "expression": {
                    "id": 1245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 1239,
                          "name": "_operatorApprovals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 491,
                          "src": "13047:18:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(address => mapping(address => bool))"
                          }
                        },
                        "id": 1242,
                        "indexExpression": {
                          "id": 1240,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1225,
                          "src": "13066:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "13047:25:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 1243,
                      "indexExpression": {
                        "id": 1241,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1227,
                        "src": "13073:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "13047:35:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1244,
                      "name": "approved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1229,
                      "src": "13085:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "13047:46:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1246,
                  "nodeType": "ExpressionStatement",
                  "src": "13047:46:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1248,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1225,
                        "src": "13123:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1249,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1227,
                        "src": "13130:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1250,
                        "name": "approved",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1229,
                        "src": "13140:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1247,
                      "name": "ApprovalForAll",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1435,
                      "src": "13108:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,bool)"
                      }
                    },
                    "id": 1251,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13108:41:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1252,
                  "nodeType": "EmitStatement",
                  "src": "13103:46:1"
                }
              ]
            },
            "documentation": {
              "id": 1223,
              "nodeType": "StructuredDocumentation",
              "src": "12749:125:1",
              "text": " @dev Approve `operator` to operate on all of `owner` tokens\n Emits an {ApprovalForAll} event."
            },
            "id": 1254,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setApprovalForAll",
            "nameLocation": "12888:18:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1230,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1225,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "12915:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1254,
                  "src": "12907:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1224,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12907:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1227,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "12930:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1254,
                  "src": "12922:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1226,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12922:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1229,
                  "mutability": "mutable",
                  "name": "approved",
                  "nameLocation": "12945:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1254,
                  "src": "12940:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1228,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12940:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12906:48:1"
            },
            "returnParameters": {
              "id": 1231,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12972:0:1"
            },
            "scope": 1372,
            "src": "12879:277:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1267,
              "nodeType": "Block",
              "src": "13303:70:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1262,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1257,
                            "src": "13329:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 1261,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 891,
                          "src": "13321:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 1263,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13321:16:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20696e76616c696420746f6b656e204944",
                        "id": 1264,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13339:26:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f",
                          "typeString": "literal_string \"ERC721: invalid token ID\""
                        },
                        "value": "ERC721: invalid token ID"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f",
                          "typeString": "literal_string \"ERC721: invalid token ID\""
                        }
                      ],
                      "id": 1260,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13313:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1265,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13313:53:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1266,
                  "nodeType": "ExpressionStatement",
                  "src": "13313:53:1"
                }
              ]
            },
            "documentation": {
              "id": 1255,
              "nodeType": "StructuredDocumentation",
              "src": "13162:73:1",
              "text": " @dev Reverts if the `tokenId` has not been minted yet."
            },
            "id": 1268,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_requireMinted",
            "nameLocation": "13249:14:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1258,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1257,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "13272:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1268,
                  "src": "13264:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1256,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13264:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13263:17:1"
            },
            "returnParameters": {
              "id": 1259,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13303:0:1"
            },
            "scope": 1372,
            "src": "13240:133:1",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1329,
              "nodeType": "Block",
              "src": "14080:676:1",
              "statements": [
                {
                  "condition": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1282,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1273,
                        "src": "14094:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 1283,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "14097:10:1",
                      "memberName": "isContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1581,
                      "src": "14094:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$attached_to$_t_address_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 1284,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14094:15:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1327,
                    "nodeType": "Block",
                    "src": "14714:36:1",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 1325,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14735:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 1281,
                        "id": 1326,
                        "nodeType": "Return",
                        "src": "14728:11:1"
                      }
                    ]
                  },
                  "id": 1328,
                  "nodeType": "IfStatement",
                  "src": "14090:660:1",
                  "trueBody": {
                    "id": 1324,
                    "nodeType": "Block",
                    "src": "14111:597:1",
                    "statements": [
                      {
                        "clauses": [
                          {
                            "block": {
                              "id": 1304,
                              "nodeType": "Block",
                              "src": "14225:91:1",
                              "statements": [
                                {
                                  "expression": {
                                    "commonType": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    },
                                    "id": 1302,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 1298,
                                      "name": "retval",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1296,
                                      "src": "14250:6:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "expression": {
                                        "expression": {
                                          "id": 1299,
                                          "name": "IERC721Receiver",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1536,
                                          "src": "14260:15:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1536_$",
                                            "typeString": "type(contract IERC721Receiver)"
                                          }
                                        },
                                        "id": 1300,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberLocation": "14276:16:1",
                                        "memberName": "onERC721Received",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 1535,
                                        "src": "14260:32:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
                                          "typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
                                        }
                                      },
                                      "id": 1301,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberLocation": "14293:8:1",
                                      "memberName": "selector",
                                      "nodeType": "MemberAccess",
                                      "src": "14260:41:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "src": "14250:51:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "functionReturnParameters": 1281,
                                  "id": 1303,
                                  "nodeType": "Return",
                                  "src": "14243:58:1"
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 1305,
                            "nodeType": "TryCatchClause",
                            "parameters": {
                              "id": 1297,
                              "nodeType": "ParameterList",
                              "parameters": [
                                {
                                  "constant": false,
                                  "id": 1296,
                                  "mutability": "mutable",
                                  "name": "retval",
                                  "nameLocation": "14217:6:1",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1305,
                                  "src": "14210:13:1",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  "typeName": {
                                    "id": 1295,
                                    "name": "bytes4",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "14210:6:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "src": "14209:15:1"
                            },
                            "src": "14201:115:1"
                          },
                          {
                            "block": {
                              "id": 1321,
                              "nodeType": "Block",
                              "src": "14345:353:1",
                              "statements": [
                                {
                                  "condition": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1312,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 1309,
                                        "name": "reason",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1307,
                                        "src": "14367:6:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      },
                                      "id": 1310,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "14374:6:1",
                                      "memberName": "length",
                                      "nodeType": "MemberAccess",
                                      "src": "14367:13:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "hexValue": "30",
                                      "id": 1311,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "14384:1:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    },
                                    "src": "14367:18:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "falseBody": {
                                    "id": 1319,
                                    "nodeType": "Block",
                                    "src": "14494:190:1",
                                    "statements": [
                                      {
                                        "AST": {
                                          "nativeSrc": "14580:86:1",
                                          "nodeType": "YulBlock",
                                          "src": "14580:86:1",
                                          "statements": [
                                            {
                                              "expression": {
                                                "arguments": [
                                                  {
                                                    "arguments": [
                                                      {
                                                        "kind": "number",
                                                        "nativeSrc": "14617:2:1",
                                                        "nodeType": "YulLiteral",
                                                        "src": "14617:2:1",
                                                        "type": "",
                                                        "value": "32"
                                                      },
                                                      {
                                                        "name": "reason",
                                                        "nativeSrc": "14621:6:1",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "14621:6:1"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "add",
                                                      "nativeSrc": "14613:3:1",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "14613:3:1"
                                                    },
                                                    "nativeSrc": "14613:15:1",
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "14613:15:1"
                                                  },
                                                  {
                                                    "arguments": [
                                                      {
                                                        "name": "reason",
                                                        "nativeSrc": "14636:6:1",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "14636:6:1"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "mload",
                                                      "nativeSrc": "14630:5:1",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "14630:5:1"
                                                    },
                                                    "nativeSrc": "14630:13:1",
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "14630:13:1"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "revert",
                                                  "nativeSrc": "14606:6:1",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "14606:6:1"
                                                },
                                                "nativeSrc": "14606:38:1",
                                                "nodeType": "YulFunctionCall",
                                                "src": "14606:38:1"
                                              },
                                              "nativeSrc": "14606:38:1",
                                              "nodeType": "YulExpressionStatement",
                                              "src": "14606:38:1"
                                            }
                                          ]
                                        },
                                        "documentation": "@solidity memory-safe-assembly",
                                        "evmVersion": "istanbul",
                                        "externalReferences": [
                                          {
                                            "declaration": 1307,
                                            "isOffset": false,
                                            "isSlot": false,
                                            "src": "14621:6:1",
                                            "valueSize": 1
                                          },
                                          {
                                            "declaration": 1307,
                                            "isOffset": false,
                                            "isSlot": false,
                                            "src": "14636:6:1",
                                            "valueSize": 1
                                          }
                                        ],
                                        "id": 1318,
                                        "nodeType": "InlineAssembly",
                                        "src": "14571:95:1"
                                      }
                                    ]
                                  },
                                  "id": 1320,
                                  "nodeType": "IfStatement",
                                  "src": "14363:321:1",
                                  "trueBody": {
                                    "id": 1317,
                                    "nodeType": "Block",
                                    "src": "14387:101:1",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
                                              "id": 1314,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "string",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "14416:52:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                                                "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                                              },
                                              "value": "ERC721: transfer to non ERC721Receiver implementer"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                                                "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                                              }
                                            ],
                                            "id": 1313,
                                            "name": "revert",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                              -19,
                                              -19
                                            ],
                                            "referencedDeclaration": -19,
                                            "src": "14409:6:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                              "typeString": "function (string memory) pure"
                                            }
                                          },
                                          "id": 1315,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "nameLocations": [],
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "14409:60:1",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                          }
                                        },
                                        "id": 1316,
                                        "nodeType": "ExpressionStatement",
                                        "src": "14409:60:1"
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 1322,
                            "nodeType": "TryCatchClause",
                            "parameters": {
                              "id": 1308,
                              "nodeType": "ParameterList",
                              "parameters": [
                                {
                                  "constant": false,
                                  "id": 1307,
                                  "mutability": "mutable",
                                  "name": "reason",
                                  "nameLocation": "14337:6:1",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1322,
                                  "src": "14324:19:1",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes"
                                  },
                                  "typeName": {
                                    "id": 1306,
                                    "name": "bytes",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "14324:5:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_storage_ptr",
                                      "typeString": "bytes"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "src": "14323:21:1"
                            },
                            "src": "14317:381:1"
                          }
                        ],
                        "externalCall": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1289,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1384,
                                "src": "14166:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 1290,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "14166:12:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1291,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1271,
                              "src": "14180:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1292,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1275,
                              "src": "14186:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1293,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1277,
                              "src": "14195:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1286,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1273,
                                  "src": "14145:2:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1285,
                                "name": "IERC721Receiver",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1536,
                                "src": "14129:15:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1536_$",
                                  "typeString": "type(contract IERC721Receiver)"
                                }
                              },
                              "id": 1287,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "14129:19:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC721Receiver_$1536",
                                "typeString": "contract IERC721Receiver"
                              }
                            },
                            "id": 1288,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "14149:16:1",
                            "memberName": "onERC721Received",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1535,
                            "src": "14129:36:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                              "typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
                            }
                          },
                          "id": 1294,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14129:71:1",
                          "tryCall": true,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "id": 1323,
                        "nodeType": "TryStatement",
                        "src": "14125:573:1"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 1269,
              "nodeType": "StructuredDocumentation",
              "src": "13379:541:1",
              "text": " @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"
            },
            "id": 1330,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_checkOnERC721Received",
            "nameLocation": "13934:22:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1278,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1271,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "13974:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1330,
                  "src": "13966:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1270,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13966:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1273,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "13996:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1330,
                  "src": "13988:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1272,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13988:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1275,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "14016:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1330,
                  "src": "14008:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1274,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14008:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1277,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "14046:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1330,
                  "src": "14033:17:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1276,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "14033:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13956:100:1"
            },
            "returnParameters": {
              "id": 1281,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1280,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1330,
                  "src": "14074:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1279,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "14074:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14073:6:1"
            },
            "scope": 1372,
            "src": "13925:831:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1342,
              "nodeType": "Block",
              "src": "15586:2:1",
              "statements": []
            },
            "documentation": {
              "id": 1331,
              "nodeType": "StructuredDocumentation",
              "src": "14762:705:1",
              "text": " @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\n - When `from` is zero, the tokens will be minted for `to`.\n - When `to` is zero, ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n - `batchSize` is non-zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
            },
            "id": 1343,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nameLocation": "15481:20:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1340,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1333,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "15510:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1343,
                  "src": "15502:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1332,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15502:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1335,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "15524:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1343,
                  "src": "15516:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1334,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15516:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1337,
                  "mutability": "mutable",
                  "name": "firstTokenId",
                  "nameLocation": "15536:12:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1343,
                  "src": "15528:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1336,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15528:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1339,
                  "mutability": "mutable",
                  "name": "batchSize",
                  "nameLocation": "15558:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1343,
                  "src": "15550:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1338,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15550:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15501:67:1"
            },
            "returnParameters": {
              "id": 1341,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15586:0:1"
            },
            "scope": 1372,
            "src": "15472:116:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1355,
              "nodeType": "Block",
              "src": "16407:2:1",
              "statements": []
            },
            "documentation": {
              "id": 1344,
              "nodeType": "StructuredDocumentation",
              "src": "15594:695:1",
              "text": " @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\n - When `from` is zero, the tokens were minted for `to`.\n - When `to` is zero, ``from``'s tokens were burned.\n - `from` and `to` are never both zero.\n - `batchSize` is non-zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
            },
            "id": 1356,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_afterTokenTransfer",
            "nameLocation": "16303:19:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1353,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1346,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "16331:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1356,
                  "src": "16323:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1345,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16323:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1348,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "16345:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1356,
                  "src": "16337:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1347,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16337:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1350,
                  "mutability": "mutable",
                  "name": "firstTokenId",
                  "nameLocation": "16357:12:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1356,
                  "src": "16349:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1349,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16349:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1352,
                  "mutability": "mutable",
                  "name": "batchSize",
                  "nameLocation": "16379:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1356,
                  "src": "16371:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1351,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16371:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16322:67:1"
            },
            "returnParameters": {
              "id": 1354,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16407:0:1"
            },
            "scope": 1372,
            "src": "16294:115:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1370,
              "nodeType": "Block",
              "src": "16958:45:1",
              "statements": [
                {
                  "expression": {
                    "id": 1368,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1364,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 481,
                        "src": "16968:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1366,
                      "indexExpression": {
                        "id": 1365,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1359,
                        "src": "16978:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "16968:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 1367,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1361,
                      "src": "16990:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16968:28:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1369,
                  "nodeType": "ExpressionStatement",
                  "src": "16968:28:1"
                }
              ]
            },
            "documentation": {
              "id": 1357,
              "nodeType": "StructuredDocumentation",
              "src": "16415:409:1",
              "text": " @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n WARNING: Anyone calling this MUST ensure that the balances remain consistent with the ownership. The invariant\n being that for any address `a` the value returned by `balanceOf(a)` must be equal to the number of tokens such\n that `ownerOf(tokenId)` is `a`."
            },
            "id": 1371,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "__unsafe_increaseBalance",
            "nameLocation": "16891:24:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1362,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1359,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "16924:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1371,
                  "src": "16916:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1358,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16916:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1361,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "16941:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1371,
                  "src": "16933:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1360,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16933:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16915:33:1"
            },
            "returnParameters": {
              "id": 1363,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16958:0:1"
            },
            "scope": 1372,
            "src": "16882:121:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 1373,
        "src": "628:16377:1",
        "usedErrors": [],
        "usedEvents": [
          1417,
          1426,
          1435
        ]
      }
    ],
    "src": "107:16899:1"
  },
  "bytecode": "60806040523480156200001157600080fd5b50604051620013ec380380620013ec833981016040819052620000349162000122565b60006200004283826200021d565b5060016200005182826200021d565b505050620002e9565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200008257600080fd5b81516001600160401b03808211156200009f576200009f6200005a565b604051601f8301601f19908116603f01168101908282118183101715620000ca57620000ca6200005a565b8160405283815260209250866020858801011115620000e857600080fd5b600091505b838210156200010c5785820183015181830184015290820190620000ed565b6000602085830101528094505050505092915050565b600080604083850312156200013657600080fd5b82516001600160401b03808211156200014e57600080fd5b6200015c8683870162000070565b935060208501519150808211156200017357600080fd5b50620001828582860162000070565b9150509250929050565b600181811c90821680620001a157607f821691505b602082108103620001c257634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111562000218576000816000526020600020601f850160051c81016020861015620001f35750805b601f850160051c820191505b818110156200021457828155600101620001ff565b5050505b505050565b81516001600160401b038111156200023957620002396200005a565b62000251816200024a84546200018c565b84620001c8565b602080601f831160018114620002895760008415620002705750858301515b600019600386901b1c1916600185901b17855562000214565b600085815260208120601f198616915b82811015620002ba5788860151825594840194600190910190840162000299565b5085821015620002d95787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6110f380620002f96000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb465146101b3578063b88d4fde146101c6578063c87b56dd146101d9578063e985e9c5146101ec57600080fd5b80636352211e1461017757806370a082311461018a57806395d89b41146101ab57600080fd5b806301ffc9a7146100d457806306fdde03146100fc578063081812fc14610111578063095ea7b31461013c57806323b872dd1461015157806342842e0e14610164575b600080fd5b6100e76100e2366004610c7f565b610228565b60405190151581526020015b60405180910390f35b61010461027a565b6040516100f39190610cec565b61012461011f366004610cff565b61030c565b6040516001600160a01b0390911681526020016100f3565b61014f61014a366004610d34565b610333565b005b61014f61015f366004610d5e565b61044d565b61014f610172366004610d5e565b61047e565b610124610185366004610cff565b610499565b61019d610198366004610d9a565b6104f9565b6040519081526020016100f3565b61010461057f565b61014f6101c1366004610db5565b61058e565b61014f6101d4366004610e07565b61059d565b6101046101e7366004610cff565b6105d5565b6100e76101fa366004610ee3565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006001600160e01b031982166380ac58cd60e01b148061025957506001600160e01b03198216635b5e139f60e01b145b8061027457506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461028990610f16565b80601f01602080910402602001604051908101604052809291908181526020018280546102b590610f16565b80156103025780601f106102d757610100808354040283529160200191610302565b820191906000526020600020905b8154815290600101906020018083116102e557829003601f168201915b5050505050905090565b600061031782610649565b506000908152600460205260409020546001600160a01b031690565b600061033e82610499565b9050806001600160a01b0316836001600160a01b0316036103b05760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b03821614806103cc57506103cc81336101fa565b61043e5760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c00000060648201526084016103a7565b61044883836106ab565b505050565b6104573382610719565b6104735760405162461bcd60e51b81526004016103a790610f50565b610448838383610798565b6104488383836040518060200160405280600081525061059d565b6000818152600260205260408120546001600160a01b0316806102745760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016103a7565b60006001600160a01b0382166105635760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b60648201526084016103a7565b506001600160a01b031660009081526003602052604090205490565b60606001805461028990610f16565b6105993383836108fc565b5050565b6105a73383610719565b6105c35760405162461bcd60e51b81526004016103a790610f50565b6105cf848484846109ca565b50505050565b60606105e082610649565b60006105f760408051602081019091526000815290565b905060008151116106175760405180602001604052806000815250610642565b80610621846109fd565b604051602001610632929190610f9d565b6040516020818303038152906040525b9392505050565b6000818152600260205260409020546001600160a01b03166106a85760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016103a7565b50565b600081815260046020526040902080546001600160a01b0319166001600160a01b03841690811790915581906106e082610499565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60008061072583610499565b9050806001600160a01b0316846001600160a01b0316148061076c57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b806107905750836001600160a01b03166107858461030c565b6001600160a01b0316145b949350505050565b826001600160a01b03166107ab82610499565b6001600160a01b0316146107d15760405162461bcd60e51b81526004016103a790610fcc565b6001600160a01b0382166108335760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016103a7565b826001600160a01b031661084682610499565b6001600160a01b03161461086c5760405162461bcd60e51b81526004016103a790610fcc565b600081815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b816001600160a01b0316836001600160a01b03160361095d5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016103a7565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6109d5848484610798565b6109e184848484610a90565b6105cf5760405162461bcd60e51b81526004016103a790611011565b60606000610a0a83610b91565b600101905060008167ffffffffffffffff811115610a2a57610a2a610df1565b6040519080825280601f01601f191660200182016040528015610a54576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610a5e57509392505050565b60006001600160a01b0384163b15610b8657604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610ad4903390899088908890600401611063565b6020604051808303816000875af1925050508015610b0f575060408051601f3d908101601f19168201909252610b0c918101906110a0565b60015b610b6c573d808015610b3d576040519150601f19603f3d011682016040523d82523d6000602084013e610b42565b606091505b508051600003610b645760405162461bcd60e51b81526004016103a790611011565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610790565b506001949350505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310610bd05772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310610bfc576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310610c1a57662386f26fc10000830492506010015b6305f5e1008310610c32576305f5e100830492506008015b6127108310610c4657612710830492506004015b60648310610c58576064830492506002015b600a83106102745760010192915050565b6001600160e01b0319811681146106a857600080fd5b600060208284031215610c9157600080fd5b813561064281610c69565b60005b83811015610cb7578181015183820152602001610c9f565b50506000910152565b60008151808452610cd8816020860160208601610c9c565b601f01601f19169290920160200192915050565b6020815260006106426020830184610cc0565b600060208284031215610d1157600080fd5b5035919050565b80356001600160a01b0381168114610d2f57600080fd5b919050565b60008060408385031215610d4757600080fd5b610d5083610d18565b946020939093013593505050565b600080600060608486031215610d7357600080fd5b610d7c84610d18565b9250610d8a60208501610d18565b9150604084013590509250925092565b600060208284031215610dac57600080fd5b61064282610d18565b60008060408385031215610dc857600080fd5b610dd183610d18565b915060208301358015158114610de657600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215610e1d57600080fd5b610e2685610d18565b9350610e3460208601610d18565b925060408501359150606085013567ffffffffffffffff80821115610e5857600080fd5b818701915087601f830112610e6c57600080fd5b813581811115610e7e57610e7e610df1565b604051601f8201601f19908116603f01168101908382118183101715610ea657610ea6610df1565b816040528281528a6020848701011115610ebf57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008060408385031215610ef657600080fd5b610eff83610d18565b9150610f0d60208401610d18565b90509250929050565b600181811c90821680610f2a57607f821691505b602082108103610f4a57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b60008351610faf818460208801610c9c565b835190830190610fc3818360208801610c9c565b01949350505050565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061109690830184610cc0565b9695505050505050565b6000602082840312156110b257600080fd5b815161064281610c6956fea2646970667358221220e37993bd7092ba824fc40a9736e0e5f096097cd184c35fc2178640b9477a9cb964736f6c63430008180033",
  "bytecodeSha1": "2a9a46dd9a4bc385b6762cf4955c01cb0ff33a59",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.24+commit.e11b9ed9"
  },
  "contractName": "ERC721",
  "coverageMap": {
    "branches": {
      "1": {
        "ERC721._checkOnERC721Received": {
          "74": [
            14367,
            14385,
            false
          ]
        },
        "ERC721._safeTransfer": {
          "73": [
            6484,
            6531,
            true
          ]
        },
        "ERC721._setApprovalForAll": {
          "72": [
            12990,
            13007,
            true
          ]
        },
        "ERC721._transfer": {
          "69": [
            11354,
            11385,
            true
          ],
          "70": [
            11445,
            11461,
            true
          ],
          "71": [
            11655,
            11686,
            true
          ]
        },
        "ERC721.approve": {
          "62": [
            3605,
            3616,
            true
          ],
          "63": [
            3686,
            3707,
            true
          ],
          "64": [
            3711,
            3748,
            true
          ]
        },
        "ERC721.balanceOf": {
          "66": [
            2028,
            2047,
            true
          ]
        },
        "ERC721.safeTransferFrom": {
          "67": [
            5319,
            5360,
            true
          ]
        },
        "ERC721.tokenURI": {
          "68": [
            2984,
            3009,
            true
          ]
        },
        "ERC721.transferFrom": {
          "65": [
            4771,
            4812,
            true
          ]
        }
      },
      "10": {
        "Math.log10": {
          "75": [
            10267,
            10284,
            false
          ],
          "76": [
            10383,
            10400,
            false
          ],
          "77": [
            10499,
            10516,
            false
          ],
          "78": [
            10615,
            10631,
            false
          ],
          "79": [
            10728,
            10744,
            false
          ],
          "80": [
            10841,
            10857,
            false
          ],
          "81": [
            10954,
            10970,
            false
          ]
        }
      },
      "11": {},
      "2": {},
      "3": {},
      "4": {},
      "5": {},
      "6": {},
      "7": {},
      "8": {},
      "9": {}
    },
    "statements": {
      "1": {
        "ERC721._approve": {
          "25": [
            12646,
            12675
          ],
          "26": [
            12685,
            12736
          ]
        },
        "ERC721._baseURI": {
          "22": [
            3395,
            3404
          ]
        },
        "ERC721._checkOnERC721Received": {
          "45": [
            14409,
            14469
          ],
          "46": [
            14243,
            14301
          ],
          "47": [
            14728,
            14739
          ]
        },
        "ERC721._isApprovedOrOwner": {
          "27": [
            7562,
            7658
          ]
        },
        "ERC721._ownerOf": {
          "13": [
            6787,
            6810
          ]
        },
        "ERC721._requireMinted": {
          "24": [
            13313,
            13366
          ]
        },
        "ERC721._safeTransfer": {
          "39": [
            6438,
            6466
          ],
          "40": [
            6476,
            6586
          ]
        },
        "ERC721._setApprovalForAll": {
          "36": [
            12982,
            13037
          ],
          "37": [
            13047,
            13093
          ],
          "38": [
            13103,
            13149
          ]
        },
        "ERC721._transfer": {
          "28": [
            11346,
            11427
          ],
          "29": [
            11437,
            11502
          ],
          "30": [
            11647,
            11728
          ],
          "31": [
            11790,
            11821
          ],
          "32": [
            12265,
            12285
          ],
          "33": [
            12299,
            12317
          ],
          "34": [
            12337,
            12358
          ],
          "35": [
            12369,
            12401
          ]
        },
        "ERC721.approve": {
          "6": [
            3597,
            3654
          ],
          "8": [
            3665,
            3835
          ],
          "9": [
            3846,
            3867
          ]
        },
        "ERC721.balanceOf": {
          "15": [
            2020,
            2093
          ],
          "16": [
            2103,
            2126
          ]
        },
        "ERC721.getApproved": {
          "4": [
            4030,
            4053
          ],
          "5": [
            4064,
            4095
          ]
        },
        "ERC721.isApprovedForAll": {
          "0": [
            4501,
            4543
          ]
        },
        "ERC721.name": {
          "3": [
            2550,
            2562
          ]
        },
        "ERC721.ownerOf": {
          "14": [
            2324,
            2380
          ]
        },
        "ERC721.safeTransferFrom": {
          "12": [
            5077,
            5116
          ],
          "19": [
            5311,
            5410
          ],
          "20": [
            5420,
            5458
          ]
        },
        "ERC721.setApprovalForAll": {
          "18": [
            4263,
            4315
          ]
        },
        "ERC721.supportsInterface": {
          "1": [
            1688,
            1863
          ]
        },
        "ERC721.symbol": {
          "17": [
            2714,
            2728
          ]
        },
        "ERC721.tokenURI": {
          "21": [
            2899,
            2922
          ],
          "23": [
            2977,
            3070
          ]
        },
        "ERC721.transferFrom": {
          "10": [
            4763,
            4862
          ],
          "11": [
            4873,
            4901
          ]
        }
      },
      "10": {
        "Math.log10": {
          "48": [
            10304,
            10321
          ],
          "49": [
            10339,
            10351
          ],
          "50": [
            10420,
            10437
          ],
          "51": [
            10455,
            10467
          ],
          "52": [
            10536,
            10553
          ],
          "53": [
            10571,
            10583
          ],
          "54": [
            10651,
            10667
          ],
          "55": [
            10685,
            10696
          ],
          "56": [
            10764,
            10780
          ],
          "57": [
            10798,
            10809
          ],
          "58": [
            10877,
            10893
          ],
          "59": [
            10911,
            10922
          ],
          "60": [
            10990,
            11001
          ],
          "61": [
            11035,
            11048
          ]
        }
      },
      "11": {},
      "2": {},
      "3": {},
      "4": {},
      "5": {
        "Address.isContract": {
          "44": [
            1695,
            1725
          ]
        }
      },
      "6": {
        "Context._msgSender": {
          "7": [
            727,
            744
          ]
        }
      },
      "7": {
        "Strings.toString": {
          "41": [
            851,
            856
          ],
          "42": [
            1035,
            1046
          ],
          "43": [
            1113,
            1126
          ]
        }
      },
      "8": {
        "ERC165.supportsInterface": {
          "2": [
            930,
            977
          ]
        }
      },
      "9": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.9.6/Address",
    "OpenZeppelin/openzeppelin-contracts@4.9.6/Context",
    "OpenZeppelin/openzeppelin-contracts@4.9.6/ERC165",
    "OpenZeppelin/openzeppelin-contracts@4.9.6/IERC165",
    "OpenZeppelin/openzeppelin-contracts@4.9.6/IERC721",
    "OpenZeppelin/openzeppelin-contracts@4.9.6/IERC721Metadata",
    "OpenZeppelin/openzeppelin-contracts@4.9.6/IERC721Receiver",
    "OpenZeppelin/openzeppelin-contracts@4.9.6/Math",
    "OpenZeppelin/openzeppelin-contracts@4.9.6/SignedMath",
    "OpenZeppelin/openzeppelin-contracts@4.9.6/Strings"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "628:16377:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1570:300;;;;;;:::i;:::-;;:::i;:::-;;;565:14:13;;558:22;540:41;;528:2;513:18;1570:300:1;;;;;;;;2471:98;;;:::i;:::-;;;;;;;:::i;3935:167::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1697:32:13;;;1679:51;;1667:2;1652:18;3935:167:1;1533:203:13;3468:406:1;;;;;;:::i;:::-;;:::i;:::-;;4612:296;;;;;;:::i;:::-;;:::i;4974:149::-;;;;;;:::i;:::-;;:::i;2190:219::-;;;;;;:::i;:::-;;:::i;1929:204::-;;;;;;:::i;:::-;;:::i;:::-;;;2848:25:13;;;2836:2;2821:18;1929:204:1;2702:177:13;2633:102:1;;;:::i;4169:153::-;;;;;;:::i;:::-;;:::i;5189:276::-;;;;;;:::i;:::-;;:::i;2801:::-;;;;;;:::i;:::-;;:::i;4388:162::-;;;;;;:::i;:::-;-1:-1:-1;;;;;4508:25:1;;;4485:4;4508:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4388:162;1570:300;1672:4;-1:-1:-1;;;;;;1707:40:1;;-1:-1:-1;;;1707:40:1;;:104;;-1:-1:-1;;;;;;;1763:48:1;;-1:-1:-1;;;1763:48:1;1707:104;:156;;;-1:-1:-1;;;;;;;;;;937:40:8;;;1827:36:1;1688:175;1570:300;-1:-1:-1;;1570:300:1:o;2471:98::-;2525:13;2557:5;2550:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2471:98;:::o;3935:167::-;4011:7;4030:23;4045:7;4030:14;:23::i;:::-;-1:-1:-1;4071:24:1;;;;:15;:24;;;;;;-1:-1:-1;;;;;4071:24:1;;3935:167::o;3468:406::-;3548:13;3564:23;3579:7;3564:14;:23::i;:::-;3548:39;;3611:5;-1:-1:-1;;;;;3605:11:1;:2;-1:-1:-1;;;;;3605:11:1;;3597:57;;;;-1:-1:-1;;;3597:57:1;;5363:2:13;3597:57:1;;;5345:21:13;5402:2;5382:18;;;5375:30;5441:34;5421:18;;;5414:62;-1:-1:-1;;;5492:18:13;;;5485:31;5533:19;;3597:57:1;;;;;;;;;734:10:6;-1:-1:-1;;;;;3686:21:1;;;;:62;;-1:-1:-1;3711:37:1;3728:5;734:10:6;4388:162:1;:::i;3711:37::-;3665:170;;;;-1:-1:-1;;;3665:170:1;;5765:2:13;3665:170:1;;;5747:21:13;5804:2;5784:18;;;5777:30;5843:34;5823:18;;;5816:62;5914:31;5894:18;;;5887:59;5963:19;;3665:170:1;5563:425:13;3665:170:1;3846:21;3855:2;3859:7;3846:8;:21::i;:::-;3538:336;3468:406;;:::o;4612:296::-;4771:41;734:10:6;4804:7:1;4771:18;:41::i;:::-;4763:99;;;;-1:-1:-1;;;4763:99:1;;;;;;;:::i;:::-;4873:28;4883:4;4889:2;4893:7;4873:9;:28::i;4974:149::-;5077:39;5094:4;5100:2;5104:7;5077:39;;;;;;;;;;;;:16;:39::i;2190:219::-;2262:7;6794:16;;;:7;:16;;;;;;-1:-1:-1;;;;;6794:16:1;;2324:56;;;;-1:-1:-1;;;2324:56:1;;6609:2:13;2324:56:1;;;6591:21:13;6648:2;6628:18;;;6621:30;-1:-1:-1;;;6667:18:13;;;6660:54;6731:18;;2324:56:1;6407:348:13;1929:204:1;2001:7;-1:-1:-1;;;;;2028:19:1;;2020:73;;;;-1:-1:-1;;;2020:73:1;;6962:2:13;2020:73:1;;;6944:21:13;7001:2;6981:18;;;6974:30;7040:34;7020:18;;;7013:62;-1:-1:-1;;;7091:18:13;;;7084:39;7140:19;;2020:73:1;6760:405:13;2020:73:1;-1:-1:-1;;;;;;2110:16:1;;;;;:9;:16;;;;;;;1929:204::o;2633:102::-;2689:13;2721:7;2714:14;;;;;:::i;4169:153::-;4263:52;734:10:6;4296:8:1;4306;4263:18;:52::i;:::-;4169:153;;:::o;5189:276::-;5319:41;734:10:6;5352:7:1;5319:18;:41::i;:::-;5311:99;;;;-1:-1:-1;;;5311:99:1;;;;;;;:::i;:::-;5420:38;5434:4;5440:2;5444:7;5453:4;5420:13;:38::i;:::-;5189:276;;;;:::o;2801:::-;2874:13;2899:23;2914:7;2899:14;:23::i;:::-;2933:21;2957:10;3395:9;;;;;;;;;-1:-1:-1;3395:9:1;;;3319:92;2957:10;2933:34;;3008:1;2990:7;2984:21;:25;:86;;;;;;;;;;;;;;;;;3036:7;3045:18;:7;:16;:18::i;:::-;3019:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2984:86;2977:93;2801:276;-1:-1:-1;;;2801:276:1:o;13240:133::-;7185:4;6794:16;;;:7;:16;;;;;;-1:-1:-1;;;;;6794:16:1;13313:53;;;;-1:-1:-1;;;13313:53:1;;6609:2:13;13313:53:1;;;6591:21:13;6648:2;6628:18;;;6621:30;-1:-1:-1;;;6667:18:13;;;6660:54;6731:18;;13313:53:1;6407:348:13;13313:53:1;13240:133;:::o;12572:171::-;12646:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;12646:29:1;-1:-1:-1;;;;;12646:29:1;;;;;;;;:24;;12699:23;12646:24;12699:14;:23::i;:::-;-1:-1:-1;;;;;12690:46:1;;;;;;;;;;;12572:171;;:::o;7404:261::-;7497:4;7513:13;7529:23;7544:7;7529:14;:23::i;:::-;7513:39;;7581:5;-1:-1:-1;;;;;7570:16:1;:7;-1:-1:-1;;;;;7570:16:1;;:52;;;-1:-1:-1;;;;;;4508:25:1;;;4485:4;4508:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;7590:32;7570:87;;;;7650:7;-1:-1:-1;;;;;7626:31:1;:20;7638:7;7626:11;:20::i;:::-;-1:-1:-1;;;;;7626:31:1;;7570:87;7562:96;7404:261;-1:-1:-1;;;;7404:261:1:o;11257:1203::-;11381:4;-1:-1:-1;;;;;11354:31:1;:23;11369:7;11354:14;:23::i;:::-;-1:-1:-1;;;;;11354:31:1;;11346:81;;;;-1:-1:-1;;;11346:81:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;11445:16:1;;11437:65;;;;-1:-1:-1;;;11437:65:1;;8279:2:13;11437:65:1;;;8261:21:13;8318:2;8298:18;;;8291:30;8357:34;8337:18;;;8330:62;-1:-1:-1;;;8408:18:13;;;8401:34;8452:19;;11437:65:1;8077:400:13;11437:65:1;11682:4;-1:-1:-1;;;;;11655:31:1;:23;11670:7;11655:14;:23::i;:::-;-1:-1:-1;;;;;11655:31:1;;11647:81;;;;-1:-1:-1;;;11647:81:1;;;;;;;:::i;:::-;11797:24;;;;:15;:24;;;;;;;;11790:31;;-1:-1:-1;;;;;;11790:31:1;;;;;;-1:-1:-1;;;;;12265:15:1;;;;;;:9;:15;;;;;:20;;-1:-1:-1;;12265:20:1;;;12299:13;;;;;;;;;:18;;11790:31;12299:18;;;12337:16;;;:7;:16;;;;;;:21;;;;;;;;;;12374:27;;11813:7;;12374:27;;;3538:336;3468:406;;:::o;12879:277::-;12999:8;-1:-1:-1;;;;;12990:17:1;:5;-1:-1:-1;;;;;12990:17:1;;12982:55;;;;-1:-1:-1;;;12982:55:1;;8684:2:13;12982:55:1;;;8666:21:13;8723:2;8703:18;;;8696:30;8762:27;8742:18;;;8735:55;8807:18;;12982:55:1;8482:349:13;12982:55:1;-1:-1:-1;;;;;13047:25:1;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;13047:46:1;;;;;;;;;;13108:41;;540::13;;;13108::1;;513:18:13;13108:41:1;;;;;;;12879:277;;;:::o;6326:267::-;6438:28;6448:4;6454:2;6458:7;6438:9;:28::i;:::-;6484:47;6507:4;6513:2;6517:7;6526:4;6484:22;:47::i;:::-;6476:110;;;;-1:-1:-1;;;6476:110:1;;;;;;;:::i;447:696:7:-;503:13;552:14;569:17;580:5;569:10;:17::i;:::-;589:1;569:21;552:38;;604:20;638:6;627:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;627:18:7;-1:-1:-1;604:41:7;-1:-1:-1;765:28:7;;;781:2;765:28;820:280;-1:-1:-1;;851:5:7;-1:-1:-1;;;985:2:7;974:14;;969:30;851:5;956:44;1044:2;1035:11;;;-1:-1:-1;1064:21:7;820:280;1064:21;-1:-1:-1;1120:6:7;447:696;-1:-1:-1;;;447:696:7:o;13925:831:1:-;14074:4;-1:-1:-1;;;;;14094:13:1;;1702:19:5;:23;14090:660:1;;14129:71;;-1:-1:-1;;;14129:71:1;;-1:-1:-1;;;;;14129:36:1;;;;;:71;;734:10:6;;14180:4:1;;14186:7;;14195:4;;14129:71;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14129:71:1;;;;;;;;-1:-1:-1;;14129:71:1;;;;;;;;;;;;:::i;:::-;;;14125:573;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14367:6;:13;14384:1;14367:18;14363:321;;14409:60;;-1:-1:-1;;;14409:60:1;;;;;;;:::i;14363:321::-;14636:6;14630:13;14621:6;14617:2;14613:15;14606:38;14125:573;-1:-1:-1;;;;;;14250:51:1;-1:-1:-1;;;14250:51:1;;-1:-1:-1;14243:58:1;;14090:660;-1:-1:-1;14735:4:1;13925:831;;;;;;:::o;10139:916:10:-;10192:7;;-1:-1:-1;;;10267:17:10;;10263:103;;-1:-1:-1;;;10304:17:10;;;-1:-1:-1;10349:2:10;10339:12;10263:103;10392:8;10383:5;:17;10379:103;;10429:8;10420:17;;;-1:-1:-1;10465:2:10;10455:12;10379:103;10508:8;10499:5;:17;10495:103;;10545:8;10536:17;;;-1:-1:-1;10581:2:10;10571:12;10495:103;10624:7;10615:5;:16;10611:100;;10660:7;10651:16;;;-1:-1:-1;10695:1:10;10685:11;10611:100;10737:7;10728:5;:16;10724:100;;10773:7;10764:16;;;-1:-1:-1;10808:1:10;10798:11;10724:100;10850:7;10841:5;:16;10837:100;;10886:7;10877:16;;;-1:-1:-1;10921:1:10;10911:11;10837:100;10963:7;10954:5;:16;10950:66;;11000:1;10990:11;11042:6;10139:916;-1:-1:-1;;10139:916:10:o;14:131:13:-;-1:-1:-1;;;;;;88:32:13;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:250::-;677:1;687:113;701:6;698:1;695:13;687:113;;;777:11;;;771:18;758:11;;;751:39;723:2;716:10;687:113;;;-1:-1:-1;;834:1:13;816:16;;809:27;592:250::o;847:271::-;889:3;927:5;921:12;954:6;949:3;942:19;970:76;1039:6;1032:4;1027:3;1023:14;1016:4;1009:5;1005:16;970:76;:::i;:::-;1100:2;1079:15;-1:-1:-1;;1075:29:13;1066:39;;;;1107:4;1062:50;;847:271;-1:-1:-1;;847:271:13:o;1123:220::-;1272:2;1261:9;1254:21;1235:4;1292:45;1333:2;1322:9;1318:18;1310:6;1292:45;:::i;1348:180::-;1407:6;1460:2;1448:9;1439:7;1435:23;1431:32;1428:52;;;1476:1;1473;1466:12;1428:52;-1:-1:-1;1499:23:13;;1348:180;-1:-1:-1;1348:180:13:o;1741:173::-;1809:20;;-1:-1:-1;;;;;1858:31:13;;1848:42;;1838:70;;1904:1;1901;1894:12;1838:70;1741:173;;;:::o;1919:254::-;1987:6;1995;2048:2;2036:9;2027:7;2023:23;2019:32;2016:52;;;2064:1;2061;2054:12;2016:52;2087:29;2106:9;2087:29;:::i;:::-;2077:39;2163:2;2148:18;;;;2135:32;;-1:-1:-1;;;1919:254:13:o;2178:328::-;2255:6;2263;2271;2324:2;2312:9;2303:7;2299:23;2295:32;2292:52;;;2340:1;2337;2330:12;2292:52;2363:29;2382:9;2363:29;:::i;:::-;2353:39;;2411:38;2445:2;2434:9;2430:18;2411:38;:::i;:::-;2401:48;;2496:2;2485:9;2481:18;2468:32;2458:42;;2178:328;;;;;:::o;2511:186::-;2570:6;2623:2;2611:9;2602:7;2598:23;2594:32;2591:52;;;2639:1;2636;2629:12;2591:52;2662:29;2681:9;2662:29;:::i;2884:347::-;2949:6;2957;3010:2;2998:9;2989:7;2985:23;2981:32;2978:52;;;3026:1;3023;3016:12;2978:52;3049:29;3068:9;3049:29;:::i;:::-;3039:39;;3128:2;3117:9;3113:18;3100:32;3175:5;3168:13;3161:21;3154:5;3151:32;3141:60;;3197:1;3194;3187:12;3141:60;3220:5;3210:15;;;2884:347;;;;;:::o;3236:127::-;3297:10;3292:3;3288:20;3285:1;3278:31;3328:4;3325:1;3318:15;3352:4;3349:1;3342:15;3368:1138;3463:6;3471;3479;3487;3540:3;3528:9;3519:7;3515:23;3511:33;3508:53;;;3557:1;3554;3547:12;3508:53;3580:29;3599:9;3580:29;:::i;:::-;3570:39;;3628:38;3662:2;3651:9;3647:18;3628:38;:::i;:::-;3618:48;;3713:2;3702:9;3698:18;3685:32;3675:42;;3768:2;3757:9;3753:18;3740:32;3791:18;3832:2;3824:6;3821:14;3818:34;;;3848:1;3845;3838:12;3818:34;3886:6;3875:9;3871:22;3861:32;;3931:7;3924:4;3920:2;3916:13;3912:27;3902:55;;3953:1;3950;3943:12;3902:55;3989:2;3976:16;4011:2;4007;4004:10;4001:36;;;4017:18;;:::i;:::-;4092:2;4086:9;4060:2;4146:13;;-1:-1:-1;;4142:22:13;;;4166:2;4138:31;4134:40;4122:53;;;4190:18;;;4210:22;;;4187:46;4184:72;;;4236:18;;:::i;:::-;4276:10;4272:2;4265:22;4311:2;4303:6;4296:18;4351:7;4346:2;4341;4337;4333:11;4329:20;4326:33;4323:53;;;4372:1;4369;4362:12;4323:53;4428:2;4423;4419;4415:11;4410:2;4402:6;4398:15;4385:46;4473:1;4468:2;4463;4455:6;4451:15;4447:24;4440:35;4494:6;4484:16;;;;;;;3368:1138;;;;;;;:::o;4511:260::-;4579:6;4587;4640:2;4628:9;4619:7;4615:23;4611:32;4608:52;;;4656:1;4653;4646:12;4608:52;4679:29;4698:9;4679:29;:::i;:::-;4669:39;;4727:38;4761:2;4750:9;4746:18;4727:38;:::i;:::-;4717:48;;4511:260;;;;;:::o;4776:380::-;4855:1;4851:12;;;;4898;;;4919:61;;4973:4;4965:6;4961:17;4951:27;;4919:61;5026:2;5018:6;5015:14;4995:18;4992:38;4989:161;;5072:10;5067:3;5063:20;5060:1;5053:31;5107:4;5104:1;5097:15;5135:4;5132:1;5125:15;4989:161;;4776:380;;;:::o;5993:409::-;6195:2;6177:21;;;6234:2;6214:18;;;6207:30;6273:34;6268:2;6253:18;;6246:62;-1:-1:-1;;;6339:2:13;6324:18;;6317:43;6392:3;6377:19;;5993:409::o;7170:496::-;7349:3;7387:6;7381:13;7403:66;7462:6;7457:3;7450:4;7442:6;7438:17;7403:66;:::i;:::-;7532:13;;7491:16;;;;7554:70;7532:13;7491:16;7601:4;7589:17;;7554:70;:::i;:::-;7640:20;;7170:496;-1:-1:-1;;;;7170:496:13:o;7671:401::-;7873:2;7855:21;;;7912:2;7892:18;;;7885:30;7951:34;7946:2;7931:18;;7924:62;-1:-1:-1;;;8017:2:13;8002:18;;7995:35;8062:3;8047:19;;7671:401::o;8836:414::-;9038:2;9020:21;;;9077:2;9057:18;;;9050:30;9116:34;9111:2;9096:18;;9089:62;-1:-1:-1;;;9182:2:13;9167:18;;9160:48;9240:3;9225:19;;8836:414::o;9387:489::-;-1:-1:-1;;;;;9656:15:13;;;9638:34;;9708:15;;9703:2;9688:18;;9681:43;9755:2;9740:18;;9733:34;;;9803:3;9798:2;9783:18;;9776:31;;;9581:4;;9824:46;;9850:19;;9842:6;9824:46;:::i;:::-;9816:54;9387:489;-1:-1:-1;;;;;;9387:489:13:o;9881:249::-;9950:6;10003:2;9991:9;9982:7;9978:23;9974:32;9971:52;;;10019:1;10016;10009:12;9971:52;10051:9;10045:16;10070:30;10094:5;10070:30;:::i",
  "language": "Solidity",
  "natspec": {
    "details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
    "events": {
      "Approval(address,address,uint256)": {
        "details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
      },
      "ApprovalForAll(address,address,bool)": {
        "details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
      },
      "Transfer(address,address,uint256)": {
        "details": "Emitted when `tokenId` token is transferred from `from` to `to`."
      }
    },
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "See {IERC721-approve}."
      },
      "balanceOf(address)": {
        "details": "See {IERC721-balanceOf}."
      },
      "constructor": {
        "details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
      },
      "getApproved(uint256)": {
        "details": "See {IERC721-getApproved}."
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC721-isApprovedForAll}."
      },
      "name()": {
        "details": "See {IERC721Metadata-name}."
      },
      "ownerOf(uint256)": {
        "details": "See {IERC721-ownerOf}."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC721-setApprovalForAll}."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "symbol()": {
        "details": "See {IERC721Metadata-symbol}."
      },
      "tokenURI(uint256)": {
        "details": "See {IERC721Metadata-tokenURI}."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC721-transferFrom}."
      }
    },
    "version": 1
  },
  "offset": [
    628,
    17005
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x1EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x164 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE7 PUSH2 0xE2 CALLDATASIZE PUSH1 0x4 PUSH2 0xC7F JUMP JUMPDEST PUSH2 0x228 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x27A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xCEC JUMP JUMPDEST PUSH2 0x124 PUSH2 0x11F CALLDATASIZE PUSH1 0x4 PUSH2 0xCFF JUMP JUMPDEST PUSH2 0x30C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF3 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x14A CALLDATASIZE PUSH1 0x4 PUSH2 0xD34 JUMP JUMPDEST PUSH2 0x333 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14F PUSH2 0x15F CALLDATASIZE PUSH1 0x4 PUSH2 0xD5E JUMP JUMPDEST PUSH2 0x44D JUMP JUMPDEST PUSH2 0x14F PUSH2 0x172 CALLDATASIZE PUSH1 0x4 PUSH2 0xD5E JUMP JUMPDEST PUSH2 0x47E JUMP JUMPDEST PUSH2 0x124 PUSH2 0x185 CALLDATASIZE PUSH1 0x4 PUSH2 0xCFF JUMP JUMPDEST PUSH2 0x499 JUMP JUMPDEST PUSH2 0x19D PUSH2 0x198 CALLDATASIZE PUSH1 0x4 PUSH2 0xD9A JUMP JUMPDEST PUSH2 0x4F9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF3 JUMP JUMPDEST PUSH2 0x104 PUSH2 0x57F JUMP JUMPDEST PUSH2 0x14F PUSH2 0x1C1 CALLDATASIZE PUSH1 0x4 PUSH2 0xDB5 JUMP JUMPDEST PUSH2 0x58E JUMP JUMPDEST PUSH2 0x14F PUSH2 0x1D4 CALLDATASIZE PUSH1 0x4 PUSH2 0xE07 JUMP JUMPDEST PUSH2 0x59D JUMP JUMPDEST PUSH2 0x104 PUSH2 0x1E7 CALLDATASIZE PUSH1 0x4 PUSH2 0xCFF JUMP JUMPDEST PUSH2 0x5D5 JUMP JUMPDEST PUSH2 0xE7 PUSH2 0x1FA CALLDATASIZE PUSH1 0x4 PUSH2 0xEE3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x259 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x274 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x289 SWAP1 PUSH2 0xF16 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B5 SWAP1 PUSH2 0xF16 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x302 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x302 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x317 DUP3 PUSH2 0x649 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33E DUP3 PUSH2 0x499 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x3B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x3CC JUMPI POP PUSH2 0x3CC DUP2 CALLER PUSH2 0x1FA JUMP JUMPDEST PUSH2 0x43E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A7 JUMP JUMPDEST PUSH2 0x448 DUP4 DUP4 PUSH2 0x6AB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x457 CALLER DUP3 PUSH2 0x719 JUMP JUMPDEST PUSH2 0x473 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A7 SWAP1 PUSH2 0xF50 JUMP JUMPDEST PUSH2 0x448 DUP4 DUP4 DUP4 PUSH2 0x798 JUMP JUMPDEST PUSH2 0x448 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x59D JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x274 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3A7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x563 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x3634B21037BBB732B9 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A7 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x289 SWAP1 PUSH2 0xF16 JUMP JUMPDEST PUSH2 0x599 CALLER DUP4 DUP4 PUSH2 0x8FC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x5A7 CALLER DUP4 PUSH2 0x719 JUMP JUMPDEST PUSH2 0x5C3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A7 SWAP1 PUSH2 0xF50 JUMP JUMPDEST PUSH2 0x5CF DUP5 DUP5 DUP5 DUP5 PUSH2 0x9CA JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x5E0 DUP3 PUSH2 0x649 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F7 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x617 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x642 JUMP JUMPDEST DUP1 PUSH2 0x621 DUP5 PUSH2 0x9FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x632 SWAP3 SWAP2 SWAP1 PUSH2 0xF9D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x6A8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3A7 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x6E0 DUP3 PUSH2 0x499 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x725 DUP4 PUSH2 0x499 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x76C JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST DUP1 PUSH2 0x790 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x785 DUP5 PUSH2 0x30C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x7AB DUP3 PUSH2 0x499 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x7D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A7 SWAP1 PUSH2 0xFCC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x833 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A7 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x846 DUP3 PUSH2 0x499 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x86C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A7 SWAP1 PUSH2 0xFCC JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND DUP1 DUP7 MSTORE PUSH1 0x3 DUP6 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE SWAP1 DUP8 AND DUP1 DUP7 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE DUP7 DUP7 MSTORE PUSH1 0x2 SWAP1 SWAP5 MSTORE DUP3 DUP6 KECCAK256 DUP1 SLOAD SWAP1 SWAP3 AND DUP5 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP5 SWAP4 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x95D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3A7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x9D5 DUP5 DUP5 DUP5 PUSH2 0x798 JUMP JUMPDEST PUSH2 0x9E1 DUP5 DUP5 DUP5 DUP5 PUSH2 0xA90 JUMP JUMPDEST PUSH2 0x5CF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A7 SWAP1 PUSH2 0x1011 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xA0A DUP4 PUSH2 0xB91 JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA2A JUMPI PUSH2 0xA2A PUSH2 0xDF1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xA54 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH1 0x0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0xA5E JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xB86 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xAD4 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1063 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xB0F JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xB0C SWAP2 DUP2 ADD SWAP1 PUSH2 0x10A0 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xB6C JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xB3D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xB42 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0xB64 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A7 SWAP1 PUSH2 0x1011 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0x790 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0xBD0 JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0xBFC JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0xC1A JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0xC32 JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0xC46 JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0xC58 JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x274 JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x6A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x642 DUP2 PUSH2 0xC69 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xCB7 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xC9F JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xCD8 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xC9C JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x642 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xCC0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xD2F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD47 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD50 DUP4 PUSH2 0xD18 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xD73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD7C DUP5 PUSH2 0xD18 JUMP JUMPDEST SWAP3 POP PUSH2 0xD8A PUSH1 0x20 DUP6 ADD PUSH2 0xD18 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDAC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x642 DUP3 PUSH2 0xD18 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDD1 DUP4 PUSH2 0xD18 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xDE6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xE1D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE26 DUP6 PUSH2 0xD18 JUMP JUMPDEST SWAP4 POP PUSH2 0xE34 PUSH1 0x20 DUP7 ADD PUSH2 0xD18 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xE58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xE6C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xE7E JUMPI PUSH2 0xE7E PUSH2 0xDF1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xEA6 JUMPI PUSH2 0xEA6 PUSH2 0xDF1 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0xEBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEF6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEFF DUP4 PUSH2 0xD18 JUMP JUMPDEST SWAP2 POP PUSH2 0xF0D PUSH1 0x20 DUP5 ADD PUSH2 0xD18 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xF2A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xF4A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2D SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x40 DUP3 ADD MSTORE PUSH13 0x1C881BDC88185C1C1C9BDD9959 PUSH1 0x9A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0xFAF DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0xC9C JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0xFC3 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0xC9C JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x37BBB732B9 PUSH1 0xD9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1096 SWAP1 DUP4 ADD DUP5 PUSH2 0xCC0 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x642 DUP2 PUSH2 0xC69 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE3 PUSH26 0x93BD7092BA824FC40A9736E0E5F096097CD184C35FC2178640B9 SELFBALANCE PUSH27 0x9CB964736F6C634300081800330000000000000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        628,
        17005
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        628,
        17005
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        628,
        17005
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5": {
      "fn": null,
      "offset": [
        628,
        17005
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "6": {
      "fn": null,
      "offset": [
        628,
        17005
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7": {
      "fn": null,
      "offset": [
        628,
        17005
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "8": {
      "fn": null,
      "offset": [
        628,
        17005
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        628,
        17005
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "12": {
      "fn": null,
      "offset": [
        628,
        17005
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        628,
        17005
      ],
      "op": "DUP1",
      "path": "1"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        628,
        17005
      ],
      "op": "REVERT",
      "path": "1"
    },
    "16": {
      "fn": null,
      "offset": [
        628,
        17005
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "17": {
      "fn": null,
      "offset": [
        628,
        17005
      ],
      "op": "POP",
      "path": "1"
    },
    "18": {
      "fn": null,
      "offset": [
        628,
        17005
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        628,
        17005
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "21": {
      "fn": null,
      "offset": [
        628,
        17005
      ],
      "op": "LT",
      "path": "1"
    },
    "22": {
      "fn": null,
      "offset": [
        628,
        17005
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xCF"
    },
    "25": {
      "fn": null,
      "offset": [
        628,
        17005
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "26": {
      "fn": null,
      "offset": [
        628,
        17005
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        628,
        17005
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "29": {
      "fn": null,
      "offset": [
        628,
        17005
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        628,
        17005
      ],
      "op": "SHR",
      "path": "1"
    },
    "32": {
      "fn": null,
      "offset": [
        628,
        17005
      ],
      "op": "DUP1",
      "path": "1"
    },
    "33": {
      "fn": null,
      "offset": [
        628,
        17005
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x6352211E"
    },
    "38": {
      "fn": null,
      "offset": [
        628,
        17005
      ],
      "op": "GT",
      "path": "1"
    },
    "39": {
      "fn": null,
      "offset": [
        628,
        17005
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8C"
    },
    "42": {
      "fn": null,
      "offset": [
        628,
        17005
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "43": {
      "fn": null,
      "offset": [
        628,
        17005
      ],
      "op": "DUP1",
      "path": "1"
    },
    "44": {
      "fn": null,
      "offset": [
        628,
        17005
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xA22CB465"
    },
    "49": {
      "fn": null,
      "offset": [
        628,
        17005
      ],
      "op": "GT",
      "path": "1"
    },
    "50": {
      "fn": null,
      "offset": [
        628,
        17005
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x66"
    },
    "53": {
      "fn": null,
      "offset": [
        628,
        17005
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "54": {
      "fn": null,
      "offset": [
        628,
        17005
      ],
      "op": "DUP1",
      "path": "1"
    },
    "55": {
      "fn": null,
      "offset": [
        628,
        17005
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xA22CB465"
    },
    "60": {
      "fn": null,
      "offset": [
        628,
        17005
      ],
      "op": "EQ",
      "path": "1"
    },
    "61": {
      "fn": null,
      "offset": [
        628,
        17005
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1B3"
    },
    "64": {
      "fn": null,
      "offset": [
        628,
        17005
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "65": {
      "fn": null,
      "offset": [
        628,
        17005
      ],
      "op": "DUP1",
      "path": "1"
    },
    "66": {
      "fn": null,
      "offset": [
        628,
        17005
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xB88D4FDE"
    },
    "71": {
      "fn": null,
      "offset": [
        628,
        17005
      ],
      "op": "EQ",
      "path": "1"
    },
    "72": {
      "fn": null,
      "offset": [
        628,
        17005
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1C6"
    },
    "75": {
      "fn": null,
      "offset": [
        628,
        17005
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "76": {
      "fn": null,
      "offset": [
        628,
        17005
      ],
      "op": "DUP1",
      "path": "1"
    },
    "77": {
      "fn": null,
      "offset": [
        628,
        17005
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xC87B56DD"
    },
    "82": {
      "fn": null,
      "offset": [
        628,
        17005
      ],
      "op": "EQ",
      "path": "1"
    },
    "83": {
      "fn": null,
      "offset": [
        628,
        17005
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1D9"
    },
    "86": {
      "fn": null,
      "offset": [
        628,
        17005
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "87": {
      "fn": null,
      "offset": [
        628,
        17005
      ],
      "op": "DUP1",
      "path": "1"
    },
    "88": {
      "fn": null,
      "offset": [
        628,
        17005
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xE985E9C5"
    },
    "93": {
      "fn": null,
      "offset": [
        628,
        17005
      ],
      "op": "EQ",
      "path": "1"
    },
    "94": {
      "fn": null,
      "offset": [
        628,
        17005
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1EC"
    },
    "97": {
      "fn": null,
      "offset": [
        628,
        17005
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "98": {
      "fn": null,
      "offset": [
        628,
        17005
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "100": {
      "fn": null,
      "offset": [
        628,
        17005
      ],
      "op": "DUP1",
      "path": "1"
    },
    "101": {
      "fn": null,
      "offset": [
        628,
        17005
      ],
      "op": "REVERT",
      "path": "1"
    },
    "102": {
      "fn": null,
      "offset": [
        628,
        17005
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "103": {
      "fn": null,
      "offset": [
        628,
        17005
      ],
      "op": "DUP1",
      "path": "1"
    },
    "104": {
      "fn": null,
      "offset": [
        628,
        17005
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x6352211E"
    },
    "109": {
      "fn": null,
      "offset": [
        628,
        17005
      ],
      "op": "EQ",
      "path": "1"
    },
    "110": {
      "fn": null,
      "offset": [
        628,
        17005
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x177"
    },
    "113": {
      "fn": null,
      "offset": [
        628,
        17005
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "114": {
      "fn": null,
      "offset": [
        628,
        17005
      ],
      "op": "DUP1",
      "path": "1"
    },
    "115": {
      "fn": null,
      "offset": [
        628,
        17005
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x70A08231"
    },
    "120": {
      "fn": null,
      "offset": [
        628,
        17005
      ],
      "op": "EQ",
      "path": "1"
    },
    "121": {
      "fn": null,
      "offset": [
        628,
        17005
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x18A"
    },
    "124": {
      "fn": null,
      "offset": [
        628,
        17005
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "125": {
      "fn": null,
      "offset": [
        628,
        17005
      ],
      "op": "DUP1",
      "path": "1"
    },
    "126": {
      "fn": null,
      "offset": [
        628,
        17005
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x95D89B41"
    },
    "131": {
      "fn": null,
      "offset": [
        628,
        17005
      ],
      "op": "EQ",
      "path": "1"
    },
    "132": {
      "fn": null,
      "offset": [
        628,
        17005
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1AB"
    },
    "135": {
      "fn": null,
      "offset": [
        628,
        17005
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "136": {
      "fn": null,
      "offset": [
        628,
        17005
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "138": {
      "fn": null,
      "offset": [
        628,
        17005
      ],
      "op": "DUP1",
      "path": "1"
    },
    "139": {
      "fn": null,
      "offset": [
        628,
        17005
      ],
      "op": "REVERT",
      "path": "1"
    },
    "140": {
      "fn": null,
      "offset": [
        628,
        17005
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "141": {
      "fn": null,
      "offset": [
        628,
        17005
      ],
      "op": "DUP1",
      "path": "1"
    },
    "142": {
      "fn": null,
      "offset": [
        628,
        17005
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x1FFC9A7"
    },
    "147": {
      "fn": null,
      "offset": [
        628,
        17005
      ],
      "op": "EQ",
      "path": "1"
    },
    "148": {
      "fn": null,
      "offset": [
        628,
        17005
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD4"
    },
    "151": {
      "fn": null,
      "offset": [
        628,
        17005
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "152": {
      "fn": null,
      "offset": [
        628,
        17005
      ],
      "op": "DUP1",
      "path": "1"
    },
    "153": {
      "fn": null,
      "offset": [
        628,
        17005
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x6FDDE03"
    },
    "158": {
      "fn": null,
      "offset": [
        628,
        17005
      ],
      "op": "EQ",
      "path": "1"
    },
    "159": {
      "fn": null,
      "offset": [
        628,
        17005
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xFC"
    },
    "162": {
      "fn": null,
      "offset": [
        628,
        17005
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "163": {
      "fn": null,
      "offset": [
        628,
        17005
      ],
      "op": "DUP1",
      "path": "1"
    },
    "164": {
      "fn": null,
      "offset": [
        628,
        17005
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x81812FC"
    },
    "169": {
      "fn": null,
      "offset": [
        628,
        17005
      ],
      "op": "EQ",
      "path": "1"
    },
    "170": {
      "fn": null,
      "offset": [
        628,
        17005
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x111"
    },
    "173": {
      "fn": null,
      "offset": [
        628,
        17005
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "174": {
      "fn": null,
      "offset": [
        628,
        17005
      ],
      "op": "DUP1",
      "path": "1"
    },
    "175": {
      "fn": null,
      "offset": [
        628,
        17005
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x95EA7B3"
    },
    "180": {
      "fn": null,
      "offset": [
        628,
        17005
      ],
      "op": "EQ",
      "path": "1"
    },
    "181": {
      "fn": null,
      "offset": [
        628,
        17005
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x13C"
    },
    "184": {
      "fn": null,
      "offset": [
        628,
        17005
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "185": {
      "fn": null,
      "offset": [
        628,
        17005
      ],
      "op": "DUP1",
      "path": "1"
    },
    "186": {
      "fn": null,
      "offset": [
        628,
        17005
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x23B872DD"
    },
    "191": {
      "fn": null,
      "offset": [
        628,
        17005
      ],
      "op": "EQ",
      "path": "1"
    },
    "192": {
      "fn": null,
      "offset": [
        628,
        17005
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x151"
    },
    "195": {
      "fn": null,
      "offset": [
        628,
        17005
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "196": {
      "fn": null,
      "offset": [
        628,
        17005
      ],
      "op": "DUP1",
      "path": "1"
    },
    "197": {
      "fn": null,
      "offset": [
        628,
        17005
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x42842E0E"
    },
    "202": {
      "fn": null,
      "offset": [
        628,
        17005
      ],
      "op": "EQ",
      "path": "1"
    },
    "203": {
      "fn": null,
      "offset": [
        628,
        17005
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x164"
    },
    "206": {
      "fn": null,
      "offset": [
        628,
        17005
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "207": {
      "fn": null,
      "offset": [
        628,
        17005
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "208": {
      "fn": null,
      "offset": [
        628,
        17005
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "210": {
      "fn": null,
      "offset": [
        628,
        17005
      ],
      "op": "DUP1",
      "path": "1"
    },
    "211": {
      "first_revert": true,
      "fn": null,
      "offset": [
        628,
        17005
      ],
      "op": "REVERT",
      "path": "1"
    },
    "212": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "213": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE7"
    },
    "216": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE2"
    },
    "219": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "220": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "222": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC7F"
    },
    "225": {
      "fn": "ERC721.supportsInterface",
      "jump": "i",
      "offset": [
        1570,
        1870
      ],
      "op": "JUMP",
      "path": "1"
    },
    "226": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "227": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x228"
    },
    "230": {
      "fn": "ERC721.supportsInterface",
      "jump": "i",
      "offset": [
        1570,
        1870
      ],
      "op": "JUMP",
      "path": "1"
    },
    "231": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "232": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "234": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "235": {
      "op": "SWAP1"
    },
    "236": {
      "op": "ISZERO"
    },
    "237": {
      "op": "ISZERO"
    },
    "238": {
      "op": "DUP2"
    },
    "239": {
      "op": "MSTORE"
    },
    "240": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "242": {
      "op": "ADD"
    },
    "243": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "244": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "246": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "247": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "DUP1",
      "path": "1"
    },
    "248": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "249": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "SUB",
      "path": "1"
    },
    "250": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "251": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "RETURN",
      "path": "1"
    },
    "252": {
      "fn": "ERC721.name",
      "offset": [
        2471,
        2569
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "253": {
      "fn": "ERC721.name",
      "offset": [
        2471,
        2569
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x104"
    },
    "256": {
      "fn": "ERC721.name",
      "offset": [
        2471,
        2569
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x27A"
    },
    "259": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2471,
        2569
      ],
      "op": "JUMP",
      "path": "1"
    },
    "260": {
      "fn": "ERC721.name",
      "offset": [
        2471,
        2569
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "261": {
      "fn": "ERC721.name",
      "offset": [
        2471,
        2569
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "263": {
      "fn": "ERC721.name",
      "offset": [
        2471,
        2569
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "264": {
      "fn": "ERC721.name",
      "offset": [
        2471,
        2569
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF3"
    },
    "267": {
      "fn": "ERC721.name",
      "offset": [
        2471,
        2569
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "268": {
      "fn": "ERC721.name",
      "offset": [
        2471,
        2569
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "269": {
      "fn": "ERC721.name",
      "offset": [
        2471,
        2569
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xCEC"
    },
    "272": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2471,
        2569
      ],
      "op": "JUMP",
      "path": "1"
    },
    "273": {
      "fn": "ERC721.getApproved",
      "offset": [
        3935,
        4102
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "274": {
      "fn": "ERC721.getApproved",
      "offset": [
        3935,
        4102
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x124"
    },
    "277": {
      "fn": "ERC721.getApproved",
      "offset": [
        3935,
        4102
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x11F"
    },
    "280": {
      "fn": "ERC721.getApproved",
      "offset": [
        3935,
        4102
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "281": {
      "fn": "ERC721.getApproved",
      "offset": [
        3935,
        4102
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "283": {
      "fn": "ERC721.getApproved",
      "offset": [
        3935,
        4102
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xCFF"
    },
    "286": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        3935,
        4102
      ],
      "op": "JUMP",
      "path": "1"
    },
    "287": {
      "fn": "ERC721.getApproved",
      "offset": [
        3935,
        4102
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "288": {
      "fn": "ERC721.getApproved",
      "offset": [
        3935,
        4102
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x30C"
    },
    "291": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        3935,
        4102
      ],
      "op": "JUMP",
      "path": "1"
    },
    "292": {
      "fn": "ERC721.getApproved",
      "offset": [
        3935,
        4102
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "293": {
      "fn": "ERC721.getApproved",
      "offset": [
        3935,
        4102
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "295": {
      "fn": "ERC721.getApproved",
      "offset": [
        3935,
        4102
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "296": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "298": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "300": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "302": {
      "op": "SHL"
    },
    "303": {
      "op": "SUB"
    },
    "304": {
      "op": "SWAP1"
    },
    "305": {
      "op": "SWAP2"
    },
    "306": {
      "op": "AND"
    },
    "307": {
      "op": "DUP2"
    },
    "308": {
      "op": "MSTORE"
    },
    "309": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "311": {
      "op": "ADD"
    },
    "312": {
      "fn": "ERC721.getApproved",
      "offset": [
        3935,
        4102
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF3"
    },
    "315": {
      "op": "JUMP"
    },
    "316": {
      "fn": "ERC721.approve",
      "offset": [
        3468,
        3874
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "317": {
      "fn": "ERC721.approve",
      "offset": [
        3468,
        3874
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x14F"
    },
    "320": {
      "fn": "ERC721.approve",
      "offset": [
        3468,
        3874
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x14A"
    },
    "323": {
      "fn": "ERC721.approve",
      "offset": [
        3468,
        3874
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "324": {
      "fn": "ERC721.approve",
      "offset": [
        3468,
        3874
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "326": {
      "fn": "ERC721.approve",
      "offset": [
        3468,
        3874
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD34"
    },
    "329": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3468,
        3874
      ],
      "op": "JUMP",
      "path": "1"
    },
    "330": {
      "fn": "ERC721.approve",
      "offset": [
        3468,
        3874
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "331": {
      "fn": "ERC721.approve",
      "offset": [
        3468,
        3874
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x333"
    },
    "334": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3468,
        3874
      ],
      "op": "JUMP",
      "path": "1"
    },
    "335": {
      "fn": "ERC721.approve",
      "offset": [
        3468,
        3874
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "336": {
      "fn": "ERC721.approve",
      "offset": [
        3468,
        3874
      ],
      "op": "STOP",
      "path": "1"
    },
    "337": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4612,
        4908
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "338": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4612,
        4908
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x14F"
    },
    "341": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4612,
        4908
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x15F"
    },
    "344": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4612,
        4908
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "345": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4612,
        4908
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "347": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4612,
        4908
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD5E"
    },
    "350": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4612,
        4908
      ],
      "op": "JUMP",
      "path": "1"
    },
    "351": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4612,
        4908
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "352": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4612,
        4908
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x44D"
    },
    "355": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4612,
        4908
      ],
      "op": "JUMP",
      "path": "1"
    },
    "356": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        4974,
        5123
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "357": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        4974,
        5123
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x14F"
    },
    "360": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        4974,
        5123
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x172"
    },
    "363": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        4974,
        5123
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "364": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        4974,
        5123
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "366": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        4974,
        5123
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD5E"
    },
    "369": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        4974,
        5123
      ],
      "op": "JUMP",
      "path": "1"
    },
    "370": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        4974,
        5123
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "371": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        4974,
        5123
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x47E"
    },
    "374": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        4974,
        5123
      ],
      "op": "JUMP",
      "path": "1"
    },
    "375": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2190,
        2409
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "376": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2190,
        2409
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x124"
    },
    "379": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2190,
        2409
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x185"
    },
    "382": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2190,
        2409
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "383": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2190,
        2409
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "385": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2190,
        2409
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xCFF"
    },
    "388": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        2190,
        2409
      ],
      "op": "JUMP",
      "path": "1"
    },
    "389": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2190,
        2409
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "390": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2190,
        2409
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x499"
    },
    "393": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        2190,
        2409
      ],
      "op": "JUMP",
      "path": "1"
    },
    "394": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2133
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "395": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2133
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x19D"
    },
    "398": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2133
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x198"
    },
    "401": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2133
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "402": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2133
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "404": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2133
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD9A"
    },
    "407": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        1929,
        2133
      ],
      "op": "JUMP",
      "path": "1"
    },
    "408": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2133
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "409": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2133
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4F9"
    },
    "412": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        1929,
        2133
      ],
      "op": "JUMP",
      "path": "1"
    },
    "413": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2133
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "414": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2133
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "416": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2133
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "417": {
      "op": "SWAP1"
    },
    "418": {
      "op": "DUP2"
    },
    "419": {
      "op": "MSTORE"
    },
    "420": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "422": {
      "op": "ADD"
    },
    "423": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2133
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF3"
    },
    "426": {
      "op": "JUMP"
    },
    "427": {
      "fn": "ERC721.symbol",
      "offset": [
        2633,
        2735
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "428": {
      "fn": "ERC721.symbol",
      "offset": [
        2633,
        2735
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x104"
    },
    "431": {
      "fn": "ERC721.symbol",
      "offset": [
        2633,
        2735
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x57F"
    },
    "434": {
      "fn": "ERC721.symbol",
      "jump": "i",
      "offset": [
        2633,
        2735
      ],
      "op": "JUMP",
      "path": "1"
    },
    "435": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4169,
        4322
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "436": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4169,
        4322
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x14F"
    },
    "439": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4169,
        4322
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1C1"
    },
    "442": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4169,
        4322
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "443": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4169,
        4322
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "445": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4169,
        4322
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xDB5"
    },
    "448": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4169,
        4322
      ],
      "op": "JUMP",
      "path": "1"
    },
    "449": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4169,
        4322
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "450": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4169,
        4322
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x58E"
    },
    "453": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4169,
        4322
      ],
      "op": "JUMP",
      "path": "1"
    },
    "454": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5189,
        5465
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "455": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5189,
        5465
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x14F"
    },
    "458": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5189,
        5465
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1D4"
    },
    "461": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5189,
        5465
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "462": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5189,
        5465
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "464": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5189,
        5465
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE07"
    },
    "467": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5189,
        5465
      ],
      "op": "JUMP",
      "path": "1"
    },
    "468": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5189,
        5465
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "469": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5189,
        5465
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x59D"
    },
    "472": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5189,
        5465
      ],
      "op": "JUMP",
      "path": "1"
    },
    "473": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2801,
        3077
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "474": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2801,
        3077
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x104"
    },
    "477": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2801,
        3077
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1E7"
    },
    "480": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2801,
        3077
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "481": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2801,
        3077
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "483": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2801,
        3077
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xCFF"
    },
    "486": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        2801,
        3077
      ],
      "op": "JUMP",
      "path": "1"
    },
    "487": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2801,
        3077
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "488": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2801,
        3077
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5D5"
    },
    "491": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        2801,
        3077
      ],
      "op": "JUMP",
      "path": "1"
    },
    "492": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4388,
        4550
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "493": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4388,
        4550
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE7"
    },
    "496": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4388,
        4550
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1FA"
    },
    "499": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4388,
        4550
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "500": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4388,
        4550
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "502": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4388,
        4550
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xEE3"
    },
    "505": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [
        4388,
        4550
      ],
      "op": "JUMP",
      "path": "1"
    },
    "506": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4388,
        4550
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "507": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "509": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "511": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "513": {
      "op": "SHL"
    },
    "514": {
      "op": "SUB"
    },
    "515": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "SWAP2",
      "path": "1",
      "statement": 0
    },
    "516": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "DUP3",
      "path": "1"
    },
    "517": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "AND",
      "path": "1"
    },
    "518": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4485,
        4489
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "520": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "521": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "DUP2",
      "path": "1"
    },
    "522": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "523": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4526
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x5"
    },
    "525": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "527": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "528": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "DUP2",
      "path": "1"
    },
    "529": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "530": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "532": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "DUP1",
      "path": "1"
    },
    "533": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "DUP4",
      "path": "1"
    },
    "534": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "535": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "536": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "537": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "538": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "AND",
      "path": "1"
    },
    "539": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "DUP3",
      "path": "1"
    },
    "540": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "541": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "542": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "543": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "544": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "545": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "546": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "547": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "549": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "AND",
      "path": "1"
    },
    "550": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "551": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4388,
        4550
      ],
      "op": "JUMP",
      "path": "1"
    },
    "552": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "553": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1672,
        1676
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "555": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "557": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "559": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "561": {
      "op": "SHL"
    },
    "562": {
      "op": "SUB"
    },
    "563": {
      "op": "NOT"
    },
    "564": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1747
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 1
    },
    "565": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1747
      ],
      "op": "AND",
      "path": "1"
    },
    "566": {
      "op": "PUSH4",
      "value": "0x80AC58CD"
    },
    "571": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "573": {
      "op": "SHL"
    },
    "574": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1747
      ],
      "op": "EQ",
      "path": "1"
    },
    "575": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1747
      ],
      "op": "DUP1",
      "path": "1"
    },
    "576": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1811
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x259"
    },
    "579": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1811
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "580": {
      "op": "POP"
    },
    "581": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "583": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "585": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "587": {
      "op": "SHL"
    },
    "588": {
      "op": "SUB"
    },
    "589": {
      "op": "NOT"
    },
    "590": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1763,
        1811
      ],
      "op": "DUP3",
      "path": "1"
    },
    "591": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1763,
        1811
      ],
      "op": "AND",
      "path": "1"
    },
    "592": {
      "op": "PUSH4",
      "value": "0x5B5E139F"
    },
    "597": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "599": {
      "op": "SHL"
    },
    "600": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1763,
        1811
      ],
      "op": "EQ",
      "path": "1"
    },
    "601": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1811
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "602": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1863
      ],
      "op": "DUP1",
      "path": "1"
    },
    "603": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1863
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x274"
    },
    "606": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1863
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "607": {
      "op": "POP"
    },
    "608": {
      "op": "PUSH4",
      "value": "0x1FFC9A7"
    },
    "613": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "615": {
      "op": "SHL"
    },
    "616": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "618": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "620": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "622": {
      "op": "SHL"
    },
    "623": {
      "op": "SUB"
    },
    "624": {
      "op": "NOT"
    },
    "625": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "DUP4",
      "path": "8",
      "statement": 2
    },
    "626": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "AND",
      "path": "8"
    },
    "627": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "EQ",
      "path": "8"
    },
    "628": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1827,
        1863
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "629": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1688,
        1863
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "630": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "631": {
      "op": "POP"
    },
    "632": {
      "op": "POP"
    },
    "633": {
      "fn": "ERC721.supportsInterface",
      "jump": "o",
      "offset": [
        1570,
        1870
      ],
      "op": "JUMP",
      "path": "1"
    },
    "634": {
      "fn": "ERC721.name",
      "offset": [
        2471,
        2569
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "635": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2538
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "637": {
      "fn": "ERC721.name",
      "offset": [
        2557,
        2562
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 3,
      "value": "0x0"
    },
    "639": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "DUP1",
      "path": "1"
    },
    "640": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "641": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x289"
    },
    "644": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "645": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF16"
    },
    "648": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2550,
        2562
      ],
      "op": "JUMP",
      "path": "1"
    },
    "649": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "650": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "DUP1",
      "path": "1"
    },
    "651": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "653": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "ADD",
      "path": "1"
    },
    "654": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "656": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "DUP1",
      "path": "1"
    },
    "657": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "658": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "DIV",
      "path": "1"
    },
    "659": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "MUL",
      "path": "1"
    },
    "660": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "662": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "ADD",
      "path": "1"
    },
    "663": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "665": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "666": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "667": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "DUP2",
      "path": "1"
    },
    "668": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "ADD",
      "path": "1"
    },
    "669": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "671": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "672": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "DUP1",
      "path": "1"
    },
    "673": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "674": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "675": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "676": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "DUP2",
      "path": "1"
    },
    "677": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "DUP2",
      "path": "1"
    },
    "678": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "679": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "681": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "ADD",
      "path": "1"
    },
    "682": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "DUP3",
      "path": "1"
    },
    "683": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "DUP1",
      "path": "1"
    },
    "684": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "685": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2B5"
    },
    "688": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "689": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF16"
    },
    "692": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2550,
        2562
      ],
      "op": "JUMP",
      "path": "1"
    },
    "693": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "694": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "DUP1",
      "path": "1"
    },
    "695": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "696": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x302"
    },
    "699": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "700": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "DUP1",
      "path": "1"
    },
    "701": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "703": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "LT",
      "path": "1"
    },
    "704": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2D7"
    },
    "707": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "708": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "711": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "DUP1",
      "path": "1"
    },
    "712": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "DUP4",
      "path": "1"
    },
    "713": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "714": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "DIV",
      "path": "1"
    },
    "715": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "MUL",
      "path": "1"
    },
    "716": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "DUP4",
      "path": "1"
    },
    "717": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "718": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "719": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "721": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "ADD",
      "path": "1"
    },
    "722": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "723": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x302"
    },
    "726": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "JUMP",
      "path": "1"
    },
    "727": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "728": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "DUP3",
      "path": "1"
    },
    "729": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "ADD",
      "path": "1"
    },
    "730": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "731": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "732": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "734": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "735": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "737": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "739": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "740": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "741": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "742": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "DUP2",
      "path": "1"
    },
    "743": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "744": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "DUP2",
      "path": "1"
    },
    "745": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "746": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "747": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "749": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "ADD",
      "path": "1"
    },
    "750": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "751": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "753": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "ADD",
      "path": "1"
    },
    "754": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "DUP1",
      "path": "1"
    },
    "755": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "DUP4",
      "path": "1"
    },
    "756": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "GT",
      "path": "1"
    },
    "757": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2E5"
    },
    "760": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "761": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "DUP3",
      "path": "1"
    },
    "762": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "763": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "SUB",
      "path": "1"
    },
    "764": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "766": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "AND",
      "path": "1"
    },
    "767": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "DUP3",
      "path": "1"
    },
    "768": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "ADD",
      "path": "1"
    },
    "769": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "770": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "771": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "POP",
      "path": "1"
    },
    "772": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "POP",
      "path": "1"
    },
    "773": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "POP",
      "path": "1"
    },
    "774": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "POP",
      "path": "1"
    },
    "775": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "POP",
      "path": "1"
    },
    "776": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "777": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "POP",
      "path": "1"
    },
    "778": {
      "fn": "ERC721.name",
      "offset": [
        2471,
        2569
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "779": {
      "fn": "ERC721.name",
      "jump": "o",
      "offset": [
        2471,
        2569
      ],
      "op": "JUMP",
      "path": "1"
    },
    "780": {
      "fn": "ERC721.getApproved",
      "offset": [
        3935,
        4102
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "781": {
      "fn": "ERC721.getApproved",
      "offset": [
        4011,
        4018
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "783": {
      "fn": "ERC721.getApproved",
      "offset": [
        4030,
        4053
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 4,
      "value": "0x317"
    },
    "786": {
      "fn": "ERC721.getApproved",
      "offset": [
        4045,
        4052
      ],
      "op": "DUP3",
      "path": "1"
    },
    "787": {
      "fn": "ERC721.getApproved",
      "offset": [
        4030,
        4044
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x649"
    },
    "790": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        4030,
        4053
      ],
      "op": "JUMP",
      "path": "1"
    },
    "791": {
      "fn": "ERC721.getApproved",
      "offset": [
        4030,
        4053
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "792": {
      "op": "POP"
    },
    "793": {
      "fn": "ERC721.getApproved",
      "offset": [
        4071,
        4095
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 5,
      "value": "0x0"
    },
    "795": {
      "fn": "ERC721.getApproved",
      "offset": [
        4071,
        4095
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "796": {
      "fn": "ERC721.getApproved",
      "offset": [
        4071,
        4095
      ],
      "op": "DUP2",
      "path": "1"
    },
    "797": {
      "fn": "ERC721.getApproved",
      "offset": [
        4071,
        4095
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "798": {
      "fn": "ERC721.getApproved",
      "offset": [
        4071,
        4086
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "800": {
      "fn": "ERC721.getApproved",
      "offset": [
        4071,
        4095
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "802": {
      "fn": "ERC721.getApproved",
      "offset": [
        4071,
        4095
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "803": {
      "fn": "ERC721.getApproved",
      "offset": [
        4071,
        4095
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "805": {
      "fn": "ERC721.getApproved",
      "offset": [
        4071,
        4095
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "806": {
      "fn": "ERC721.getApproved",
      "offset": [
        4071,
        4095
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "807": {
      "fn": "ERC721.getApproved",
      "offset": [
        4071,
        4095
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "808": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "810": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "812": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "814": {
      "op": "SHL"
    },
    "815": {
      "op": "SUB"
    },
    "816": {
      "fn": "ERC721.getApproved",
      "offset": [
        4071,
        4095
      ],
      "op": "AND",
      "path": "1"
    },
    "817": {
      "fn": "ERC721.getApproved",
      "offset": [
        4071,
        4095
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "818": {
      "fn": "ERC721.getApproved",
      "jump": "o",
      "offset": [
        3935,
        4102
      ],
      "op": "JUMP",
      "path": "1"
    },
    "819": {
      "fn": "ERC721.approve",
      "offset": [
        3468,
        3874
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "820": {
      "fn": "ERC721.approve",
      "offset": [
        3548,
        3561
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "822": {
      "fn": "ERC721.approve",
      "offset": [
        3564,
        3587
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x33E"
    },
    "825": {
      "fn": "ERC721.approve",
      "offset": [
        3579,
        3586
      ],
      "op": "DUP3",
      "path": "1"
    },
    "826": {
      "fn": "ERC721.approve",
      "offset": [
        3564,
        3578
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x499"
    },
    "829": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3564,
        3587
      ],
      "op": "JUMP",
      "path": "1"
    },
    "830": {
      "fn": "ERC721.approve",
      "offset": [
        3564,
        3587
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "831": {
      "fn": "ERC721.approve",
      "offset": [
        3548,
        3587
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "832": {
      "fn": "ERC721.approve",
      "offset": [
        3548,
        3587
      ],
      "op": "POP",
      "path": "1"
    },
    "833": {
      "fn": "ERC721.approve",
      "offset": [
        3611,
        3616
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 6
    },
    "834": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "836": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "838": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "840": {
      "op": "SHL"
    },
    "841": {
      "op": "SUB"
    },
    "842": {
      "fn": "ERC721.approve",
      "offset": [
        3605,
        3616
      ],
      "op": "AND",
      "path": "1"
    },
    "843": {
      "fn": "ERC721.approve",
      "offset": [
        3605,
        3607
      ],
      "op": "DUP4",
      "path": "1"
    },
    "844": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "846": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "848": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "850": {
      "op": "SHL"
    },
    "851": {
      "op": "SUB"
    },
    "852": {
      "fn": "ERC721.approve",
      "offset": [
        3605,
        3616
      ],
      "op": "AND",
      "path": "1"
    },
    "853": {
      "branch": 62,
      "fn": "ERC721.approve",
      "offset": [
        3605,
        3616
      ],
      "op": "SUB",
      "path": "1"
    },
    "854": {
      "fn": "ERC721.approve",
      "offset": [
        3597,
        3654
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3B0"
    },
    "857": {
      "branch": 62,
      "fn": "ERC721.approve",
      "offset": [
        3597,
        3654
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "858": {
      "fn": "ERC721.approve",
      "offset": [
        3597,
        3654
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "860": {
      "fn": "ERC721.approve",
      "offset": [
        3597,
        3654
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "861": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "865": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "867": {
      "op": "SHL"
    },
    "868": {
      "fn": "ERC721.approve",
      "offset": [
        3597,
        3654
      ],
      "op": "DUP2",
      "path": "1"
    },
    "869": {
      "fn": "ERC721.approve",
      "offset": [
        3597,
        3654
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "870": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "872": {
      "fn": "ERC721.approve",
      "offset": [
        3597,
        3654
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "874": {
      "fn": "ERC721.approve",
      "offset": [
        3597,
        3654
      ],
      "op": "DUP3",
      "path": "1"
    },
    "875": {
      "fn": "ERC721.approve",
      "offset": [
        3597,
        3654
      ],
      "op": "ADD",
      "path": "1"
    },
    "876": {
      "op": "MSTORE"
    },
    "877": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "879": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "881": {
      "op": "DUP3"
    },
    "882": {
      "op": "ADD"
    },
    "883": {
      "op": "MSTORE"
    },
    "884": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65"
    },
    "917": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "919": {
      "op": "DUP3"
    },
    "920": {
      "op": "ADD"
    },
    "921": {
      "op": "MSTORE"
    },
    "922": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "924": {
      "op": "PUSH1",
      "value": "0xF9"
    },
    "926": {
      "op": "SHL"
    },
    "927": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "929": {
      "op": "DUP3"
    },
    "930": {
      "op": "ADD"
    },
    "931": {
      "op": "MSTORE"
    },
    "932": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "934": {
      "op": "ADD"
    },
    "935": {
      "fn": "ERC721.approve",
      "offset": [
        3597,
        3654
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "936": {
      "fn": "ERC721.approve",
      "offset": [
        3597,
        3654
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "938": {
      "fn": "ERC721.approve",
      "offset": [
        3597,
        3654
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "939": {
      "fn": "ERC721.approve",
      "offset": [
        3597,
        3654
      ],
      "op": "DUP1",
      "path": "1"
    },
    "940": {
      "fn": "ERC721.approve",
      "offset": [
        3597,
        3654
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "941": {
      "fn": "ERC721.approve",
      "offset": [
        3597,
        3654
      ],
      "op": "SUB",
      "path": "1"
    },
    "942": {
      "fn": "ERC721.approve",
      "offset": [
        3597,
        3654
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "943": {
      "fn": "ERC721.approve",
      "offset": [
        3597,
        3654
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "1"
    },
    "944": {
      "fn": "ERC721.approve",
      "offset": [
        3597,
        3654
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "945": {
      "fn": "Context._msgSender",
      "offset": [
        734,
        744
      ],
      "op": "CALLER",
      "path": "6",
      "statement": 7
    },
    "946": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "948": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "950": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "952": {
      "op": "SHL"
    },
    "953": {
      "op": "SUB"
    },
    "954": {
      "fn": "ERC721.approve",
      "offset": [
        3686,
        3707
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 8
    },
    "955": {
      "fn": "ERC721.approve",
      "offset": [
        3686,
        3707
      ],
      "op": "AND",
      "path": "1"
    },
    "956": {
      "fn": "ERC721.approve",
      "offset": [
        3686,
        3707
      ],
      "op": "EQ",
      "path": "1"
    },
    "957": {
      "branch": 63,
      "fn": "ERC721.approve",
      "offset": [
        3686,
        3707
      ],
      "op": "DUP1",
      "path": "1"
    },
    "958": {
      "fn": "ERC721.approve",
      "offset": [
        3686,
        3748
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CC"
    },
    "961": {
      "branch": 63,
      "fn": "ERC721.approve",
      "offset": [
        3686,
        3748
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "962": {
      "op": "POP"
    },
    "963": {
      "fn": "ERC721.approve",
      "offset": [
        3711,
        3748
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CC"
    },
    "966": {
      "fn": "ERC721.approve",
      "offset": [
        3728,
        3733
      ],
      "op": "DUP2",
      "path": "1"
    },
    "967": {
      "fn": "Context._msgSender",
      "offset": [
        734,
        744
      ],
      "op": "CALLER",
      "path": "6"
    },
    "968": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4388,
        4550
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1FA"
    },
    "971": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [
        4388,
        4550
      ],
      "op": "JUMP",
      "path": "1"
    },
    "972": {
      "branch": 64,
      "fn": "ERC721.approve",
      "offset": [
        3711,
        3748
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "973": {
      "fn": "ERC721.approve",
      "offset": [
        3665,
        3835
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x43E"
    },
    "976": {
      "branch": 64,
      "fn": "ERC721.approve",
      "offset": [
        3665,
        3835
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "977": {
      "fn": "ERC721.approve",
      "offset": [
        3665,
        3835
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "979": {
      "fn": "ERC721.approve",
      "offset": [
        3665,
        3835
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "980": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "984": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "986": {
      "op": "SHL"
    },
    "987": {
      "fn": "ERC721.approve",
      "offset": [
        3665,
        3835
      ],
      "op": "DUP2",
      "path": "1"
    },
    "988": {
      "fn": "ERC721.approve",
      "offset": [
        3665,
        3835
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "989": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "991": {
      "fn": "ERC721.approve",
      "offset": [
        3665,
        3835
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "993": {
      "fn": "ERC721.approve",
      "offset": [
        3665,
        3835
      ],
      "op": "DUP3",
      "path": "1"
    },
    "994": {
      "fn": "ERC721.approve",
      "offset": [
        3665,
        3835
      ],
      "op": "ADD",
      "path": "1"
    },
    "995": {
      "op": "MSTORE"
    },
    "996": {
      "op": "PUSH1",
      "value": "0x3D"
    },
    "998": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1000": {
      "op": "DUP3"
    },
    "1001": {
      "op": "ADD"
    },
    "1002": {
      "op": "MSTORE"
    },
    "1003": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F"
    },
    "1036": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1038": {
      "op": "DUP3"
    },
    "1039": {
      "op": "ADD"
    },
    "1040": {
      "op": "MSTORE"
    },
    "1041": {
      "op": "PUSH32",
      "value": "0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000"
    },
    "1074": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1076": {
      "op": "DUP3"
    },
    "1077": {
      "op": "ADD"
    },
    "1078": {
      "op": "MSTORE"
    },
    "1079": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1081": {
      "op": "ADD"
    },
    "1082": {
      "fn": "ERC721.approve",
      "offset": [
        3665,
        3835
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3A7"
    },
    "1085": {
      "op": "JUMP"
    },
    "1086": {
      "fn": "ERC721.approve",
      "offset": [
        3665,
        3835
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1087": {
      "fn": "ERC721.approve",
      "offset": [
        3846,
        3867
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 9,
      "value": "0x448"
    },
    "1090": {
      "fn": "ERC721.approve",
      "offset": [
        3855,
        3857
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1091": {
      "fn": "ERC721.approve",
      "offset": [
        3859,
        3866
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1092": {
      "fn": "ERC721.approve",
      "offset": [
        3846,
        3854
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6AB"
    },
    "1095": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3846,
        3867
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1096": {
      "fn": "ERC721.approve",
      "offset": [
        3846,
        3867
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1097": {
      "fn": "ERC721.approve",
      "offset": [
        3538,
        3874
      ],
      "op": "POP",
      "path": "1"
    },
    "1098": {
      "fn": "ERC721.approve",
      "offset": [
        3468,
        3874
      ],
      "op": "POP",
      "path": "1"
    },
    "1099": {
      "fn": "ERC721.approve",
      "offset": [
        3468,
        3874
      ],
      "op": "POP",
      "path": "1"
    },
    "1100": {
      "fn": "ERC721.approve",
      "jump": "o",
      "offset": [
        3468,
        3874
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1101": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4612,
        4908
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1102": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4771,
        4812
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 10,
      "value": "0x457"
    },
    "1105": {
      "fn": "Context._msgSender",
      "offset": [
        734,
        744
      ],
      "op": "CALLER",
      "path": "6"
    },
    "1106": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4804,
        4811
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1107": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4771,
        4789
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x719"
    },
    "1110": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4771,
        4812
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1111": {
      "branch": 65,
      "fn": "ERC721.transferFrom",
      "offset": [
        4771,
        4812
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1112": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4763,
        4862
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x473"
    },
    "1115": {
      "branch": 65,
      "fn": "ERC721.transferFrom",
      "offset": [
        4763,
        4862
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1116": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4763,
        4862
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1118": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4763,
        4862
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1119": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1123": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1125": {
      "op": "SHL"
    },
    "1126": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4763,
        4862
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1127": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4763,
        4862
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1128": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4763,
        4862
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1130": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4763,
        4862
      ],
      "op": "ADD",
      "path": "1"
    },
    "1131": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4763,
        4862
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3A7"
    },
    "1134": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4763,
        4862
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1135": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4763,
        4862
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF50"
    },
    "1138": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4763,
        4862
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1139": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4763,
        4862
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1140": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4873,
        4901
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 11,
      "value": "0x448"
    },
    "1143": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4883,
        4887
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1144": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4889,
        4891
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1145": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4893,
        4900
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1146": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4873,
        4882
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x798"
    },
    "1149": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4873,
        4901
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1150": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        4974,
        5123
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1151": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5077,
        5116
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 12,
      "value": "0x448"
    },
    "1154": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5094,
        5098
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1155": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5100,
        5102
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1156": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5104,
        5111
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1157": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5077,
        5116
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1159": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5077,
        5116
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1160": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5077,
        5116
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1161": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5077,
        5116
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1163": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5077,
        5116
      ],
      "op": "ADD",
      "path": "1"
    },
    "1164": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5077,
        5116
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1166": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5077,
        5116
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1167": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5077,
        5116
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1168": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5077,
        5116
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1170": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5077,
        5116
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1171": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5077,
        5116
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1172": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5077,
        5116
      ],
      "op": "POP",
      "path": "1"
    },
    "1173": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5077,
        5093
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x59D"
    },
    "1176": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5077,
        5116
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1177": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2190,
        2409
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1178": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2262,
        2269
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1180": {
      "fn": "ERC721._ownerOf",
      "offset": [
        6794,
        6810
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 13
    },
    "1181": {
      "fn": "ERC721._ownerOf",
      "offset": [
        6794,
        6810
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1182": {
      "fn": "ERC721._ownerOf",
      "offset": [
        6794,
        6810
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1183": {
      "fn": "ERC721._ownerOf",
      "offset": [
        6794,
        6801
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "1185": {
      "fn": "ERC721._ownerOf",
      "offset": [
        6794,
        6810
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1187": {
      "fn": "ERC721._ownerOf",
      "offset": [
        6794,
        6810
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1188": {
      "fn": "ERC721._ownerOf",
      "offset": [
        6794,
        6810
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1190": {
      "fn": "ERC721._ownerOf",
      "offset": [
        6794,
        6810
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1191": {
      "fn": "ERC721._ownerOf",
      "offset": [
        6794,
        6810
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1192": {
      "fn": "ERC721._ownerOf",
      "offset": [
        6794,
        6810
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1193": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1195": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1197": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1199": {
      "op": "SHL"
    },
    "1200": {
      "op": "SUB"
    },
    "1201": {
      "fn": "ERC721._ownerOf",
      "offset": [
        6794,
        6810
      ],
      "op": "AND",
      "path": "1"
    },
    "1202": {
      "fn": "ERC721._ownerOf",
      "offset": [
        6794,
        6810
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1203": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2380
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 14,
      "value": "0x274"
    },
    "1206": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2380
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1207": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2380
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1209": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2380
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1210": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1214": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1216": {
      "op": "SHL"
    },
    "1217": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2380
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1218": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2380
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1219": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1221": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2380
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1223": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2380
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1224": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2380
      ],
      "op": "ADD",
      "path": "1"
    },
    "1225": {
      "op": "MSTORE"
    },
    "1226": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "1228": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1230": {
      "op": "DUP3"
    },
    "1231": {
      "op": "ADD"
    },
    "1232": {
      "op": "MSTORE"
    },
    "1233": {
      "op": "PUSH24",
      "value": "0x115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251"
    },
    "1258": {
      "op": "PUSH1",
      "value": "0x42"
    },
    "1260": {
      "op": "SHL"
    },
    "1261": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1263": {
      "op": "DUP3"
    },
    "1264": {
      "op": "ADD"
    },
    "1265": {
      "op": "MSTORE"
    },
    "1266": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1268": {
      "op": "ADD"
    },
    "1269": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2380
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3A7"
    },
    "1272": {
      "op": "JUMP"
    },
    "1273": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2133
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1274": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2001,
        2008
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1276": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1278": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1280": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1282": {
      "op": "SHL"
    },
    "1283": {
      "op": "SUB"
    },
    "1284": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2028,
        2047
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 15
    },
    "1285": {
      "branch": 66,
      "fn": "ERC721.balanceOf",
      "offset": [
        2028,
        2047
      ],
      "op": "AND",
      "path": "1"
    },
    "1286": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2093
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x563"
    },
    "1289": {
      "branch": 66,
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2093
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1290": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2093
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1292": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2093
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1293": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1297": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1299": {
      "op": "SHL"
    },
    "1300": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2093
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1301": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2093
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1302": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1304": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2093
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1306": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2093
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1307": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2093
      ],
      "op": "ADD",
      "path": "1"
    },
    "1308": {
      "op": "MSTORE"
    },
    "1309": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "1311": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1313": {
      "op": "DUP3"
    },
    "1314": {
      "op": "ADD"
    },
    "1315": {
      "op": "MSTORE"
    },
    "1316": {
      "op": "PUSH32",
      "value": "0x4552433732313A2061646472657373207A65726F206973206E6F742061207661"
    },
    "1349": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1351": {
      "op": "DUP3"
    },
    "1352": {
      "op": "ADD"
    },
    "1353": {
      "op": "MSTORE"
    },
    "1354": {
      "op": "PUSH9",
      "value": "0x3634B21037BBB732B9"
    },
    "1364": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "1366": {
      "op": "SHL"
    },
    "1367": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1369": {
      "op": "DUP3"
    },
    "1370": {
      "op": "ADD"
    },
    "1371": {
      "op": "MSTORE"
    },
    "1372": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1374": {
      "op": "ADD"
    },
    "1375": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2093
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3A7"
    },
    "1378": {
      "op": "JUMP"
    },
    "1379": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2093
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1380": {
      "op": "POP"
    },
    "1381": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1383": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1385": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1387": {
      "op": "SHL"
    },
    "1388": {
      "op": "SUB"
    },
    "1389": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2110,
        2126
      ],
      "op": "AND",
      "path": "1",
      "statement": 16
    },
    "1390": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2110,
        2126
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1392": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2110,
        2126
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1393": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2110,
        2126
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1394": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2110,
        2126
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1395": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2110,
        2119
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3"
    },
    "1397": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2110,
        2126
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1399": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2110,
        2126
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1400": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2110,
        2126
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1402": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2110,
        2126
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1403": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2110,
        2126
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1404": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2110,
        2126
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1405": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2110,
        2126
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1406": {
      "fn": "ERC721.balanceOf",
      "jump": "o",
      "offset": [
        1929,
        2133
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1407": {
      "fn": "ERC721.symbol",
      "offset": [
        2633,
        2735
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1408": {
      "fn": "ERC721.symbol",
      "offset": [
        2689,
        2702
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "1410": {
      "fn": "ERC721.symbol",
      "offset": [
        2721,
        2728
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 17,
      "value": "0x1"
    },
    "1412": {
      "fn": "ERC721.symbol",
      "offset": [
        2714,
        2728
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1413": {
      "fn": "ERC721.symbol",
      "offset": [
        2714,
        2728
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1414": {
      "fn": "ERC721.symbol",
      "offset": [
        2714,
        2728
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x289"
    },
    "1417": {
      "fn": "ERC721.symbol",
      "offset": [
        2714,
        2728
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1418": {
      "fn": "ERC721.symbol",
      "offset": [
        2714,
        2728
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF16"
    },
    "1421": {
      "fn": "ERC721.symbol",
      "jump": "i",
      "offset": [
        2714,
        2728
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1422": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4169,
        4322
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1423": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4263,
        4315
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 18,
      "value": "0x599"
    },
    "1426": {
      "fn": "Context._msgSender",
      "offset": [
        734,
        744
      ],
      "op": "CALLER",
      "path": "6"
    },
    "1427": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4296,
        4304
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1428": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4306,
        4314
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1429": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4263,
        4281
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8FC"
    },
    "1432": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4263,
        4315
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1433": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4263,
        4315
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1434": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4169,
        4322
      ],
      "op": "POP",
      "path": "1"
    },
    "1435": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4169,
        4322
      ],
      "op": "POP",
      "path": "1"
    },
    "1436": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "o",
      "offset": [
        4169,
        4322
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1437": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5189,
        5465
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1438": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5319,
        5360
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 19,
      "value": "0x5A7"
    },
    "1441": {
      "fn": "Context._msgSender",
      "offset": [
        734,
        744
      ],
      "op": "CALLER",
      "path": "6"
    },
    "1442": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5359
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1443": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5319,
        5337
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x719"
    },
    "1446": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5319,
        5360
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1447": {
      "branch": 67,
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5319,
        5360
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1448": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5311,
        5410
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5C3"
    },
    "1451": {
      "branch": 67,
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5311,
        5410
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1452": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5311,
        5410
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1454": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5311,
        5410
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1455": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1459": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1461": {
      "op": "SHL"
    },
    "1462": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5311,
        5410
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1463": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5311,
        5410
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1464": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5311,
        5410
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1466": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5311,
        5410
      ],
      "op": "ADD",
      "path": "1"
    },
    "1467": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5311,
        5410
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3A7"
    },
    "1470": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5311,
        5410
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1471": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5311,
        5410
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF50"
    },
    "1474": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5311,
        5410
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1475": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5311,
        5410
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1476": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5420,
        5458
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 20,
      "value": "0x5CF"
    },
    "1479": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5434,
        5438
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1480": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5440,
        5442
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1481": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5444,
        5451
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1482": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5453,
        5457
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1483": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5420,
        5433
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x9CA"
    },
    "1486": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5420,
        5458
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1487": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5420,
        5458
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1488": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5189,
        5465
      ],
      "op": "POP",
      "path": "1"
    },
    "1489": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5189,
        5465
      ],
      "op": "POP",
      "path": "1"
    },
    "1490": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5189,
        5465
      ],
      "op": "POP",
      "path": "1"
    },
    "1491": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5189,
        5465
      ],
      "op": "POP",
      "path": "1"
    },
    "1492": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "o",
      "offset": [
        5189,
        5465
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1493": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2801,
        3077
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1494": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2874,
        2887
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "1496": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2899,
        2922
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 21,
      "value": "0x5E0"
    },
    "1499": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2914,
        2921
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1500": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2899,
        2913
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x649"
    },
    "1503": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        2899,
        2922
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1504": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2899,
        2922
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1505": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2933,
        2954
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1507": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2957,
        2967
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5F7"
    },
    "1510": {
      "fn": "ERC721._baseURI",
      "offset": [
        3395,
        3404
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 22,
      "value": "0x40"
    },
    "1512": {
      "fn": "ERC721._baseURI",
      "offset": [
        3395,
        3404
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1513": {
      "fn": "ERC721._baseURI",
      "offset": [
        3395,
        3404
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1514": {
      "fn": "ERC721._baseURI",
      "offset": [
        3395,
        3404
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1516": {
      "fn": "ERC721._baseURI",
      "offset": [
        3395,
        3404
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1517": {
      "fn": "ERC721._baseURI",
      "offset": [
        3395,
        3404
      ],
      "op": "ADD",
      "path": "1"
    },
    "1518": {
      "fn": "ERC721._baseURI",
      "offset": [
        3395,
        3404
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1519": {
      "fn": "ERC721._baseURI",
      "offset": [
        3395,
        3404
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1520": {
      "fn": "ERC721._baseURI",
      "offset": [
        3395,
        3404
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1521": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1523": {
      "fn": "ERC721._baseURI",
      "offset": [
        3395,
        3404
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1524": {
      "fn": "ERC721._baseURI",
      "offset": [
        3395,
        3404
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1525": {
      "fn": "ERC721._baseURI",
      "offset": [
        3395,
        3404
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1526": {
      "fn": "ERC721._baseURI",
      "offset": [
        3319,
        3411
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1527": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2957,
        2967
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1528": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2933,
        2967
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1529": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2933,
        2967
      ],
      "op": "POP",
      "path": "1"
    },
    "1530": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3008,
        3009
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 23,
      "value": "0x0"
    },
    "1532": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2990,
        2997
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1533": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2984,
        3005
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1534": {
      "branch": 68,
      "fn": "ERC721.tokenURI",
      "offset": [
        2984,
        3009
      ],
      "op": "GT",
      "path": "1"
    },
    "1535": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2984,
        3070
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x617"
    },
    "1538": {
      "branch": 68,
      "fn": "ERC721.tokenURI",
      "offset": [
        2984,
        3070
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1539": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2984,
        3070
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1541": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2984,
        3070
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1542": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2984,
        3070
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1543": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2984,
        3070
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1545": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2984,
        3070
      ],
      "op": "ADD",
      "path": "1"
    },
    "1546": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2984,
        3070
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1548": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2984,
        3070
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1549": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2984,
        3070
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1550": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2984,
        3070
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1552": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2984,
        3070
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1553": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2984,
        3070
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1554": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2984,
        3070
      ],
      "op": "POP",
      "path": "1"
    },
    "1555": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2984,
        3070
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x642"
    },
    "1558": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2984,
        3070
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1559": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2984,
        3070
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1560": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3036,
        3043
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1561": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3045,
        3063
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x621"
    },
    "1564": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3045,
        3052
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1565": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3045,
        3061
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x9FD"
    },
    "1568": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        3045,
        3063
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1569": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3045,
        3063
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1570": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3019,
        3064
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1572": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3019,
        3064
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1573": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3019,
        3064
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1575": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3019,
        3064
      ],
      "op": "ADD",
      "path": "1"
    },
    "1576": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3019,
        3064
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x632"
    },
    "1579": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3019,
        3064
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1580": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3019,
        3064
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1581": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3019,
        3064
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1582": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3019,
        3064
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF9D"
    },
    "1585": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        3019,
        3064
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1586": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3019,
        3064
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1587": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3019,
        3064
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1589": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3019,
        3064
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1590": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3019,
        3064
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1592": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3019,
        3064
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1593": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3019,
        3064
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1594": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3019,
        3064
      ],
      "op": "SUB",
      "path": "1"
    },
    "1595": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3019,
        3064
      ],
      "op": "SUB",
      "path": "1"
    },
    "1596": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3019,
        3064
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1597": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3019,
        3064
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1598": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3019,
        3064
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1599": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3019,
        3064
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1601": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3019,
        3064
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1602": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2984,
        3070
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1603": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2977,
        3070
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "1604": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2801,
        3077
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1605": {
      "op": "POP"
    },
    "1606": {
      "op": "POP"
    },
    "1607": {
      "op": "POP"
    },
    "1608": {
      "fn": "ERC721.tokenURI",
      "jump": "o",
      "offset": [
        2801,
        3077
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1609": {
      "fn": "ERC721._requireMinted",
      "offset": [
        13240,
        13373
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1610": {
      "fn": "ERC721._exists",
      "offset": [
        7185,
        7189
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1612": {
      "fn": "ERC721._ownerOf",
      "offset": [
        6794,
        6810
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1613": {
      "fn": "ERC721._ownerOf",
      "offset": [
        6794,
        6810
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1614": {
      "fn": "ERC721._ownerOf",
      "offset": [
        6794,
        6810
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1615": {
      "fn": "ERC721._ownerOf",
      "offset": [
        6794,
        6801
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "1617": {
      "fn": "ERC721._ownerOf",
      "offset": [
        6794,
        6810
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1619": {
      "fn": "ERC721._ownerOf",
      "offset": [
        6794,
        6810
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1620": {
      "fn": "ERC721._ownerOf",
      "offset": [
        6794,
        6810
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1622": {
      "fn": "ERC721._ownerOf",
      "offset": [
        6794,
        6810
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1623": {
      "fn": "ERC721._ownerOf",
      "offset": [
        6794,
        6810
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1624": {
      "fn": "ERC721._ownerOf",
      "offset": [
        6794,
        6810
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1625": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1627": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1629": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1631": {
      "op": "SHL"
    },
    "1632": {
      "op": "SUB"
    },
    "1633": {
      "fn": "ERC721._ownerOf",
      "offset": [
        6794,
        6810
      ],
      "op": "AND",
      "path": "1"
    },
    "1634": {
      "fn": "ERC721._requireMinted",
      "offset": [
        13313,
        13366
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 24,
      "value": "0x6A8"
    },
    "1637": {
      "fn": "ERC721._requireMinted",
      "offset": [
        13313,
        13366
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1638": {
      "fn": "ERC721._requireMinted",
      "offset": [
        13313,
        13366
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1640": {
      "fn": "ERC721._requireMinted",
      "offset": [
        13313,
        13366
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1641": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1645": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1647": {
      "op": "SHL"
    },
    "1648": {
      "fn": "ERC721._requireMinted",
      "offset": [
        13313,
        13366
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1649": {
      "fn": "ERC721._requireMinted",
      "offset": [
        13313,
        13366
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1650": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1652": {
      "fn": "ERC721._requireMinted",
      "offset": [
        13313,
        13366
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1654": {
      "fn": "ERC721._requireMinted",
      "offset": [
        13313,
        13366
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1655": {
      "fn": "ERC721._requireMinted",
      "offset": [
        13313,
        13366
      ],
      "op": "ADD",
      "path": "1"
    },
    "1656": {
      "op": "MSTORE"
    },
    "1657": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "1659": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1661": {
      "op": "DUP3"
    },
    "1662": {
      "op": "ADD"
    },
    "1663": {
      "op": "MSTORE"
    },
    "1664": {
      "op": "PUSH24",
      "value": "0x115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251"
    },
    "1689": {
      "op": "PUSH1",
      "value": "0x42"
    },
    "1691": {
      "op": "SHL"
    },
    "1692": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1694": {
      "op": "DUP3"
    },
    "1695": {
      "op": "ADD"
    },
    "1696": {
      "op": "MSTORE"
    },
    "1697": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1699": {
      "op": "ADD"
    },
    "1700": {
      "fn": "ERC721._requireMinted",
      "offset": [
        13313,
        13366
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3A7"
    },
    "1703": {
      "op": "JUMP"
    },
    "1704": {
      "fn": "ERC721._requireMinted",
      "offset": [
        13313,
        13366
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1705": {
      "fn": "ERC721._requireMinted",
      "offset": [
        13240,
        13373
      ],
      "op": "POP",
      "path": "1"
    },
    "1706": {
      "fn": "ERC721._requireMinted",
      "jump": "o",
      "offset": [
        13240,
        13373
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1707": {
      "fn": "ERC721._approve",
      "offset": [
        12572,
        12743
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1708": {
      "fn": "ERC721._approve",
      "offset": [
        12646,
        12670
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 25,
      "value": "0x0"
    },
    "1710": {
      "fn": "ERC721._approve",
      "offset": [
        12646,
        12670
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1711": {
      "fn": "ERC721._approve",
      "offset": [
        12646,
        12670
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1712": {
      "fn": "ERC721._approve",
      "offset": [
        12646,
        12670
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1713": {
      "fn": "ERC721._approve",
      "offset": [
        12646,
        12661
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1715": {
      "fn": "ERC721._approve",
      "offset": [
        12646,
        12670
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1717": {
      "fn": "ERC721._approve",
      "offset": [
        12646,
        12670
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1718": {
      "fn": "ERC721._approve",
      "offset": [
        12646,
        12670
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1720": {
      "fn": "ERC721._approve",
      "offset": [
        12646,
        12670
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1721": {
      "fn": "ERC721._approve",
      "offset": [
        12646,
        12670
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1722": {
      "fn": "ERC721._approve",
      "offset": [
        12646,
        12675
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1723": {
      "fn": "ERC721._approve",
      "offset": [
        12646,
        12675
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1724": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1726": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1728": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1730": {
      "op": "SHL"
    },
    "1731": {
      "op": "SUB"
    },
    "1732": {
      "op": "NOT"
    },
    "1733": {
      "fn": "ERC721._approve",
      "offset": [
        12646,
        12675
      ],
      "op": "AND",
      "path": "1"
    },
    "1734": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1736": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1738": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1740": {
      "op": "SHL"
    },
    "1741": {
      "op": "SUB"
    },
    "1742": {
      "fn": "ERC721._approve",
      "offset": [
        12646,
        12675
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1743": {
      "fn": "ERC721._approve",
      "offset": [
        12646,
        12675
      ],
      "op": "AND",
      "path": "1"
    },
    "1744": {
      "fn": "ERC721._approve",
      "offset": [
        12646,
        12675
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1745": {
      "fn": "ERC721._approve",
      "offset": [
        12646,
        12675
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1746": {
      "fn": "ERC721._approve",
      "offset": [
        12646,
        12675
      ],
      "op": "OR",
      "path": "1"
    },
    "1747": {
      "fn": "ERC721._approve",
      "offset": [
        12646,
        12675
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1748": {
      "fn": "ERC721._approve",
      "offset": [
        12646,
        12675
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1749": {
      "fn": "ERC721._approve",
      "offset": [
        12646,
        12675
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "1750": {
      "fn": "ERC721._approve",
      "offset": [
        12646,
        12670
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1751": {
      "fn": "ERC721._approve",
      "offset": [
        12646,
        12670
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1752": {
      "fn": "ERC721._approve",
      "offset": [
        12699,
        12722
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 26,
      "value": "0x6E0"
    },
    "1755": {
      "fn": "ERC721._approve",
      "offset": [
        12646,
        12670
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1756": {
      "fn": "ERC721._approve",
      "offset": [
        12699,
        12713
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x499"
    },
    "1759": {
      "fn": "ERC721._approve",
      "jump": "i",
      "offset": [
        12699,
        12722
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1760": {
      "fn": "ERC721._approve",
      "offset": [
        12699,
        12722
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1761": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1763": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1765": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1767": {
      "op": "SHL"
    },
    "1768": {
      "op": "SUB"
    },
    "1769": {
      "fn": "ERC721._approve",
      "offset": [
        12690,
        12736
      ],
      "op": "AND",
      "path": "1"
    },
    "1770": {
      "fn": "ERC721._approve",
      "offset": [
        12690,
        12736
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "1803": {
      "fn": "ERC721._approve",
      "offset": [
        12690,
        12736
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1805": {
      "fn": "ERC721._approve",
      "offset": [
        12690,
        12736
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1806": {
      "fn": "ERC721._approve",
      "offset": [
        12690,
        12736
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1808": {
      "fn": "ERC721._approve",
      "offset": [
        12690,
        12736
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1809": {
      "fn": "ERC721._approve",
      "offset": [
        12690,
        12736
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1810": {
      "fn": "ERC721._approve",
      "offset": [
        12690,
        12736
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1811": {
      "fn": "ERC721._approve",
      "offset": [
        12690,
        12736
      ],
      "op": "SUB",
      "path": "1"
    },
    "1812": {
      "fn": "ERC721._approve",
      "offset": [
        12690,
        12736
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1813": {
      "fn": "ERC721._approve",
      "offset": [
        12690,
        12736
      ],
      "op": "LOG4",
      "path": "1"
    },
    "1814": {
      "fn": "ERC721._approve",
      "offset": [
        12572,
        12743
      ],
      "op": "POP",
      "path": "1"
    },
    "1815": {
      "fn": "ERC721._approve",
      "offset": [
        12572,
        12743
      ],
      "op": "POP",
      "path": "1"
    },
    "1816": {
      "fn": "ERC721._approve",
      "jump": "o",
      "offset": [
        12572,
        12743
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1817": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7404,
        7665
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1818": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7497,
        7501
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1820": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7513,
        7526
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1821": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7529,
        7552
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x725"
    },
    "1824": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7544,
        7551
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1825": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7529,
        7543
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x499"
    },
    "1828": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        7529,
        7552
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1829": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7529,
        7552
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1830": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7513,
        7552
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1831": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7513,
        7552
      ],
      "op": "POP",
      "path": "1"
    },
    "1832": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7581,
        7586
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 27
    },
    "1833": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1835": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1837": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1839": {
      "op": "SHL"
    },
    "1840": {
      "op": "SUB"
    },
    "1841": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7570,
        7586
      ],
      "op": "AND",
      "path": "1"
    },
    "1842": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7570,
        7577
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1843": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1845": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1847": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1849": {
      "op": "SHL"
    },
    "1850": {
      "op": "SUB"
    },
    "1851": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7570,
        7586
      ],
      "op": "AND",
      "path": "1"
    },
    "1852": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7570,
        7586
      ],
      "op": "EQ",
      "path": "1"
    },
    "1853": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7570,
        7622
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1854": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7570,
        7622
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x76C"
    },
    "1857": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7570,
        7622
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1858": {
      "op": "POP"
    },
    "1859": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1861": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1863": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1865": {
      "op": "SHL"
    },
    "1866": {
      "op": "SUB"
    },
    "1867": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1868": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1869": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "AND",
      "path": "1"
    },
    "1870": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4485,
        4489
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1872": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1873": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1874": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1875": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4526
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x5"
    },
    "1877": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1879": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1880": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1881": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1882": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1884": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1885": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1886": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1887": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "1888": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "DUP9",
      "path": "1"
    },
    "1889": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "AND",
      "path": "1"
    },
    "1890": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1891": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1892": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1893": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1894": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1895": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1896": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1897": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "1899": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "AND",
      "path": "1"
    },
    "1900": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7590,
        7622
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1901": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7570,
        7657
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1902": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7570,
        7657
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x790"
    },
    "1905": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7570,
        7657
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1906": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7570,
        7657
      ],
      "op": "POP",
      "path": "1"
    },
    "1907": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7650,
        7657
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1908": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1910": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1912": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1914": {
      "op": "SHL"
    },
    "1915": {
      "op": "SUB"
    },
    "1916": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7626,
        7657
      ],
      "op": "AND",
      "path": "1"
    },
    "1917": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7626,
        7646
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x785"
    },
    "1920": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7638,
        7645
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1921": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7626,
        7637
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x30C"
    },
    "1924": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        7626,
        7646
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1925": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7626,
        7646
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1926": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1928": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1930": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1932": {
      "op": "SHL"
    },
    "1933": {
      "op": "SUB"
    },
    "1934": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7626,
        7657
      ],
      "op": "AND",
      "path": "1"
    },
    "1935": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7626,
        7657
      ],
      "op": "EQ",
      "path": "1"
    },
    "1936": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7570,
        7657
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1937": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7562,
        7658
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "1938": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7404,
        7665
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "1939": {
      "op": "POP"
    },
    "1940": {
      "op": "POP"
    },
    "1941": {
      "op": "POP"
    },
    "1942": {
      "op": "POP"
    },
    "1943": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "o",
      "offset": [
        7404,
        7665
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1944": {
      "fn": "ERC721._transfer",
      "offset": [
        11257,
        12460
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1945": {
      "fn": "ERC721._transfer",
      "offset": [
        11381,
        11385
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 28
    },
    "1946": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1948": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1950": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1952": {
      "op": "SHL"
    },
    "1953": {
      "op": "SUB"
    },
    "1954": {
      "fn": "ERC721._transfer",
      "offset": [
        11354,
        11385
      ],
      "op": "AND",
      "path": "1"
    },
    "1955": {
      "fn": "ERC721._transfer",
      "offset": [
        11354,
        11377
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7AB"
    },
    "1958": {
      "fn": "ERC721._transfer",
      "offset": [
        11369,
        11376
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1959": {
      "fn": "ERC721._transfer",
      "offset": [
        11354,
        11368
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x499"
    },
    "1962": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        11354,
        11377
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1963": {
      "fn": "ERC721._transfer",
      "offset": [
        11354,
        11377
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1964": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1966": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1968": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1970": {
      "op": "SHL"
    },
    "1971": {
      "op": "SUB"
    },
    "1972": {
      "fn": "ERC721._transfer",
      "offset": [
        11354,
        11385
      ],
      "op": "AND",
      "path": "1"
    },
    "1973": {
      "branch": 69,
      "fn": "ERC721._transfer",
      "offset": [
        11354,
        11385
      ],
      "op": "EQ",
      "path": "1"
    },
    "1974": {
      "fn": "ERC721._transfer",
      "offset": [
        11346,
        11427
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7D1"
    },
    "1977": {
      "branch": 69,
      "fn": "ERC721._transfer",
      "offset": [
        11346,
        11427
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1978": {
      "fn": "ERC721._transfer",
      "offset": [
        11346,
        11427
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1980": {
      "fn": "ERC721._transfer",
      "offset": [
        11346,
        11427
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1981": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1985": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1987": {
      "op": "SHL"
    },
    "1988": {
      "fn": "ERC721._transfer",
      "offset": [
        11346,
        11427
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1989": {
      "fn": "ERC721._transfer",
      "offset": [
        11346,
        11427
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1990": {
      "fn": "ERC721._transfer",
      "offset": [
        11346,
        11427
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1992": {
      "fn": "ERC721._transfer",
      "offset": [
        11346,
        11427
      ],
      "op": "ADD",
      "path": "1"
    },
    "1993": {
      "fn": "ERC721._transfer",
      "offset": [
        11346,
        11427
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3A7"
    },
    "1996": {
      "fn": "ERC721._transfer",
      "offset": [
        11346,
        11427
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1997": {
      "fn": "ERC721._transfer",
      "offset": [
        11346,
        11427
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xFCC"
    },
    "2000": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        11346,
        11427
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2001": {
      "fn": "ERC721._transfer",
      "offset": [
        11346,
        11427
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2002": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2004": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2006": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2008": {
      "op": "SHL"
    },
    "2009": {
      "op": "SUB"
    },
    "2010": {
      "fn": "ERC721._transfer",
      "offset": [
        11445,
        11461
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 29
    },
    "2011": {
      "branch": 70,
      "fn": "ERC721._transfer",
      "offset": [
        11445,
        11461
      ],
      "op": "AND",
      "path": "1"
    },
    "2012": {
      "fn": "ERC721._transfer",
      "offset": [
        11437,
        11502
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x833"
    },
    "2015": {
      "branch": 70,
      "fn": "ERC721._transfer",
      "offset": [
        11437,
        11502
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2016": {
      "fn": "ERC721._transfer",
      "offset": [
        11437,
        11502
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2018": {
      "fn": "ERC721._transfer",
      "offset": [
        11437,
        11502
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2019": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2023": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2025": {
      "op": "SHL"
    },
    "2026": {
      "fn": "ERC721._transfer",
      "offset": [
        11437,
        11502
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2027": {
      "fn": "ERC721._transfer",
      "offset": [
        11437,
        11502
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2028": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2030": {
      "fn": "ERC721._transfer",
      "offset": [
        11437,
        11502
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2032": {
      "fn": "ERC721._transfer",
      "offset": [
        11437,
        11502
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2033": {
      "fn": "ERC721._transfer",
      "offset": [
        11437,
        11502
      ],
      "op": "ADD",
      "path": "1"
    },
    "2034": {
      "op": "MSTORE"
    },
    "2035": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2037": {
      "op": "DUP1"
    },
    "2038": {
      "op": "DUP3"
    },
    "2039": {
      "op": "ADD"
    },
    "2040": {
      "op": "MSTORE"
    },
    "2041": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E7366657220746F20746865207A65726F20616464"
    },
    "2074": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2076": {
      "op": "DUP3"
    },
    "2077": {
      "op": "ADD"
    },
    "2078": {
      "op": "MSTORE"
    },
    "2079": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "2084": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2086": {
      "op": "SHL"
    },
    "2087": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2089": {
      "op": "DUP3"
    },
    "2090": {
      "op": "ADD"
    },
    "2091": {
      "op": "MSTORE"
    },
    "2092": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2094": {
      "op": "ADD"
    },
    "2095": {
      "fn": "ERC721._transfer",
      "offset": [
        11437,
        11502
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3A7"
    },
    "2098": {
      "op": "JUMP"
    },
    "2099": {
      "fn": "ERC721._transfer",
      "offset": [
        11437,
        11502
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2100": {
      "fn": "ERC721._transfer",
      "offset": [
        11682,
        11686
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 30
    },
    "2101": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2103": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2105": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2107": {
      "op": "SHL"
    },
    "2108": {
      "op": "SUB"
    },
    "2109": {
      "fn": "ERC721._transfer",
      "offset": [
        11655,
        11686
      ],
      "op": "AND",
      "path": "1"
    },
    "2110": {
      "fn": "ERC721._transfer",
      "offset": [
        11655,
        11678
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x846"
    },
    "2113": {
      "fn": "ERC721._transfer",
      "offset": [
        11670,
        11677
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2114": {
      "fn": "ERC721._transfer",
      "offset": [
        11655,
        11669
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x499"
    },
    "2117": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        11655,
        11678
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2118": {
      "fn": "ERC721._transfer",
      "offset": [
        11655,
        11678
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2119": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2121": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2123": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2125": {
      "op": "SHL"
    },
    "2126": {
      "op": "SUB"
    },
    "2127": {
      "fn": "ERC721._transfer",
      "offset": [
        11655,
        11686
      ],
      "op": "AND",
      "path": "1"
    },
    "2128": {
      "branch": 71,
      "fn": "ERC721._transfer",
      "offset": [
        11655,
        11686
      ],
      "op": "EQ",
      "path": "1"
    },
    "2129": {
      "fn": "ERC721._transfer",
      "offset": [
        11647,
        11728
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x86C"
    },
    "2132": {
      "branch": 71,
      "fn": "ERC721._transfer",
      "offset": [
        11647,
        11728
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2133": {
      "fn": "ERC721._transfer",
      "offset": [
        11647,
        11728
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2135": {
      "fn": "ERC721._transfer",
      "offset": [
        11647,
        11728
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2136": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2140": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2142": {
      "op": "SHL"
    },
    "2143": {
      "fn": "ERC721._transfer",
      "offset": [
        11647,
        11728
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2144": {
      "fn": "ERC721._transfer",
      "offset": [
        11647,
        11728
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2145": {
      "fn": "ERC721._transfer",
      "offset": [
        11647,
        11728
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2147": {
      "fn": "ERC721._transfer",
      "offset": [
        11647,
        11728
      ],
      "op": "ADD",
      "path": "1"
    },
    "2148": {
      "fn": "ERC721._transfer",
      "offset": [
        11647,
        11728
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3A7"
    },
    "2151": {
      "fn": "ERC721._transfer",
      "offset": [
        11647,
        11728
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2152": {
      "fn": "ERC721._transfer",
      "offset": [
        11647,
        11728
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xFCC"
    },
    "2155": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        11647,
        11728
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2156": {
      "fn": "ERC721._transfer",
      "offset": [
        11647,
        11728
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2157": {
      "fn": "ERC721._transfer",
      "offset": [
        11797,
        11821
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 31,
      "value": "0x0"
    },
    "2159": {
      "fn": "ERC721._transfer",
      "offset": [
        11797,
        11821
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2160": {
      "fn": "ERC721._transfer",
      "offset": [
        11797,
        11821
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2161": {
      "fn": "ERC721._transfer",
      "offset": [
        11797,
        11821
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2162": {
      "fn": "ERC721._transfer",
      "offset": [
        11797,
        11812
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2164": {
      "fn": "ERC721._transfer",
      "offset": [
        11797,
        11821
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2166": {
      "fn": "ERC721._transfer",
      "offset": [
        11797,
        11821
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2167": {
      "fn": "ERC721._transfer",
      "offset": [
        11797,
        11821
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2168": {
      "fn": "ERC721._transfer",
      "offset": [
        11797,
        11821
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2169": {
      "fn": "ERC721._transfer",
      "offset": [
        11797,
        11821
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2171": {
      "fn": "ERC721._transfer",
      "offset": [
        11797,
        11821
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2172": {
      "fn": "ERC721._transfer",
      "offset": [
        11797,
        11821
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2173": {
      "fn": "ERC721._transfer",
      "offset": [
        11797,
        11821
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2174": {
      "fn": "ERC721._transfer",
      "offset": [
        11790,
        11821
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2175": {
      "fn": "ERC721._transfer",
      "offset": [
        11790,
        11821
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2176": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2178": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2180": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2182": {
      "op": "SHL"
    },
    "2183": {
      "op": "SUB"
    },
    "2184": {
      "op": "NOT"
    },
    "2185": {
      "fn": "ERC721._transfer",
      "offset": [
        11790,
        11821
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2186": {
      "fn": "ERC721._transfer",
      "offset": [
        11790,
        11821
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2187": {
      "fn": "ERC721._transfer",
      "offset": [
        11790,
        11821
      ],
      "op": "AND",
      "path": "1"
    },
    "2188": {
      "fn": "ERC721._transfer",
      "offset": [
        11790,
        11821
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2189": {
      "fn": "ERC721._transfer",
      "offset": [
        11790,
        11821
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2190": {
      "fn": "ERC721._transfer",
      "offset": [
        11790,
        11821
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "2191": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2193": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2195": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2197": {
      "op": "SHL"
    },
    "2198": {
      "op": "SUB"
    },
    "2199": {
      "fn": "ERC721._transfer",
      "offset": [
        12265,
        12280
      ],
      "op": "DUP8",
      "path": "1",
      "statement": 32
    },
    "2200": {
      "fn": "ERC721._transfer",
      "offset": [
        12265,
        12280
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2201": {
      "fn": "ERC721._transfer",
      "offset": [
        12265,
        12280
      ],
      "op": "AND",
      "path": "1"
    },
    "2202": {
      "fn": "ERC721._transfer",
      "offset": [
        12265,
        12280
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2203": {
      "fn": "ERC721._transfer",
      "offset": [
        12265,
        12280
      ],
      "op": "DUP7",
      "path": "1"
    },
    "2204": {
      "fn": "ERC721._transfer",
      "offset": [
        12265,
        12280
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2205": {
      "fn": "ERC721._transfer",
      "offset": [
        12265,
        12274
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3"
    },
    "2207": {
      "fn": "ERC721._transfer",
      "offset": [
        12265,
        12280
      ],
      "op": "DUP6",
      "path": "1"
    },
    "2208": {
      "fn": "ERC721._transfer",
      "offset": [
        12265,
        12280
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2209": {
      "fn": "ERC721._transfer",
      "offset": [
        12265,
        12280
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2210": {
      "fn": "ERC721._transfer",
      "offset": [
        12265,
        12280
      ],
      "op": "DUP7",
      "path": "1"
    },
    "2211": {
      "fn": "ERC721._transfer",
      "offset": [
        12265,
        12280
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2212": {
      "fn": "ERC721._transfer",
      "offset": [
        12265,
        12285
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2213": {
      "fn": "ERC721._transfer",
      "offset": [
        12265,
        12285
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2214": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2216": {
      "op": "NOT"
    },
    "2217": {
      "fn": "ERC721._transfer",
      "offset": [
        12265,
        12285
      ],
      "op": "ADD",
      "path": "1"
    },
    "2218": {
      "fn": "ERC721._transfer",
      "offset": [
        12265,
        12285
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2219": {
      "fn": "ERC721._transfer",
      "offset": [
        12265,
        12285
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "2220": {
      "fn": "ERC721._transfer",
      "offset": [
        12299,
        12312
      ],
      "op": "SWAP1",
      "path": "1",
      "statement": 33
    },
    "2221": {
      "fn": "ERC721._transfer",
      "offset": [
        12299,
        12312
      ],
      "op": "DUP8",
      "path": "1"
    },
    "2222": {
      "fn": "ERC721._transfer",
      "offset": [
        12299,
        12312
      ],
      "op": "AND",
      "path": "1"
    },
    "2223": {
      "fn": "ERC721._transfer",
      "offset": [
        12299,
        12312
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2224": {
      "fn": "ERC721._transfer",
      "offset": [
        12299,
        12312
      ],
      "op": "DUP7",
      "path": "1"
    },
    "2225": {
      "fn": "ERC721._transfer",
      "offset": [
        12299,
        12312
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2226": {
      "fn": "ERC721._transfer",
      "offset": [
        12299,
        12312
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2227": {
      "fn": "ERC721._transfer",
      "offset": [
        12299,
        12312
      ],
      "op": "DUP7",
      "path": "1"
    },
    "2228": {
      "fn": "ERC721._transfer",
      "offset": [
        12299,
        12312
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2229": {
      "fn": "ERC721._transfer",
      "offset": [
        12299,
        12317
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2230": {
      "fn": "ERC721._transfer",
      "offset": [
        12299,
        12317
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2231": {
      "fn": "ERC721._transfer",
      "offset": [
        11790,
        11821
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "2233": {
      "fn": "ERC721._transfer",
      "offset": [
        12299,
        12317
      ],
      "op": "ADD",
      "path": "1"
    },
    "2234": {
      "fn": "ERC721._transfer",
      "offset": [
        12299,
        12317
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2235": {
      "fn": "ERC721._transfer",
      "offset": [
        12299,
        12317
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "2236": {
      "fn": "ERC721._transfer",
      "offset": [
        12337,
        12353
      ],
      "op": "DUP7",
      "path": "1",
      "statement": 34
    },
    "2237": {
      "fn": "ERC721._transfer",
      "offset": [
        12337,
        12353
      ],
      "op": "DUP7",
      "path": "1"
    },
    "2238": {
      "fn": "ERC721._transfer",
      "offset": [
        12337,
        12353
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2239": {
      "fn": "ERC721._transfer",
      "offset": [
        12337,
        12344
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "2241": {
      "fn": "ERC721._transfer",
      "offset": [
        12337,
        12353
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2242": {
      "fn": "ERC721._transfer",
      "offset": [
        12337,
        12353
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "2243": {
      "fn": "ERC721._transfer",
      "offset": [
        12337,
        12353
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2244": {
      "fn": "ERC721._transfer",
      "offset": [
        12337,
        12353
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2245": {
      "fn": "ERC721._transfer",
      "offset": [
        12337,
        12353
      ],
      "op": "DUP6",
      "path": "1"
    },
    "2246": {
      "fn": "ERC721._transfer",
      "offset": [
        12337,
        12353
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2247": {
      "fn": "ERC721._transfer",
      "offset": [
        12337,
        12358
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2248": {
      "fn": "ERC721._transfer",
      "offset": [
        12337,
        12358
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2249": {
      "fn": "ERC721._transfer",
      "offset": [
        12337,
        12358
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2250": {
      "fn": "ERC721._transfer",
      "offset": [
        12337,
        12358
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2251": {
      "fn": "ERC721._transfer",
      "offset": [
        12337,
        12358
      ],
      "op": "AND",
      "path": "1"
    },
    "2252": {
      "fn": "ERC721._transfer",
      "offset": [
        12337,
        12358
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2253": {
      "fn": "ERC721._transfer",
      "offset": [
        12337,
        12358
      ],
      "op": "OR",
      "path": "1"
    },
    "2254": {
      "fn": "ERC721._transfer",
      "offset": [
        12337,
        12358
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2255": {
      "fn": "ERC721._transfer",
      "offset": [
        12337,
        12358
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2256": {
      "fn": "ERC721._transfer",
      "offset": [
        12337,
        12358
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "2257": {
      "fn": "ERC721._transfer",
      "offset": [
        12374,
        12401
      ],
      "op": "SWAP1",
      "path": "1",
      "statement": 35
    },
    "2258": {
      "fn": "ERC721._transfer",
      "offset": [
        12374,
        12401
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2259": {
      "fn": "ERC721._transfer",
      "offset": [
        11813,
        11820
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2260": {
      "fn": "ERC721._transfer",
      "offset": [
        11813,
        11820
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "2261": {
      "fn": "ERC721._transfer",
      "offset": [
        12374,
        12401
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "2294": {
      "fn": "ERC721._transfer",
      "offset": [
        12374,
        12401
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2295": {
      "fn": "ERC721._transfer",
      "offset": [
        12374,
        12401
      ],
      "op": "LOG4",
      "path": "1"
    },
    "2296": {
      "fn": "ERC721.approve",
      "offset": [
        3538,
        3874
      ],
      "op": "POP",
      "path": "1"
    },
    "2297": {
      "fn": "ERC721.approve",
      "offset": [
        3468,
        3874
      ],
      "op": "POP",
      "path": "1"
    },
    "2298": {
      "fn": "ERC721.approve",
      "offset": [
        3468,
        3874
      ],
      "op": "POP",
      "path": "1"
    },
    "2299": {
      "fn": "ERC721.approve",
      "jump": "o",
      "offset": [
        3468,
        3874
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2300": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12879,
        13156
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2301": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12999,
        13007
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 36
    },
    "2302": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2304": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2306": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2308": {
      "op": "SHL"
    },
    "2309": {
      "op": "SUB"
    },
    "2310": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12990,
        13007
      ],
      "op": "AND",
      "path": "1"
    },
    "2311": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12990,
        12995
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2312": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2314": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2316": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2318": {
      "op": "SHL"
    },
    "2319": {
      "op": "SUB"
    },
    "2320": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12990,
        13007
      ],
      "op": "AND",
      "path": "1"
    },
    "2321": {
      "branch": 72,
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12990,
        13007
      ],
      "op": "SUB",
      "path": "1"
    },
    "2322": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12982,
        13037
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x95D"
    },
    "2325": {
      "branch": 72,
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12982,
        13037
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2326": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12982,
        13037
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2328": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12982,
        13037
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2329": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2333": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2335": {
      "op": "SHL"
    },
    "2336": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12982,
        13037
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2337": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12982,
        13037
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2338": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2340": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12982,
        13037
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2342": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12982,
        13037
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2343": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12982,
        13037
      ],
      "op": "ADD",
      "path": "1"
    },
    "2344": {
      "op": "MSTORE"
    },
    "2345": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "2347": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2349": {
      "op": "DUP3"
    },
    "2350": {
      "op": "ADD"
    },
    "2351": {
      "op": "MSTORE"
    },
    "2352": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F766520746F2063616C6C657200000000000000"
    },
    "2385": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2387": {
      "op": "DUP3"
    },
    "2388": {
      "op": "ADD"
    },
    "2389": {
      "op": "MSTORE"
    },
    "2390": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2392": {
      "op": "ADD"
    },
    "2393": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12982,
        13037
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3A7"
    },
    "2396": {
      "op": "JUMP"
    },
    "2397": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12982,
        13037
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2398": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2400": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2402": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2404": {
      "op": "SHL"
    },
    "2405": {
      "op": "SUB"
    },
    "2406": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13047,
        13072
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 37
    },
    "2407": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13047,
        13072
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2408": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13047,
        13072
      ],
      "op": "AND",
      "path": "1"
    },
    "2409": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13047,
        13072
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2411": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13047,
        13072
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2412": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13047,
        13072
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2413": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13047,
        13072
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2414": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13047,
        13065
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x5"
    },
    "2416": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13047,
        13072
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2418": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13047,
        13072
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2419": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13047,
        13072
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2420": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13047,
        13072
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2421": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13047,
        13072
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2423": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13047,
        13072
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2424": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13047,
        13072
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2425": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13047,
        13072
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2426": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13047,
        13082
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "2427": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13047,
        13082
      ],
      "op": "DUP8",
      "path": "1"
    },
    "2428": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13047,
        13082
      ],
      "op": "AND",
      "path": "1"
    },
    "2429": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13047,
        13082
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2430": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13047,
        13082
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2431": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13047,
        13082
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2432": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13047,
        13082
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "2433": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13047,
        13082
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2434": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13047,
        13082
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2435": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13047,
        13082
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2436": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13047,
        13082
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2437": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13047,
        13082
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2438": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13047,
        13082
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2439": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13047,
        13093
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2440": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13047,
        13093
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2441": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2443": {
      "op": "NOT"
    },
    "2444": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13047,
        13093
      ],
      "op": "AND",
      "path": "1"
    },
    "2445": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13047,
        13093
      ],
      "op": "DUP7",
      "path": "1"
    },
    "2446": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13047,
        13093
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2447": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13047,
        13093
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2448": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13047,
        13093
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2449": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13047,
        13093
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2450": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13047,
        13093
      ],
      "op": "OR",
      "path": "1"
    },
    "2451": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13047,
        13093
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2452": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13047,
        13093
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2453": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13047,
        13093
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "2454": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13108,
        13149
      ],
      "op": "SWAP2",
      "path": "1",
      "statement": 38
    },
    "2455": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13108,
        13149
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2456": {
      "op": "SWAP2"
    },
    "2457": {
      "op": "DUP3"
    },
    "2458": {
      "op": "MSTORE"
    },
    "2459": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13108,
        13149
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
    },
    "2492": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13108,
        13149
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2493": {
      "op": "ADD"
    },
    "2494": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13108,
        13149
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2496": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13108,
        13149
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2497": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13108,
        13149
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2498": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13108,
        13149
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2499": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13108,
        13149
      ],
      "op": "SUB",
      "path": "1"
    },
    "2500": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13108,
        13149
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2501": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13108,
        13149
      ],
      "op": "LOG3",
      "path": "1"
    },
    "2502": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12879,
        13156
      ],
      "op": "POP",
      "path": "1"
    },
    "2503": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12879,
        13156
      ],
      "op": "POP",
      "path": "1"
    },
    "2504": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12879,
        13156
      ],
      "op": "POP",
      "path": "1"
    },
    "2505": {
      "fn": "ERC721._setApprovalForAll",
      "jump": "o",
      "offset": [
        12879,
        13156
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2506": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6326,
        6593
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2507": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6438,
        6466
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 39,
      "value": "0x9D5"
    },
    "2510": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6448,
        6452
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2511": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6454,
        6456
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2512": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6458,
        6465
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2513": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6438,
        6447
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x798"
    },
    "2516": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        6438,
        6466
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2517": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6438,
        6466
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2518": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6484,
        6531
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 40,
      "value": "0x9E1"
    },
    "2521": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6507,
        6511
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2522": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6513,
        6515
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2523": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6517,
        6524
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2524": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6526,
        6530
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2525": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6484,
        6506
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA90"
    },
    "2528": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        6484,
        6531
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2529": {
      "branch": 73,
      "fn": "ERC721._safeTransfer",
      "offset": [
        6484,
        6531
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2530": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6476,
        6586
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5CF"
    },
    "2533": {
      "branch": 73,
      "fn": "ERC721._safeTransfer",
      "offset": [
        6476,
        6586
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2534": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6476,
        6586
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2536": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6476,
        6586
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2537": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2541": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2543": {
      "op": "SHL"
    },
    "2544": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6476,
        6586
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2545": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6476,
        6586
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2546": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6476,
        6586
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2548": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6476,
        6586
      ],
      "op": "ADD",
      "path": "1"
    },
    "2549": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6476,
        6586
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3A7"
    },
    "2552": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6476,
        6586
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2553": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6476,
        6586
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1011"
    },
    "2556": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        6476,
        6586
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2557": {
      "fn": "Strings.toString",
      "offset": [
        447,
        1143
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2558": {
      "fn": "Strings.toString",
      "offset": [
        503,
        516
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x60"
    },
    "2560": {
      "fn": "Strings.toString",
      "offset": [
        552,
        566
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2562": {
      "fn": "Strings.toString",
      "offset": [
        569,
        586
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xA0A"
    },
    "2565": {
      "fn": "Strings.toString",
      "offset": [
        580,
        585
      ],
      "op": "DUP4",
      "path": "7"
    },
    "2566": {
      "fn": "Strings.toString",
      "offset": [
        569,
        579
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB91"
    },
    "2569": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        569,
        586
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2570": {
      "fn": "Strings.toString",
      "offset": [
        569,
        586
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2571": {
      "fn": "Strings.toString",
      "offset": [
        589,
        590
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "2573": {
      "fn": "Strings.toString",
      "offset": [
        569,
        590
      ],
      "op": "ADD",
      "path": "7"
    },
    "2574": {
      "fn": "Strings.toString",
      "offset": [
        552,
        590
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2575": {
      "fn": "Strings.toString",
      "offset": [
        552,
        590
      ],
      "op": "POP",
      "path": "7"
    },
    "2576": {
      "fn": "Strings.toString",
      "offset": [
        604,
        624
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2578": {
      "fn": "Strings.toString",
      "offset": [
        638,
        644
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2579": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "PUSH8",
      "path": "7",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2588": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2589": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "GT",
      "path": "7"
    },
    "2590": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "2591": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xA2A"
    },
    "2594": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2595": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xA2A"
    },
    "2598": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xDF1"
    },
    "2601": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        627,
        645
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2602": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2603": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2605": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2606": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2607": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2608": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2609": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2610": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2611": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "2613": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "ADD",
      "path": "7"
    },
    "2614": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "2616": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "NOT",
      "path": "7"
    },
    "2617": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "AND",
      "path": "7"
    },
    "2618": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2620": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "ADD",
      "path": "7"
    },
    "2621": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2622": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "ADD",
      "path": "7"
    },
    "2623": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2625": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2626": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2627": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "2628": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xA54"
    },
    "2631": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2632": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2634": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2635": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "ADD",
      "path": "7"
    },
    "2636": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2637": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2638": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "2639": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "DUP4",
      "path": "7"
    },
    "2640": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "CALLDATACOPY",
      "path": "7"
    },
    "2641": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "ADD",
      "path": "7"
    },
    "2642": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2643": {
      "op": "POP"
    },
    "2644": {
      "fn": "Strings.toString",
      "offset": [
        627,
        645
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2645": {
      "op": "POP"
    },
    "2646": {
      "fn": "Strings.toString",
      "offset": [
        604,
        645
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2647": {
      "op": "POP"
    },
    "2648": {
      "fn": "Strings.toString",
      "offset": [
        765,
        793
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2649": {
      "fn": "Strings.toString",
      "offset": [
        765,
        793
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2650": {
      "fn": "Strings.toString",
      "offset": [
        765,
        793
      ],
      "op": "ADD",
      "path": "7"
    },
    "2651": {
      "fn": "Strings.toString",
      "offset": [
        781,
        783
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2653": {
      "fn": "Strings.toString",
      "offset": [
        765,
        793
      ],
      "op": "ADD",
      "path": "7"
    },
    "2654": {
      "fn": "Strings.toString",
      "offset": [
        820,
        1100
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2655": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2657": {
      "op": "NOT"
    },
    "2658": {
      "fn": "Strings.toString",
      "offset": [
        851,
        856
      ],
      "op": "ADD",
      "path": "7",
      "statement": 41
    },
    "2659": {
      "op": "PUSH16",
      "value": "0x181899199A1A9B1B9C1CB0B131B232B3"
    },
    "2676": {
      "op": "PUSH1",
      "value": "0x81"
    },
    "2678": {
      "op": "SHL"
    },
    "2679": {
      "fn": "Strings.toString",
      "offset": [
        985,
        987
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xA"
    },
    "2681": {
      "fn": "Strings.toString",
      "offset": [
        974,
        988
      ],
      "op": "DUP7",
      "path": "7"
    },
    "2682": {
      "fn": "Strings.toString",
      "offset": [
        974,
        988
      ],
      "op": "MOD",
      "path": "7"
    },
    "2683": {
      "fn": "Strings.toString",
      "offset": [
        969,
        999
      ],
      "op": "BYTE",
      "path": "7"
    },
    "2684": {
      "fn": "Strings.toString",
      "offset": [
        851,
        856
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2685": {
      "fn": "Strings.toString",
      "offset": [
        956,
        1000
      ],
      "op": "MSTORE8",
      "path": "7"
    },
    "2686": {
      "fn": "Strings.toString",
      "offset": [
        1044,
        1046
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 42,
      "value": "0xA"
    },
    "2688": {
      "fn": "Strings.toString",
      "offset": [
        1035,
        1046
      ],
      "op": "DUP6",
      "path": "7"
    },
    "2689": {
      "fn": "Strings.toString",
      "offset": [
        1035,
        1046
      ],
      "op": "DIV",
      "path": "7"
    },
    "2690": {
      "fn": "Strings.toString",
      "offset": [
        1035,
        1046
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "2691": {
      "op": "POP"
    },
    "2692": {
      "fn": "Strings.toString",
      "offset": [
        1064,
        1085
      ],
      "op": "DUP5",
      "path": "7"
    },
    "2693": {
      "fn": "Strings.toString",
      "offset": [
        820,
        1100
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xA5E"
    },
    "2696": {
      "fn": "Strings.toString",
      "offset": [
        1064,
        1085
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2697": {
      "op": "POP"
    },
    "2698": {
      "fn": "Strings.toString",
      "offset": [
        1120,
        1126
      ],
      "op": "SWAP4",
      "path": "7",
      "statement": 43
    },
    "2699": {
      "fn": "Strings.toString",
      "offset": [
        447,
        1143
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "2700": {
      "op": "POP"
    },
    "2701": {
      "op": "POP"
    },
    "2702": {
      "op": "POP"
    },
    "2703": {
      "fn": "Strings.toString",
      "jump": "o",
      "offset": [
        447,
        1143
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2704": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13925,
        14756
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2705": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14074,
        14078
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2707": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2709": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2711": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2713": {
      "op": "SHL"
    },
    "2714": {
      "op": "SUB"
    },
    "2715": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14094,
        14107
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2716": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14094,
        14107
      ],
      "op": "AND",
      "path": "1"
    },
    "2717": {
      "fn": "Address.isContract",
      "offset": [
        1702,
        1721
      ],
      "op": "EXTCODESIZE",
      "path": "5",
      "statement": 44
    },
    "2718": {
      "fn": "Address.isContract",
      "offset": [
        1702,
        1725
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2719": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14090,
        14750
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB86"
    },
    "2722": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14090,
        14750
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2723": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14129,
        14200
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2725": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14129,
        14200
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2726": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "2731": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "2733": {
      "op": "SHL"
    },
    "2734": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14129,
        14200
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2735": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14129,
        14200
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2736": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2738": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2740": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2742": {
      "op": "SHL"
    },
    "2743": {
      "op": "SUB"
    },
    "2744": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14129,
        14165
      ],
      "op": "DUP6",
      "path": "1"
    },
    "2745": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14129,
        14165
      ],
      "op": "AND",
      "path": "1"
    },
    "2746": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14129,
        14165
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2747": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14129,
        14165
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x150B7A02"
    },
    "2752": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14129,
        14165
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2753": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14129,
        14200
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xAD4"
    },
    "2756": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14129,
        14200
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2757": {
      "fn": "Context._msgSender",
      "offset": [
        734,
        744
      ],
      "op": "CALLER",
      "path": "6"
    },
    "2758": {
      "fn": "Context._msgSender",
      "offset": [
        734,
        744
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2759": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14180,
        14184
      ],
      "op": "DUP10",
      "path": "1"
    },
    "2760": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14180,
        14184
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2761": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14186,
        14193
      ],
      "op": "DUP9",
      "path": "1"
    },
    "2762": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14186,
        14193
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2763": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14195,
        14199
      ],
      "op": "DUP9",
      "path": "1"
    },
    "2764": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14195,
        14199
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2765": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14129,
        14200
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2767": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14129,
        14200
      ],
      "op": "ADD",
      "path": "1"
    },
    "2768": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14129,
        14200
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1063"
    },
    "2771": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        14129,
        14200
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2772": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14129,
        14200
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2773": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14129,
        14200
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2775": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14129,
        14200
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2777": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14129,
        14200
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2778": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14129,
        14200
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2779": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14129,
        14200
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2780": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14129,
        14200
      ],
      "op": "SUB",
      "path": "1"
    },
    "2781": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14129,
        14200
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2782": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14129,
        14200
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2784": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14129,
        14200
      ],
      "op": "DUP8",
      "path": "1"
    },
    "2785": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14129,
        14200
      ],
      "op": "GAS",
      "path": "1"
    },
    "2786": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14129,
        14200
      ],
      "op": "CALL",
      "path": "1"
    },
    "2787": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14129,
        14200
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2788": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14129,
        14200
      ],
      "op": "POP",
      "path": "1"
    },
    "2789": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14129,
        14200
      ],
      "op": "POP",
      "path": "1"
    },
    "2790": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14129,
        14200
      ],
      "op": "POP",
      "path": "1"
    },
    "2791": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14129,
        14200
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2792": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14129,
        14200
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2793": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14129,
        14200
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB0F"
    },
    "2796": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14129,
        14200
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2797": {
      "op": "POP"
    },
    "2798": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14129,
        14200
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2800": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14129,
        14200
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2801": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14129,
        14200
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2802": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14129,
        14200
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "2804": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14129,
        14200
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2805": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14129,
        14200
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2806": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14129,
        14200
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2807": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14129,
        14200
      ],
      "op": "ADD",
      "path": "1"
    },
    "2808": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2810": {
      "op": "NOT"
    },
    "2811": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14129,
        14200
      ],
      "op": "AND",
      "path": "1"
    },
    "2812": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14129,
        14200
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2813": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14129,
        14200
      ],
      "op": "ADD",
      "path": "1"
    },
    "2814": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14129,
        14200
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2815": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14129,
        14200
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2816": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14129,
        14200
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2817": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14129,
        14200
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB0C"
    },
    "2820": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14129,
        14200
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2821": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14129,
        14200
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2822": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14129,
        14200
      ],
      "op": "ADD",
      "path": "1"
    },
    "2823": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14129,
        14200
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2824": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14129,
        14200
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x10A0"
    },
    "2827": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        14129,
        14200
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2828": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14129,
        14200
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2829": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14129,
        14200
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "2831": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14129,
        14200
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2832": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14125,
        14698
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB6C"
    },
    "2835": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14125,
        14698
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2836": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14125,
        14698
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2837": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14125,
        14698
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2838": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14125,
        14698
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2839": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14125,
        14698
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2840": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14125,
        14698
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB3D"
    },
    "2843": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14125,
        14698
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2844": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14125,
        14698
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2846": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14125,
        14698
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2847": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14125,
        14698
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2848": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14125,
        14698
      ],
      "op": "POP",
      "path": "1"
    },
    "2849": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14125,
        14698
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "2851": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14125,
        14698
      ],
      "op": "NOT",
      "path": "1"
    },
    "2852": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14125,
        14698
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3F"
    },
    "2854": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14125,
        14698
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2855": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14125,
        14698
      ],
      "op": "ADD",
      "path": "1"
    },
    "2856": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14125,
        14698
      ],
      "op": "AND",
      "path": "1"
    },
    "2857": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14125,
        14698
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2858": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14125,
        14698
      ],
      "op": "ADD",
      "path": "1"
    },
    "2859": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14125,
        14698
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2861": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14125,
        14698
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2862": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14125,
        14698
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2863": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14125,
        14698
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2864": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14125,
        14698
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2865": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14125,
        14698
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2866": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14125,
        14698
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2868": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14125,
        14698
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2870": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14125,
        14698
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2871": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14125,
        14698
      ],
      "op": "ADD",
      "path": "1"
    },
    "2872": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14125,
        14698
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "2873": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14125,
        14698
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB42"
    },
    "2876": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14125,
        14698
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2877": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14125,
        14698
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2878": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14125,
        14698
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "2880": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14125,
        14698
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2881": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14125,
        14698
      ],
      "op": "POP",
      "path": "1"
    },
    "2882": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14125,
        14698
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2883": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14125,
        14698
      ],
      "op": "POP",
      "path": "1"
    },
    "2884": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14367,
        14373
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2885": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14367,
        14380
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2886": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14384,
        14385
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2888": {
      "branch": 74,
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14367,
        14385
      ],
      "op": "SUB",
      "path": "1"
    },
    "2889": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14363,
        14684
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB64"
    },
    "2892": {
      "branch": 74,
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14363,
        14684
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2893": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14409,
        14469
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 45,
      "value": "0x40"
    },
    "2895": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14409,
        14469
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2896": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2900": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2902": {
      "op": "SHL"
    },
    "2903": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14409,
        14469
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2904": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14409,
        14469
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2905": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14409,
        14469
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2907": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14409,
        14469
      ],
      "op": "ADD",
      "path": "1"
    },
    "2908": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14409,
        14469
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3A7"
    },
    "2911": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14409,
        14469
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2912": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14409,
        14469
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1011"
    },
    "2915": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        14409,
        14469
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2916": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14363,
        14684
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2917": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14636,
        14642
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2918": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14630,
        14643
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2919": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14621,
        14627
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2920": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14617,
        14619
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2922": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14613,
        14628
      ],
      "op": "ADD",
      "path": "1"
    },
    "2923": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14606,
        14644
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2924": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14125,
        14698
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2925": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2927": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2929": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2931": {
      "op": "SHL"
    },
    "2932": {
      "op": "SUB"
    },
    "2933": {
      "op": "NOT"
    },
    "2934": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14250,
        14301
      ],
      "op": "AND",
      "path": "1",
      "statement": 46
    },
    "2935": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "2940": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "2942": {
      "op": "SHL"
    },
    "2943": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14250,
        14301
      ],
      "op": "EQ",
      "path": "1"
    },
    "2944": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14250,
        14301
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2945": {
      "op": "POP"
    },
    "2946": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14243,
        14301
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x790"
    },
    "2949": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14243,
        14301
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2950": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14090,
        14750
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2951": {
      "op": "POP"
    },
    "2952": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14735,
        14739
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 47,
      "value": "0x1"
    },
    "2954": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13925,
        14756
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "2955": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13925,
        14756
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "2956": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13925,
        14756
      ],
      "op": "POP",
      "path": "1"
    },
    "2957": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13925,
        14756
      ],
      "op": "POP",
      "path": "1"
    },
    "2958": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13925,
        14756
      ],
      "op": "POP",
      "path": "1"
    },
    "2959": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13925,
        14756
      ],
      "op": "POP",
      "path": "1"
    },
    "2960": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "o",
      "offset": [
        13925,
        14756
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2961": {
      "fn": "Math.log10",
      "offset": [
        10139,
        11055
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2962": {
      "fn": "Math.log10",
      "offset": [
        10192,
        10199
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2964": {
      "fn": "Math.log10",
      "offset": [
        10192,
        10199
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2965": {
      "op": "PUSH19",
      "value": "0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01"
    },
    "2985": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2987": {
      "op": "SHL"
    },
    "2988": {
      "fn": "Math.log10",
      "offset": [
        10267,
        10284
      ],
      "op": "DUP4",
      "path": "10"
    },
    "2989": {
      "branch": 75,
      "fn": "Math.log10",
      "offset": [
        10267,
        10284
      ],
      "op": "LT",
      "path": "10"
    },
    "2990": {
      "fn": "Math.log10",
      "offset": [
        10263,
        10366
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xBD0"
    },
    "2993": {
      "branch": 75,
      "fn": "Math.log10",
      "offset": [
        10263,
        10366
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2994": {
      "op": "PUSH19",
      "value": "0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01"
    },
    "3014": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3016": {
      "op": "SHL"
    },
    "3017": {
      "fn": "Math.log10",
      "offset": [
        10304,
        10321
      ],
      "op": "DUP4",
      "path": "10",
      "statement": 48
    },
    "3018": {
      "fn": "Math.log10",
      "offset": [
        10304,
        10321
      ],
      "op": "DIV",
      "path": "10"
    },
    "3019": {
      "fn": "Math.log10",
      "offset": [
        10304,
        10321
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "3020": {
      "op": "POP"
    },
    "3021": {
      "fn": "Math.log10",
      "offset": [
        10349,
        10351
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 49,
      "value": "0x40"
    },
    "3023": {
      "fn": "Math.log10",
      "offset": [
        10339,
        10351
      ],
      "op": "ADD",
      "path": "10"
    },
    "3024": {
      "fn": "Math.log10",
      "offset": [
        10263,
        10366
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3025": {
      "fn": "Math.log10",
      "offset": [
        10392,
        10400
      ],
      "op": "PUSH14",
      "path": "10",
      "value": "0x4EE2D6D415B85ACEF8100000000"
    },
    "3040": {
      "fn": "Math.log10",
      "offset": [
        10383,
        10388
      ],
      "op": "DUP4",
      "path": "10"
    },
    "3041": {
      "branch": 76,
      "fn": "Math.log10",
      "offset": [
        10383,
        10400
      ],
      "op": "LT",
      "path": "10"
    },
    "3042": {
      "fn": "Math.log10",
      "offset": [
        10379,
        10482
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xBFC"
    },
    "3045": {
      "branch": 76,
      "fn": "Math.log10",
      "offset": [
        10379,
        10482
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "3046": {
      "fn": "Math.log10",
      "offset": [
        10429,
        10437
      ],
      "op": "PUSH14",
      "path": "10",
      "statement": 50,
      "value": "0x4EE2D6D415B85ACEF8100000000"
    },
    "3061": {
      "fn": "Math.log10",
      "offset": [
        10420,
        10437
      ],
      "op": "DUP4",
      "path": "10"
    },
    "3062": {
      "fn": "Math.log10",
      "offset": [
        10420,
        10437
      ],
      "op": "DIV",
      "path": "10"
    },
    "3063": {
      "fn": "Math.log10",
      "offset": [
        10420,
        10437
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "3064": {
      "op": "POP"
    },
    "3065": {
      "fn": "Math.log10",
      "offset": [
        10465,
        10467
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 51,
      "value": "0x20"
    },
    "3067": {
      "fn": "Math.log10",
      "offset": [
        10455,
        10467
      ],
      "op": "ADD",
      "path": "10"
    },
    "3068": {
      "fn": "Math.log10",
      "offset": [
        10379,
        10482
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3069": {
      "fn": "Math.log10",
      "offset": [
        10508,
        10516
      ],
      "op": "PUSH7",
      "path": "10",
      "value": "0x2386F26FC10000"
    },
    "3077": {
      "fn": "Math.log10",
      "offset": [
        10499,
        10504
      ],
      "op": "DUP4",
      "path": "10"
    },
    "3078": {
      "branch": 77,
      "fn": "Math.log10",
      "offset": [
        10499,
        10516
      ],
      "op": "LT",
      "path": "10"
    },
    "3079": {
      "fn": "Math.log10",
      "offset": [
        10495,
        10598
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xC1A"
    },
    "3082": {
      "branch": 77,
      "fn": "Math.log10",
      "offset": [
        10495,
        10598
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "3083": {
      "fn": "Math.log10",
      "offset": [
        10545,
        10553
      ],
      "op": "PUSH7",
      "path": "10",
      "statement": 52,
      "value": "0x2386F26FC10000"
    },
    "3091": {
      "fn": "Math.log10",
      "offset": [
        10536,
        10553
      ],
      "op": "DUP4",
      "path": "10"
    },
    "3092": {
      "fn": "Math.log10",
      "offset": [
        10536,
        10553
      ],
      "op": "DIV",
      "path": "10"
    },
    "3093": {
      "fn": "Math.log10",
      "offset": [
        10536,
        10553
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "3094": {
      "op": "POP"
    },
    "3095": {
      "fn": "Math.log10",
      "offset": [
        10581,
        10583
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 53,
      "value": "0x10"
    },
    "3097": {
      "fn": "Math.log10",
      "offset": [
        10571,
        10583
      ],
      "op": "ADD",
      "path": "10"
    },
    "3098": {
      "fn": "Math.log10",
      "offset": [
        10495,
        10598
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3099": {
      "fn": "Math.log10",
      "offset": [
        10624,
        10631
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x5F5E100"
    },
    "3104": {
      "fn": "Math.log10",
      "offset": [
        10615,
        10620
      ],
      "op": "DUP4",
      "path": "10"
    },
    "3105": {
      "branch": 78,
      "fn": "Math.log10",
      "offset": [
        10615,
        10631
      ],
      "op": "LT",
      "path": "10"
    },
    "3106": {
      "fn": "Math.log10",
      "offset": [
        10611,
        10711
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xC32"
    },
    "3109": {
      "branch": 78,
      "fn": "Math.log10",
      "offset": [
        10611,
        10711
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "3110": {
      "fn": "Math.log10",
      "offset": [
        10660,
        10667
      ],
      "op": "PUSH4",
      "path": "10",
      "statement": 54,
      "value": "0x5F5E100"
    },
    "3115": {
      "fn": "Math.log10",
      "offset": [
        10651,
        10667
      ],
      "op": "DUP4",
      "path": "10"
    },
    "3116": {
      "fn": "Math.log10",
      "offset": [
        10651,
        10667
      ],
      "op": "DIV",
      "path": "10"
    },
    "3117": {
      "fn": "Math.log10",
      "offset": [
        10651,
        10667
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "3118": {
      "op": "POP"
    },
    "3119": {
      "fn": "Math.log10",
      "offset": [
        10695,
        10696
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 55,
      "value": "0x8"
    },
    "3121": {
      "fn": "Math.log10",
      "offset": [
        10685,
        10696
      ],
      "op": "ADD",
      "path": "10"
    },
    "3122": {
      "fn": "Math.log10",
      "offset": [
        10611,
        10711
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3123": {
      "fn": "Math.log10",
      "offset": [
        10737,
        10744
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2710"
    },
    "3126": {
      "fn": "Math.log10",
      "offset": [
        10728,
        10733
      ],
      "op": "DUP4",
      "path": "10"
    },
    "3127": {
      "branch": 79,
      "fn": "Math.log10",
      "offset": [
        10728,
        10744
      ],
      "op": "LT",
      "path": "10"
    },
    "3128": {
      "fn": "Math.log10",
      "offset": [
        10724,
        10824
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xC46"
    },
    "3131": {
      "branch": 79,
      "fn": "Math.log10",
      "offset": [
        10724,
        10824
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "3132": {
      "fn": "Math.log10",
      "offset": [
        10773,
        10780
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 56,
      "value": "0x2710"
    },
    "3135": {
      "fn": "Math.log10",
      "offset": [
        10764,
        10780
      ],
      "op": "DUP4",
      "path": "10"
    },
    "3136": {
      "fn": "Math.log10",
      "offset": [
        10764,
        10780
      ],
      "op": "DIV",
      "path": "10"
    },
    "3137": {
      "fn": "Math.log10",
      "offset": [
        10764,
        10780
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "3138": {
      "op": "POP"
    },
    "3139": {
      "fn": "Math.log10",
      "offset": [
        10808,
        10809
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 57,
      "value": "0x4"
    },
    "3141": {
      "fn": "Math.log10",
      "offset": [
        10798,
        10809
      ],
      "op": "ADD",
      "path": "10"
    },
    "3142": {
      "fn": "Math.log10",
      "offset": [
        10724,
        10824
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3143": {
      "fn": "Math.log10",
      "offset": [
        10850,
        10857
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x64"
    },
    "3145": {
      "fn": "Math.log10",
      "offset": [
        10841,
        10846
      ],
      "op": "DUP4",
      "path": "10"
    },
    "3146": {
      "branch": 80,
      "fn": "Math.log10",
      "offset": [
        10841,
        10857
      ],
      "op": "LT",
      "path": "10"
    },
    "3147": {
      "fn": "Math.log10",
      "offset": [
        10837,
        10937
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xC58"
    },
    "3150": {
      "branch": 80,
      "fn": "Math.log10",
      "offset": [
        10837,
        10937
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "3151": {
      "fn": "Math.log10",
      "offset": [
        10886,
        10893
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 58,
      "value": "0x64"
    },
    "3153": {
      "fn": "Math.log10",
      "offset": [
        10877,
        10893
      ],
      "op": "DUP4",
      "path": "10"
    },
    "3154": {
      "fn": "Math.log10",
      "offset": [
        10877,
        10893
      ],
      "op": "DIV",
      "path": "10"
    },
    "3155": {
      "fn": "Math.log10",
      "offset": [
        10877,
        10893
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "3156": {
      "op": "POP"
    },
    "3157": {
      "fn": "Math.log10",
      "offset": [
        10921,
        10922
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 59,
      "value": "0x2"
    },
    "3159": {
      "fn": "Math.log10",
      "offset": [
        10911,
        10922
      ],
      "op": "ADD",
      "path": "10"
    },
    "3160": {
      "fn": "Math.log10",
      "offset": [
        10837,
        10937
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3161": {
      "fn": "Math.log10",
      "offset": [
        10963,
        10970
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xA"
    },
    "3163": {
      "fn": "Math.log10",
      "offset": [
        10954,
        10959
      ],
      "op": "DUP4",
      "path": "10"
    },
    "3164": {
      "branch": 81,
      "fn": "Math.log10",
      "offset": [
        10954,
        10970
      ],
      "op": "LT",
      "path": "10"
    },
    "3165": {
      "fn": "Math.log10",
      "offset": [
        10950,
        11016
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x274"
    },
    "3168": {
      "branch": 81,
      "fn": "Math.log10",
      "offset": [
        10950,
        11016
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "3169": {
      "fn": "Math.log10",
      "offset": [
        11000,
        11001
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 60,
      "value": "0x1"
    },
    "3171": {
      "fn": "Math.log10",
      "offset": [
        10990,
        11001
      ],
      "op": "ADD",
      "path": "10"
    },
    "3172": {
      "fn": "Math.log10",
      "offset": [
        11042,
        11048
      ],
      "op": "SWAP3",
      "path": "10",
      "statement": 61
    },
    "3173": {
      "fn": "Math.log10",
      "offset": [
        10139,
        11055
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3174": {
      "op": "POP"
    },
    "3175": {
      "op": "POP"
    },
    "3176": {
      "fn": "Math.log10",
      "jump": "o",
      "offset": [
        10139,
        11055
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3177": {
      "op": "JUMPDEST"
    },
    "3178": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3180": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3182": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3184": {
      "op": "SHL"
    },
    "3185": {
      "op": "SUB"
    },
    "3186": {
      "op": "NOT"
    },
    "3187": {
      "op": "DUP2"
    },
    "3188": {
      "op": "AND"
    },
    "3189": {
      "op": "DUP2"
    },
    "3190": {
      "op": "EQ"
    },
    "3191": {
      "op": "PUSH2",
      "value": "0x6A8"
    },
    "3194": {
      "op": "JUMPI"
    },
    "3195": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3197": {
      "op": "DUP1"
    },
    "3198": {
      "op": "REVERT"
    },
    "3199": {
      "op": "JUMPDEST"
    },
    "3200": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3202": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3204": {
      "op": "DUP3"
    },
    "3205": {
      "op": "DUP5"
    },
    "3206": {
      "op": "SUB"
    },
    "3207": {
      "op": "SLT"
    },
    "3208": {
      "op": "ISZERO"
    },
    "3209": {
      "op": "PUSH2",
      "value": "0xC91"
    },
    "3212": {
      "op": "JUMPI"
    },
    "3213": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3215": {
      "op": "DUP1"
    },
    "3216": {
      "op": "REVERT"
    },
    "3217": {
      "op": "JUMPDEST"
    },
    "3218": {
      "op": "DUP2"
    },
    "3219": {
      "op": "CALLDATALOAD"
    },
    "3220": {
      "op": "PUSH2",
      "value": "0x642"
    },
    "3223": {
      "op": "DUP2"
    },
    "3224": {
      "op": "PUSH2",
      "value": "0xC69"
    },
    "3227": {
      "jump": "i",
      "op": "JUMP"
    },
    "3228": {
      "op": "JUMPDEST"
    },
    "3229": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3231": {
      "op": "JUMPDEST"
    },
    "3232": {
      "op": "DUP4"
    },
    "3233": {
      "op": "DUP2"
    },
    "3234": {
      "op": "LT"
    },
    "3235": {
      "op": "ISZERO"
    },
    "3236": {
      "op": "PUSH2",
      "value": "0xCB7"
    },
    "3239": {
      "op": "JUMPI"
    },
    "3240": {
      "op": "DUP2"
    },
    "3241": {
      "op": "DUP2"
    },
    "3242": {
      "op": "ADD"
    },
    "3243": {
      "op": "MLOAD"
    },
    "3244": {
      "op": "DUP4"
    },
    "3245": {
      "op": "DUP3"
    },
    "3246": {
      "op": "ADD"
    },
    "3247": {
      "op": "MSTORE"
    },
    "3248": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3250": {
      "op": "ADD"
    },
    "3251": {
      "op": "PUSH2",
      "value": "0xC9F"
    },
    "3254": {
      "op": "JUMP"
    },
    "3255": {
      "op": "JUMPDEST"
    },
    "3256": {
      "op": "POP"
    },
    "3257": {
      "op": "POP"
    },
    "3258": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3260": {
      "op": "SWAP2"
    },
    "3261": {
      "op": "ADD"
    },
    "3262": {
      "op": "MSTORE"
    },
    "3263": {
      "jump": "o",
      "op": "JUMP"
    },
    "3264": {
      "op": "JUMPDEST"
    },
    "3265": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3267": {
      "op": "DUP2"
    },
    "3268": {
      "op": "MLOAD"
    },
    "3269": {
      "op": "DUP1"
    },
    "3270": {
      "op": "DUP5"
    },
    "3271": {
      "op": "MSTORE"
    },
    "3272": {
      "op": "PUSH2",
      "value": "0xCD8"
    },
    "3275": {
      "op": "DUP2"
    },
    "3276": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3278": {
      "op": "DUP7"
    },
    "3279": {
      "op": "ADD"
    },
    "3280": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3282": {
      "op": "DUP7"
    },
    "3283": {
      "op": "ADD"
    },
    "3284": {
      "op": "PUSH2",
      "value": "0xC9C"
    },
    "3287": {
      "jump": "i",
      "op": "JUMP"
    },
    "3288": {
      "op": "JUMPDEST"
    },
    "3289": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3291": {
      "op": "ADD"
    },
    "3292": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3294": {
      "op": "NOT"
    },
    "3295": {
      "op": "AND"
    },
    "3296": {
      "op": "SWAP3"
    },
    "3297": {
      "op": "SWAP1"
    },
    "3298": {
      "op": "SWAP3"
    },
    "3299": {
      "op": "ADD"
    },
    "3300": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3302": {
      "op": "ADD"
    },
    "3303": {
      "op": "SWAP3"
    },
    "3304": {
      "op": "SWAP2"
    },
    "3305": {
      "op": "POP"
    },
    "3306": {
      "op": "POP"
    },
    "3307": {
      "jump": "o",
      "op": "JUMP"
    },
    "3308": {
      "op": "JUMPDEST"
    },
    "3309": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3311": {
      "op": "DUP2"
    },
    "3312": {
      "op": "MSTORE"
    },
    "3313": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3315": {
      "op": "PUSH2",
      "value": "0x642"
    },
    "3318": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3320": {
      "op": "DUP4"
    },
    "3321": {
      "op": "ADD"
    },
    "3322": {
      "op": "DUP5"
    },
    "3323": {
      "op": "PUSH2",
      "value": "0xCC0"
    },
    "3326": {
      "jump": "i",
      "op": "JUMP"
    },
    "3327": {
      "op": "JUMPDEST"
    },
    "3328": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3330": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3332": {
      "op": "DUP3"
    },
    "3333": {
      "op": "DUP5"
    },
    "3334": {
      "op": "SUB"
    },
    "3335": {
      "op": "SLT"
    },
    "3336": {
      "op": "ISZERO"
    },
    "3337": {
      "op": "PUSH2",
      "value": "0xD11"
    },
    "3340": {
      "op": "JUMPI"
    },
    "3341": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3343": {
      "op": "DUP1"
    },
    "3344": {
      "op": "REVERT"
    },
    "3345": {
      "op": "JUMPDEST"
    },
    "3346": {
      "op": "POP"
    },
    "3347": {
      "op": "CALLDATALOAD"
    },
    "3348": {
      "op": "SWAP2"
    },
    "3349": {
      "op": "SWAP1"
    },
    "3350": {
      "op": "POP"
    },
    "3351": {
      "jump": "o",
      "op": "JUMP"
    },
    "3352": {
      "op": "JUMPDEST"
    },
    "3353": {
      "op": "DUP1"
    },
    "3354": {
      "op": "CALLDATALOAD"
    },
    "3355": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3357": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3359": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3361": {
      "op": "SHL"
    },
    "3362": {
      "op": "SUB"
    },
    "3363": {
      "op": "DUP2"
    },
    "3364": {
      "op": "AND"
    },
    "3365": {
      "op": "DUP2"
    },
    "3366": {
      "op": "EQ"
    },
    "3367": {
      "op": "PUSH2",
      "value": "0xD2F"
    },
    "3370": {
      "op": "JUMPI"
    },
    "3371": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3373": {
      "op": "DUP1"
    },
    "3374": {
      "op": "REVERT"
    },
    "3375": {
      "op": "JUMPDEST"
    },
    "3376": {
      "op": "SWAP2"
    },
    "3377": {
      "op": "SWAP1"
    },
    "3378": {
      "op": "POP"
    },
    "3379": {
      "jump": "o",
      "op": "JUMP"
    },
    "3380": {
      "op": "JUMPDEST"
    },
    "3381": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3383": {
      "op": "DUP1"
    },
    "3384": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3386": {
      "op": "DUP4"
    },
    "3387": {
      "op": "DUP6"
    },
    "3388": {
      "op": "SUB"
    },
    "3389": {
      "op": "SLT"
    },
    "3390": {
      "op": "ISZERO"
    },
    "3391": {
      "op": "PUSH2",
      "value": "0xD47"
    },
    "3394": {
      "op": "JUMPI"
    },
    "3395": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3397": {
      "op": "DUP1"
    },
    "3398": {
      "op": "REVERT"
    },
    "3399": {
      "op": "JUMPDEST"
    },
    "3400": {
      "op": "PUSH2",
      "value": "0xD50"
    },
    "3403": {
      "op": "DUP4"
    },
    "3404": {
      "op": "PUSH2",
      "value": "0xD18"
    },
    "3407": {
      "jump": "i",
      "op": "JUMP"
    },
    "3408": {
      "op": "JUMPDEST"
    },
    "3409": {
      "op": "SWAP5"
    },
    "3410": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3412": {
      "op": "SWAP4"
    },
    "3413": {
      "op": "SWAP1"
    },
    "3414": {
      "op": "SWAP4"
    },
    "3415": {
      "op": "ADD"
    },
    "3416": {
      "op": "CALLDATALOAD"
    },
    "3417": {
      "op": "SWAP4"
    },
    "3418": {
      "op": "POP"
    },
    "3419": {
      "op": "POP"
    },
    "3420": {
      "op": "POP"
    },
    "3421": {
      "jump": "o",
      "op": "JUMP"
    },
    "3422": {
      "op": "JUMPDEST"
    },
    "3423": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3425": {
      "op": "DUP1"
    },
    "3426": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3428": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3430": {
      "op": "DUP5"
    },
    "3431": {
      "op": "DUP7"
    },
    "3432": {
      "op": "SUB"
    },
    "3433": {
      "op": "SLT"
    },
    "3434": {
      "op": "ISZERO"
    },
    "3435": {
      "op": "PUSH2",
      "value": "0xD73"
    },
    "3438": {
      "op": "JUMPI"
    },
    "3439": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3441": {
      "op": "DUP1"
    },
    "3442": {
      "op": "REVERT"
    },
    "3443": {
      "op": "JUMPDEST"
    },
    "3444": {
      "op": "PUSH2",
      "value": "0xD7C"
    },
    "3447": {
      "op": "DUP5"
    },
    "3448": {
      "op": "PUSH2",
      "value": "0xD18"
    },
    "3451": {
      "jump": "i",
      "op": "JUMP"
    },
    "3452": {
      "op": "JUMPDEST"
    },
    "3453": {
      "op": "SWAP3"
    },
    "3454": {
      "op": "POP"
    },
    "3455": {
      "op": "PUSH2",
      "value": "0xD8A"
    },
    "3458": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3460": {
      "op": "DUP6"
    },
    "3461": {
      "op": "ADD"
    },
    "3462": {
      "op": "PUSH2",
      "value": "0xD18"
    },
    "3465": {
      "jump": "i",
      "op": "JUMP"
    },
    "3466": {
      "op": "JUMPDEST"
    },
    "3467": {
      "op": "SWAP2"
    },
    "3468": {
      "op": "POP"
    },
    "3469": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3471": {
      "op": "DUP5"
    },
    "3472": {
      "op": "ADD"
    },
    "3473": {
      "op": "CALLDATALOAD"
    },
    "3474": {
      "op": "SWAP1"
    },
    "3475": {
      "op": "POP"
    },
    "3476": {
      "op": "SWAP3"
    },
    "3477": {
      "op": "POP"
    },
    "3478": {
      "op": "SWAP3"
    },
    "3479": {
      "op": "POP"
    },
    "3480": {
      "op": "SWAP3"
    },
    "3481": {
      "jump": "o",
      "op": "JUMP"
    },
    "3482": {
      "op": "JUMPDEST"
    },
    "3483": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3485": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3487": {
      "op": "DUP3"
    },
    "3488": {
      "op": "DUP5"
    },
    "3489": {
      "op": "SUB"
    },
    "3490": {
      "op": "SLT"
    },
    "3491": {
      "op": "ISZERO"
    },
    "3492": {
      "op": "PUSH2",
      "value": "0xDAC"
    },
    "3495": {
      "op": "JUMPI"
    },
    "3496": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3498": {
      "op": "DUP1"
    },
    "3499": {
      "op": "REVERT"
    },
    "3500": {
      "op": "JUMPDEST"
    },
    "3501": {
      "op": "PUSH2",
      "value": "0x642"
    },
    "3504": {
      "op": "DUP3"
    },
    "3505": {
      "op": "PUSH2",
      "value": "0xD18"
    },
    "3508": {
      "jump": "i",
      "op": "JUMP"
    },
    "3509": {
      "op": "JUMPDEST"
    },
    "3510": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3512": {
      "op": "DUP1"
    },
    "3513": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3515": {
      "op": "DUP4"
    },
    "3516": {
      "op": "DUP6"
    },
    "3517": {
      "op": "SUB"
    },
    "3518": {
      "op": "SLT"
    },
    "3519": {
      "op": "ISZERO"
    },
    "3520": {
      "op": "PUSH2",
      "value": "0xDC8"
    },
    "3523": {
      "op": "JUMPI"
    },
    "3524": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3526": {
      "op": "DUP1"
    },
    "3527": {
      "op": "REVERT"
    },
    "3528": {
      "op": "JUMPDEST"
    },
    "3529": {
      "op": "PUSH2",
      "value": "0xDD1"
    },
    "3532": {
      "op": "DUP4"
    },
    "3533": {
      "op": "PUSH2",
      "value": "0xD18"
    },
    "3536": {
      "jump": "i",
      "op": "JUMP"
    },
    "3537": {
      "op": "JUMPDEST"
    },
    "3538": {
      "op": "SWAP2"
    },
    "3539": {
      "op": "POP"
    },
    "3540": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3542": {
      "op": "DUP4"
    },
    "3543": {
      "op": "ADD"
    },
    "3544": {
      "op": "CALLDATALOAD"
    },
    "3545": {
      "op": "DUP1"
    },
    "3546": {
      "op": "ISZERO"
    },
    "3547": {
      "op": "ISZERO"
    },
    "3548": {
      "op": "DUP2"
    },
    "3549": {
      "op": "EQ"
    },
    "3550": {
      "op": "PUSH2",
      "value": "0xDE6"
    },
    "3553": {
      "op": "JUMPI"
    },
    "3554": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3556": {
      "op": "DUP1"
    },
    "3557": {
      "op": "REVERT"
    },
    "3558": {
      "op": "JUMPDEST"
    },
    "3559": {
      "op": "DUP1"
    },
    "3560": {
      "op": "SWAP2"
    },
    "3561": {
      "op": "POP"
    },
    "3562": {
      "op": "POP"
    },
    "3563": {
      "op": "SWAP3"
    },
    "3564": {
      "op": "POP"
    },
    "3565": {
      "op": "SWAP3"
    },
    "3566": {
      "op": "SWAP1"
    },
    "3567": {
      "op": "POP"
    },
    "3568": {
      "jump": "o",
      "op": "JUMP"
    },
    "3569": {
      "op": "JUMPDEST"
    },
    "3570": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3575": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3577": {
      "op": "SHL"
    },
    "3578": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3580": {
      "op": "MSTORE"
    },
    "3581": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "3583": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3585": {
      "op": "MSTORE"
    },
    "3586": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3588": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3590": {
      "op": "REVERT"
    },
    "3591": {
      "op": "JUMPDEST"
    },
    "3592": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3594": {
      "op": "DUP1"
    },
    "3595": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3597": {
      "op": "DUP1"
    },
    "3598": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3600": {
      "op": "DUP6"
    },
    "3601": {
      "op": "DUP8"
    },
    "3602": {
      "op": "SUB"
    },
    "3603": {
      "op": "SLT"
    },
    "3604": {
      "op": "ISZERO"
    },
    "3605": {
      "op": "PUSH2",
      "value": "0xE1D"
    },
    "3608": {
      "op": "JUMPI"
    },
    "3609": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3611": {
      "op": "DUP1"
    },
    "3612": {
      "op": "REVERT"
    },
    "3613": {
      "op": "JUMPDEST"
    },
    "3614": {
      "op": "PUSH2",
      "value": "0xE26"
    },
    "3617": {
      "op": "DUP6"
    },
    "3618": {
      "op": "PUSH2",
      "value": "0xD18"
    },
    "3621": {
      "jump": "i",
      "op": "JUMP"
    },
    "3622": {
      "op": "JUMPDEST"
    },
    "3623": {
      "op": "SWAP4"
    },
    "3624": {
      "op": "POP"
    },
    "3625": {
      "op": "PUSH2",
      "value": "0xE34"
    },
    "3628": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3630": {
      "op": "DUP7"
    },
    "3631": {
      "op": "ADD"
    },
    "3632": {
      "op": "PUSH2",
      "value": "0xD18"
    },
    "3635": {
      "jump": "i",
      "op": "JUMP"
    },
    "3636": {
      "op": "JUMPDEST"
    },
    "3637": {
      "op": "SWAP3"
    },
    "3638": {
      "op": "POP"
    },
    "3639": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3641": {
      "op": "DUP6"
    },
    "3642": {
      "op": "ADD"
    },
    "3643": {
      "op": "CALLDATALOAD"
    },
    "3644": {
      "op": "SWAP2"
    },
    "3645": {
      "op": "POP"
    },
    "3646": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3648": {
      "op": "DUP6"
    },
    "3649": {
      "op": "ADD"
    },
    "3650": {
      "op": "CALLDATALOAD"
    },
    "3651": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3660": {
      "op": "DUP1"
    },
    "3661": {
      "op": "DUP3"
    },
    "3662": {
      "op": "GT"
    },
    "3663": {
      "op": "ISZERO"
    },
    "3664": {
      "op": "PUSH2",
      "value": "0xE58"
    },
    "3667": {
      "op": "JUMPI"
    },
    "3668": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3670": {
      "op": "DUP1"
    },
    "3671": {
      "op": "REVERT"
    },
    "3672": {
      "op": "JUMPDEST"
    },
    "3673": {
      "op": "DUP2"
    },
    "3674": {
      "op": "DUP8"
    },
    "3675": {
      "op": "ADD"
    },
    "3676": {
      "op": "SWAP2"
    },
    "3677": {
      "op": "POP"
    },
    "3678": {
      "op": "DUP8"
    },
    "3679": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3681": {
      "op": "DUP4"
    },
    "3682": {
      "op": "ADD"
    },
    "3683": {
      "op": "SLT"
    },
    "3684": {
      "op": "PUSH2",
      "value": "0xE6C"
    },
    "3687": {
      "op": "JUMPI"
    },
    "3688": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3690": {
      "op": "DUP1"
    },
    "3691": {
      "op": "REVERT"
    },
    "3692": {
      "op": "JUMPDEST"
    },
    "3693": {
      "op": "DUP2"
    },
    "3694": {
      "op": "CALLDATALOAD"
    },
    "3695": {
      "op": "DUP2"
    },
    "3696": {
      "op": "DUP2"
    },
    "3697": {
      "op": "GT"
    },
    "3698": {
      "op": "ISZERO"
    },
    "3699": {
      "op": "PUSH2",
      "value": "0xE7E"
    },
    "3702": {
      "op": "JUMPI"
    },
    "3703": {
      "op": "PUSH2",
      "value": "0xE7E"
    },
    "3706": {
      "op": "PUSH2",
      "value": "0xDF1"
    },
    "3709": {
      "jump": "i",
      "op": "JUMP"
    },
    "3710": {
      "op": "JUMPDEST"
    },
    "3711": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3713": {
      "op": "MLOAD"
    },
    "3714": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3716": {
      "op": "DUP3"
    },
    "3717": {
      "op": "ADD"
    },
    "3718": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3720": {
      "op": "NOT"
    },
    "3721": {
      "op": "SWAP1"
    },
    "3722": {
      "op": "DUP2"
    },
    "3723": {
      "op": "AND"
    },
    "3724": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "3726": {
      "op": "ADD"
    },
    "3727": {
      "op": "AND"
    },
    "3728": {
      "op": "DUP2"
    },
    "3729": {
      "op": "ADD"
    },
    "3730": {
      "op": "SWAP1"
    },
    "3731": {
      "op": "DUP4"
    },
    "3732": {
      "op": "DUP3"
    },
    "3733": {
      "op": "GT"
    },
    "3734": {
      "op": "DUP2"
    },
    "3735": {
      "op": "DUP4"
    },
    "3736": {
      "op": "LT"
    },
    "3737": {
      "op": "OR"
    },
    "3738": {
      "op": "ISZERO"
    },
    "3739": {
      "op": "PUSH2",
      "value": "0xEA6"
    },
    "3742": {
      "op": "JUMPI"
    },
    "3743": {
      "op": "PUSH2",
      "value": "0xEA6"
    },
    "3746": {
      "op": "PUSH2",
      "value": "0xDF1"
    },
    "3749": {
      "jump": "i",
      "op": "JUMP"
    },
    "3750": {
      "op": "JUMPDEST"
    },
    "3751": {
      "op": "DUP2"
    },
    "3752": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3754": {
      "op": "MSTORE"
    },
    "3755": {
      "op": "DUP3"
    },
    "3756": {
      "op": "DUP2"
    },
    "3757": {
      "op": "MSTORE"
    },
    "3758": {
      "op": "DUP11"
    },
    "3759": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3761": {
      "op": "DUP5"
    },
    "3762": {
      "op": "DUP8"
    },
    "3763": {
      "op": "ADD"
    },
    "3764": {
      "op": "ADD"
    },
    "3765": {
      "op": "GT"
    },
    "3766": {
      "op": "ISZERO"
    },
    "3767": {
      "op": "PUSH2",
      "value": "0xEBF"
    },
    "3770": {
      "op": "JUMPI"
    },
    "3771": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3773": {
      "op": "DUP1"
    },
    "3774": {
      "op": "REVERT"
    },
    "3775": {
      "op": "JUMPDEST"
    },
    "3776": {
      "op": "DUP3"
    },
    "3777": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3779": {
      "op": "DUP7"
    },
    "3780": {
      "op": "ADD"
    },
    "3781": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3783": {
      "op": "DUP4"
    },
    "3784": {
      "op": "ADD"
    },
    "3785": {
      "op": "CALLDATACOPY"
    },
    "3786": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3788": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3790": {
      "op": "DUP5"
    },
    "3791": {
      "op": "DUP4"
    },
    "3792": {
      "op": "ADD"
    },
    "3793": {
      "op": "ADD"
    },
    "3794": {
      "op": "MSTORE"
    },
    "3795": {
      "op": "DUP1"
    },
    "3796": {
      "op": "SWAP6"
    },
    "3797": {
      "op": "POP"
    },
    "3798": {
      "op": "POP"
    },
    "3799": {
      "op": "POP"
    },
    "3800": {
      "op": "POP"
    },
    "3801": {
      "op": "POP"
    },
    "3802": {
      "op": "POP"
    },
    "3803": {
      "op": "SWAP3"
    },
    "3804": {
      "op": "SWAP6"
    },
    "3805": {
      "op": "SWAP2"
    },
    "3806": {
      "op": "SWAP5"
    },
    "3807": {
      "op": "POP"
    },
    "3808": {
      "op": "SWAP3"
    },
    "3809": {
      "op": "POP"
    },
    "3810": {
      "jump": "o",
      "op": "JUMP"
    },
    "3811": {
      "op": "JUMPDEST"
    },
    "3812": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3814": {
      "op": "DUP1"
    },
    "3815": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3817": {
      "op": "DUP4"
    },
    "3818": {
      "op": "DUP6"
    },
    "3819": {
      "op": "SUB"
    },
    "3820": {
      "op": "SLT"
    },
    "3821": {
      "op": "ISZERO"
    },
    "3822": {
      "op": "PUSH2",
      "value": "0xEF6"
    },
    "3825": {
      "op": "JUMPI"
    },
    "3826": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3828": {
      "op": "DUP1"
    },
    "3829": {
      "op": "REVERT"
    },
    "3830": {
      "op": "JUMPDEST"
    },
    "3831": {
      "op": "PUSH2",
      "value": "0xEFF"
    },
    "3834": {
      "op": "DUP4"
    },
    "3835": {
      "op": "PUSH2",
      "value": "0xD18"
    },
    "3838": {
      "jump": "i",
      "op": "JUMP"
    },
    "3839": {
      "op": "JUMPDEST"
    },
    "3840": {
      "op": "SWAP2"
    },
    "3841": {
      "op": "POP"
    },
    "3842": {
      "op": "PUSH2",
      "value": "0xF0D"
    },
    "3845": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3847": {
      "op": "DUP5"
    },
    "3848": {
      "op": "ADD"
    },
    "3849": {
      "op": "PUSH2",
      "value": "0xD18"
    },
    "3852": {
      "jump": "i",
      "op": "JUMP"
    },
    "3853": {
      "op": "JUMPDEST"
    },
    "3854": {
      "op": "SWAP1"
    },
    "3855": {
      "op": "POP"
    },
    "3856": {
      "op": "SWAP3"
    },
    "3857": {
      "op": "POP"
    },
    "3858": {
      "op": "SWAP3"
    },
    "3859": {
      "op": "SWAP1"
    },
    "3860": {
      "op": "POP"
    },
    "3861": {
      "jump": "o",
      "op": "JUMP"
    },
    "3862": {
      "op": "JUMPDEST"
    },
    "3863": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3865": {
      "op": "DUP2"
    },
    "3866": {
      "op": "DUP2"
    },
    "3867": {
      "op": "SHR"
    },
    "3868": {
      "op": "SWAP1"
    },
    "3869": {
      "op": "DUP3"
    },
    "3870": {
      "op": "AND"
    },
    "3871": {
      "op": "DUP1"
    },
    "3872": {
      "op": "PUSH2",
      "value": "0xF2A"
    },
    "3875": {
      "op": "JUMPI"
    },
    "3876": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "3878": {
      "op": "DUP3"
    },
    "3879": {
      "op": "AND"
    },
    "3880": {
      "op": "SWAP2"
    },
    "3881": {
      "op": "POP"
    },
    "3882": {
      "op": "JUMPDEST"
    },
    "3883": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3885": {
      "op": "DUP3"
    },
    "3886": {
      "op": "LT"
    },
    "3887": {
      "op": "DUP2"
    },
    "3888": {
      "op": "SUB"
    },
    "3889": {
      "op": "PUSH2",
      "value": "0xF4A"
    },
    "3892": {
      "op": "JUMPI"
    },
    "3893": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3898": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3900": {
      "op": "SHL"
    },
    "3901": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3903": {
      "op": "MSTORE"
    },
    "3904": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "3906": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3908": {
      "op": "MSTORE"
    },
    "3909": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3911": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3913": {
      "op": "REVERT"
    },
    "3914": {
      "op": "JUMPDEST"
    },
    "3915": {
      "op": "POP"
    },
    "3916": {
      "op": "SWAP2"
    },
    "3917": {
      "op": "SWAP1"
    },
    "3918": {
      "op": "POP"
    },
    "3919": {
      "jump": "o",
      "op": "JUMP"
    },
    "3920": {
      "op": "JUMPDEST"
    },
    "3921": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3923": {
      "op": "DUP1"
    },
    "3924": {
      "op": "DUP3"
    },
    "3925": {
      "op": "MSTORE"
    },
    "3926": {
      "op": "PUSH1",
      "value": "0x2D"
    },
    "3928": {
      "op": "SWAP1"
    },
    "3929": {
      "op": "DUP3"
    },
    "3930": {
      "op": "ADD"
    },
    "3931": {
      "op": "MSTORE"
    },
    "3932": {
      "op": "PUSH32",
      "value": "0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65"
    },
    "3965": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3967": {
      "op": "DUP3"
    },
    "3968": {
      "op": "ADD"
    },
    "3969": {
      "op": "MSTORE"
    },
    "3970": {
      "op": "PUSH13",
      "value": "0x1C881BDC88185C1C1C9BDD9959"
    },
    "3984": {
      "op": "PUSH1",
      "value": "0x9A"
    },
    "3986": {
      "op": "SHL"
    },
    "3987": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3989": {
      "op": "DUP3"
    },
    "3990": {
      "op": "ADD"
    },
    "3991": {
      "op": "MSTORE"
    },
    "3992": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3994": {
      "op": "ADD"
    },
    "3995": {
      "op": "SWAP1"
    },
    "3996": {
      "jump": "o",
      "op": "JUMP"
    },
    "3997": {
      "op": "JUMPDEST"
    },
    "3998": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4000": {
      "op": "DUP4"
    },
    "4001": {
      "op": "MLOAD"
    },
    "4002": {
      "op": "PUSH2",
      "value": "0xFAF"
    },
    "4005": {
      "op": "DUP2"
    },
    "4006": {
      "op": "DUP5"
    },
    "4007": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4009": {
      "op": "DUP9"
    },
    "4010": {
      "op": "ADD"
    },
    "4011": {
      "op": "PUSH2",
      "value": "0xC9C"
    },
    "4014": {
      "jump": "i",
      "op": "JUMP"
    },
    "4015": {
      "op": "JUMPDEST"
    },
    "4016": {
      "op": "DUP4"
    },
    "4017": {
      "op": "MLOAD"
    },
    "4018": {
      "op": "SWAP1"
    },
    "4019": {
      "op": "DUP4"
    },
    "4020": {
      "op": "ADD"
    },
    "4021": {
      "op": "SWAP1"
    },
    "4022": {
      "op": "PUSH2",
      "value": "0xFC3"
    },
    "4025": {
      "op": "DUP2"
    },
    "4026": {
      "op": "DUP4"
    },
    "4027": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4029": {
      "op": "DUP9"
    },
    "4030": {
      "op": "ADD"
    },
    "4031": {
      "op": "PUSH2",
      "value": "0xC9C"
    },
    "4034": {
      "jump": "i",
      "op": "JUMP"
    },
    "4035": {
      "op": "JUMPDEST"
    },
    "4036": {
      "op": "ADD"
    },
    "4037": {
      "op": "SWAP5"
    },
    "4038": {
      "op": "SWAP4"
    },
    "4039": {
      "op": "POP"
    },
    "4040": {
      "op": "POP"
    },
    "4041": {
      "op": "POP"
    },
    "4042": {
      "op": "POP"
    },
    "4043": {
      "jump": "o",
      "op": "JUMP"
    },
    "4044": {
      "op": "JUMPDEST"
    },
    "4045": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4047": {
      "op": "DUP1"
    },
    "4048": {
      "op": "DUP3"
    },
    "4049": {
      "op": "MSTORE"
    },
    "4050": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "4052": {
      "op": "SWAP1"
    },
    "4053": {
      "op": "DUP3"
    },
    "4054": {
      "op": "ADD"
    },
    "4055": {
      "op": "MSTORE"
    },
    "4056": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E736665722066726F6D20696E636F727265637420"
    },
    "4089": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4091": {
      "op": "DUP3"
    },
    "4092": {
      "op": "ADD"
    },
    "4093": {
      "op": "MSTORE"
    },
    "4094": {
      "op": "PUSH5",
      "value": "0x37BBB732B9"
    },
    "4100": {
      "op": "PUSH1",
      "value": "0xD9"
    },
    "4102": {
      "op": "SHL"
    },
    "4103": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4105": {
      "op": "DUP3"
    },
    "4106": {
      "op": "ADD"
    },
    "4107": {
      "op": "MSTORE"
    },
    "4108": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4110": {
      "op": "ADD"
    },
    "4111": {
      "op": "SWAP1"
    },
    "4112": {
      "jump": "o",
      "op": "JUMP"
    },
    "4113": {
      "op": "JUMPDEST"
    },
    "4114": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4116": {
      "op": "DUP1"
    },
    "4117": {
      "op": "DUP3"
    },
    "4118": {
      "op": "MSTORE"
    },
    "4119": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "4121": {
      "op": "SWAP1"
    },
    "4122": {
      "op": "DUP3"
    },
    "4123": {
      "op": "ADD"
    },
    "4124": {
      "op": "MSTORE"
    },
    "4125": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265"
    },
    "4158": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4160": {
      "op": "DUP3"
    },
    "4161": {
      "op": "ADD"
    },
    "4162": {
      "op": "MSTORE"
    },
    "4163": {
      "op": "PUSH18",
      "value": "0x31B2B4BB32B91034B6B83632B6B2B73A32B9"
    },
    "4182": {
      "op": "PUSH1",
      "value": "0x71"
    },
    "4184": {
      "op": "SHL"
    },
    "4185": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4187": {
      "op": "DUP3"
    },
    "4188": {
      "op": "ADD"
    },
    "4189": {
      "op": "MSTORE"
    },
    "4190": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4192": {
      "op": "ADD"
    },
    "4193": {
      "op": "SWAP1"
    },
    "4194": {
      "jump": "o",
      "op": "JUMP"
    },
    "4195": {
      "op": "JUMPDEST"
    },
    "4196": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4198": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4200": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4202": {
      "op": "SHL"
    },
    "4203": {
      "op": "SUB"
    },
    "4204": {
      "op": "DUP6"
    },
    "4205": {
      "op": "DUP2"
    },
    "4206": {
      "op": "AND"
    },
    "4207": {
      "op": "DUP3"
    },
    "4208": {
      "op": "MSTORE"
    },
    "4209": {
      "op": "DUP5"
    },
    "4210": {
      "op": "AND"
    },
    "4211": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4213": {
      "op": "DUP3"
    },
    "4214": {
      "op": "ADD"
    },
    "4215": {
      "op": "MSTORE"
    },
    "4216": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4218": {
      "op": "DUP2"
    },
    "4219": {
      "op": "ADD"
    },
    "4220": {
      "op": "DUP4"
    },
    "4221": {
      "op": "SWAP1"
    },
    "4222": {
      "op": "MSTORE"
    },
    "4223": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4225": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4227": {
      "op": "DUP3"
    },
    "4228": {
      "op": "ADD"
    },
    "4229": {
      "op": "DUP2"
    },
    "4230": {
      "op": "SWAP1"
    },
    "4231": {
      "op": "MSTORE"
    },
    "4232": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4234": {
      "op": "SWAP1"
    },
    "4235": {
      "op": "PUSH2",
      "value": "0x1096"
    },
    "4238": {
      "op": "SWAP1"
    },
    "4239": {
      "op": "DUP4"
    },
    "4240": {
      "op": "ADD"
    },
    "4241": {
      "op": "DUP5"
    },
    "4242": {
      "op": "PUSH2",
      "value": "0xCC0"
    },
    "4245": {
      "jump": "i",
      "op": "JUMP"
    },
    "4246": {
      "op": "JUMPDEST"
    },
    "4247": {
      "op": "SWAP7"
    },
    "4248": {
      "op": "SWAP6"
    },
    "4249": {
      "op": "POP"
    },
    "4250": {
      "op": "POP"
    },
    "4251": {
      "op": "POP"
    },
    "4252": {
      "op": "POP"
    },
    "4253": {
      "op": "POP"
    },
    "4254": {
      "op": "POP"
    },
    "4255": {
      "jump": "o",
      "op": "JUMP"
    },
    "4256": {
      "op": "JUMPDEST"
    },
    "4257": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4259": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4261": {
      "op": "DUP3"
    },
    "4262": {
      "op": "DUP5"
    },
    "4263": {
      "op": "SUB"
    },
    "4264": {
      "op": "SLT"
    },
    "4265": {
      "op": "ISZERO"
    },
    "4266": {
      "op": "PUSH2",
      "value": "0x10B2"
    },
    "4269": {
      "op": "JUMPI"
    },
    "4270": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4272": {
      "op": "DUP1"
    },
    "4273": {
      "op": "REVERT"
    },
    "4274": {
      "op": "JUMPDEST"
    },
    "4275": {
      "op": "DUP2"
    },
    "4276": {
      "op": "MLOAD"
    },
    "4277": {
      "op": "PUSH2",
      "value": "0x642"
    },
    "4280": {
      "op": "DUP2"
    },
    "4281": {
      "op": "PUSH2",
      "value": "0xC69"
    },
    "4284": {
      "jump": "i",
      "op": "JUMP"
    }
  },
  "sha1": "3ef1c13aff4d3d870cba5c08009f9ac4a7ba9333",
  "source": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC721.sol\";\nimport \"./IERC721Receiver.sol\";\nimport \"./extensions/IERC721Metadata.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/Context.sol\";\nimport \"../../utils/Strings.sol\";\nimport \"../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\n    using Address for address;\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Mapping from token ID to owner address\n    mapping(uint256 => address) private _owners;\n\n    // Mapping owner address to token count\n    mapping(address => uint256) private _balances;\n\n    // Mapping from token ID to approved address\n    mapping(uint256 => address) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual override returns (uint256) {\n        require(owner != address(0), \"ERC721: address zero is not a valid owner\");\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\n        address owner = _ownerOf(tokenId);\n        require(owner != address(0), \"ERC721: invalid token ID\");\n        return owner;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        _requireMinted(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual override {\n        address owner = ERC721.ownerOf(tokenId);\n        require(to != owner, \"ERC721: approval to current owner\");\n\n        require(\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\n            \"ERC721: approve caller is not token owner or approved for all\"\n        );\n\n        _approve(to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\n        _requireMinted(tokenId);\n\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual override {\n        //solhint-disable-next-line max-line-length\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\");\n\n        _transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public virtual override {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual override {\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\");\n        _safeTransfer(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        require(_checkOnERC721Received(from, to, tokenId, data), \"ERC721: transfer to non ERC721Receiver implementer\");\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted (`_mint`),\n     * and stop existing when they are burned (`_burn`).\n     */\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\n        return _ownerOf(tokenId) != address(0);\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\n        address owner = ERC721.ownerOf(tokenId);\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Safely mints `tokenId` and transfers it to `to`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal virtual {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        require(\n            _checkOnERC721Received(address(0), to, tokenId, data),\n            \"ERC721: transfer to non ERC721Receiver implementer\"\n        );\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal virtual {\n        require(to != address(0), \"ERC721: mint to the zero address\");\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        _beforeTokenTransfer(address(0), to, tokenId, 1);\n\n        // Check that tokenId was not minted by `_beforeTokenTransfer` hook\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        unchecked {\n            // Will not overflow unless all 2**256 token ids are minted to the same owner.\n            // Given that tokens are minted one by one, it is impossible in practice that\n            // this ever happens. Might change if we allow batch minting.\n            // The ERC fails to describe this case.\n            _balances[to] += 1;\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(address(0), to, tokenId);\n\n        _afterTokenTransfer(address(0), to, tokenId, 1);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        address owner = ERC721.ownerOf(tokenId);\n\n        _beforeTokenTransfer(owner, address(0), tokenId, 1);\n\n        // Update ownership in case tokenId was transferred by `_beforeTokenTransfer` hook\n        owner = ERC721.ownerOf(tokenId);\n\n        // Clear approvals\n        delete _tokenApprovals[tokenId];\n\n        unchecked {\n            // Cannot overflow, as that would require more tokens to be burned/transferred\n            // out than the owner initially received through minting and transferring in.\n            _balances[owner] -= 1;\n        }\n        delete _owners[tokenId];\n\n        emit Transfer(owner, address(0), tokenId);\n\n        _afterTokenTransfer(owner, address(0), tokenId, 1);\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal virtual {\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\");\n        require(to != address(0), \"ERC721: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, tokenId, 1);\n\n        // Check that tokenId was not transferred by `_beforeTokenTransfer` hook\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\");\n\n        // Clear approvals from the previous owner\n        delete _tokenApprovals[tokenId];\n\n        unchecked {\n            // `_balances[from]` cannot overflow for the same reason as described in `_burn`:\n            // `from`'s balance is the number of token held, which is at least one before the current\n            // transfer.\n            // `_balances[to]` could overflow in the conditions described in `_mint`. That would require\n            // all 2**256 token ids to be minted, which in practice is impossible.\n            _balances[from] -= 1;\n            _balances[to] += 1;\n        }\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        _afterTokenTransfer(from, to, tokenId, 1);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * Emits an {Approval} event.\n     */\n    function _approve(address to, uint256 tokenId) internal virtual {\n        _tokenApprovals[tokenId] = to;\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        require(owner != operator, \"ERC721: approve to caller\");\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` has not been minted yet.\n     */\n    function _requireMinted(uint256 tokenId) internal view virtual {\n        require(_exists(tokenId), \"ERC721: invalid token ID\");\n    }\n\n    /**\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n     * The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     * @return bool whether the call correctly returned the expected magic value\n     */\n    function _checkOnERC721Received(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) private returns (bool) {\n        if (to.isContract()) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                return retval == IERC721Receiver.onERC721Received.selector;\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert(\"ERC721: transfer to non ERC721Receiver implementer\");\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        } else {\n            return true;\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\n     * - When `from` is zero, the tokens will be minted for `to`.\n     * - When `to` is zero, ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     * - `batchSize` is non-zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 firstTokenId, uint256 batchSize) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\n     * - When `from` is zero, the tokens were minted for `to`.\n     * - When `to` is zero, ``from``'s tokens were burned.\n     * - `from` and `to` are never both zero.\n     * - `batchSize` is non-zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(address from, address to, uint256 firstTokenId, uint256 batchSize) internal virtual {}\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * WARNING: Anyone calling this MUST ensure that the balances remain consistent with the ownership. The invariant\n     * being that for any address `a` the value returned by `balanceOf(a)` must be equal to the number of tokens such\n     * that `ownerOf(tokenId)` is `a`.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function __unsafe_increaseBalance(address account, uint256 amount) internal {\n        _balances[account] += amount;\n    }\n}\n",
  "sourceMap": "628:16377:1:-:0;;;1390:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1456:5;:13;1464:5;1456;:13;:::i;:::-;-1:-1:-1;1479:7:1;:17;1489:7;1479;:17;:::i;:::-;;1390:113;;628:16377;;14:127:13;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:844;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:13;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:13;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;732:3;725:4;720:2;712:6;708:15;704:26;701:35;698:55;;;749:1;746;739:12;698:55;771:1;762:10;;781:133;795:2;792:1;789:9;781:133;;;883:14;;;879:23;;873:30;852:14;;;848:23;;841:63;806:10;;;;781:133;;;958:1;951:4;946:2;938:6;934:15;930:26;923:37;978:6;969:15;;;;;;146:844;;;;:::o;995:562::-;1094:6;1102;1155:2;1143:9;1134:7;1130:23;1126:32;1123:52;;;1171:1;1168;1161:12;1123:52;1198:16;;-1:-1:-1;;;;;1263:14:13;;;1260:34;;;1290:1;1287;1280:12;1260:34;1313:61;1366:7;1357:6;1346:9;1342:22;1313:61;:::i;:::-;1303:71;;1420:2;1409:9;1405:18;1399:25;1383:41;;1449:2;1439:8;1436:16;1433:36;;;1465:1;1462;1455:12;1433:36;;1488:63;1543:7;1532:8;1521:9;1517:24;1488:63;:::i;:::-;1478:73;;;995:562;;;;;:::o;1562:380::-;1641:1;1637:12;;;;1684;;;1705:61;;1759:4;1751:6;1747:17;1737:27;;1705:61;1812:2;1804:6;1801:14;1781:18;1778:38;1775:161;;1858:10;1853:3;1849:20;1846:1;1839:31;1893:4;1890:1;1883:15;1921:4;1918:1;1911:15;1775:161;;1562:380;;;:::o;2073:543::-;2175:2;2170:3;2167:11;2164:446;;;2211:1;2235:5;2232:1;2225:16;2279:4;2276:1;2266:18;2349:2;2337:10;2333:19;2330:1;2326:27;2320:4;2316:38;2385:4;2373:10;2370:20;2367:47;;;-1:-1:-1;2408:4:13;2367:47;2463:2;2458:3;2454:12;2451:1;2447:20;2441:4;2437:31;2427:41;;2518:82;2536:2;2529:5;2526:13;2518:82;;;2581:17;;;2562:1;2551:13;2518:82;;;2522:3;;;2164:446;2073:543;;;:::o;2792:1345::-;2912:10;;-1:-1:-1;;;;;2934:30:13;;2931:56;;;2967:18;;:::i;:::-;2996:97;3086:6;3046:38;3078:4;3072:11;3046:38;:::i;:::-;3040:4;2996:97;:::i;:::-;3148:4;;3205:2;3194:14;;3222:1;3217:663;;;;3924:1;3941:6;3938:89;;;-1:-1:-1;3993:19:13;;;3987:26;3938:89;-1:-1:-1;;2749:1:13;2745:11;;;2741:24;2737:29;2727:40;2773:1;2769:11;;;2724:57;4040:81;;3187:944;;3217:663;2020:1;2013:14;;;2057:4;2044:18;;-1:-1:-1;;3253:20:13;;;3371:236;3385:7;3382:1;3379:14;3371:236;;;3474:19;;;3468:26;3453:42;;3566:27;;;;3534:1;3522:14;;;;3401:19;;3371:236;;;3375:3;3635:6;3626:7;3623:19;3620:201;;;3696:19;;;3690:26;-1:-1:-1;;3779:1:13;3775:14;;;3791:3;3771:24;3767:37;3763:42;3748:58;3733:74;;3620:201;-1:-1:-1;;;;;3867:1:13;3851:14;;;3847:22;3834:36;;-1:-1:-1;2792:1345:13:o;:::-;628:16377:1;;;;;;",
  "sourcePath": "/Users/tuannguyen/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.9.6/contracts/token/ERC721/ERC721.sol",
  "type": "contract"
}